// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/protobuf/unittest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf_unittest {

namespace {

const ::google::protobuf::Descriptor* TestAllTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_reflection_ = NULL;
struct TestAllTypesOneofInstance {
  ::google::protobuf::uint32 oneof_uint32_;
  const ::protobuf_unittest::TestAllTypes_NestedMessage* oneof_nested_message_;
  const ::std::string* oneof_string_;
  const ::std::string* oneof_bytes_;
}* TestAllTypes_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestAllTypes_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_NestedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestAllTypes_OptionalGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_OptionalGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestAllTypes_RepeatedGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllTypes_RepeatedGroup_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TestAllTypes_NestedEnum_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NestedTestAllTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NestedTestAllTypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDeprecatedFields_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDeprecatedFields_reflection_ = NULL;
const ::google::protobuf::Descriptor* ForeignMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ForeignMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestAllExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestAllExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* OptionalGroup_extension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OptionalGroup_extension_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepeatedGroup_extension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepeatedGroup_extension_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestNestedExtension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestNestedExtension_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestRequired_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequired_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestRequiredForeign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequiredForeign_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestForeignNested_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestForeignNested_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEmptyMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEmptyMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEmptyMessageWithExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEmptyMessageWithExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMultipleExtensionRanges_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMultipleExtensionRanges_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestReallyLargeTagNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestReallyLargeTagNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestRecursiveMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRecursiveMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMutualRecursionA_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMutualRecursionA_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMutualRecursionB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMutualRecursionB_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDupFieldNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDupFieldNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDupFieldNumber_Foo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDupFieldNumber_Foo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDupFieldNumber_Bar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDupFieldNumber_Bar_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEagerMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEagerMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestLazyMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestLazyMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestNestedMessageHasBits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestNestedMessageHasBits_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestNestedMessageHasBits_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestNestedMessageHasBits_NestedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestCamelCaseFieldNames_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestCamelCaseFieldNames_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldOrderings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldOrderings_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestExtremeDefaultValues_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestExtremeDefaultValues_reflection_ = NULL;
const ::google::protobuf::Descriptor* SparseEnumMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SparseEnumMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneString_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneString_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoreString_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoreString_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneBytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneBytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoreBytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoreBytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Int32Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Int32Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Uint32Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Uint32Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Int64Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Int64Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Uint64Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Uint64Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* BoolMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BoolMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneof_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof_reflection_ = NULL;
struct TestOneofOneofInstance {
  ::google::protobuf::int32 foo_int_;
  const ::std::string* foo_string_;
  const ::protobuf_unittest::TestAllTypes* foo_message_;
  const ::protobuf_unittest::TestOneof_FooGroup* foogroup_;
}* TestOneof_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestOneof_FooGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof_FooGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneofBackwardsCompatible_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible_FooGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneofBackwardsCompatible_FooGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneof2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof2_reflection_ = NULL;
struct TestOneof2OneofInstance {
  ::google::protobuf::int32 foo_int_;
  const ::std::string* foo_string_;
  const ::std::string* foo_cord_;
  const ::std::string* foo_string_piece_;
  const ::std::string* foo_bytes_;
  int foo_enum_;
  const ::protobuf_unittest::TestOneof2_NestedMessage* foo_message_;
  const ::protobuf_unittest::TestOneof2_FooGroup* foogroup_;
  const ::protobuf_unittest::TestOneof2_NestedMessage* foo_lazy_message_;
  ::google::protobuf::int32 bar_int_;
  const ::std::string* bar_string_;
  const ::std::string* bar_cord_;
  const ::std::string* bar_string_piece_;
  const ::std::string* bar_bytes_;
  int bar_enum_;
}* TestOneof2_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestOneof2_FooGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof2_FooGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestOneof2_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestOneof2_NestedMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TestOneof2_NestedEnum_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestRequiredOneof_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequiredOneof_reflection_ = NULL;
struct TestRequiredOneofOneofInstance {
  ::google::protobuf::int32 foo_int_;
  const ::std::string* foo_string_;
  const ::protobuf_unittest::TestRequiredOneof_NestedMessage* foo_message_;
}* TestRequiredOneof_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestRequiredOneof_NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequiredOneof_NestedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestPackedTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestPackedTypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestUnpackedTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestUnpackedTypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestPackedExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestPackedExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestUnpackedExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestUnpackedExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDynamicExtensions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDynamicExtensions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestDynamicExtensions_DynamicMessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestDynamicExtensions_DynamicMessageType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TestDynamicExtensions_DynamicEnumType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestRepeatedScalarDifferentTagSizes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRepeatedScalarDifferentTagSizes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedFieldsGenerator_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_OptionalGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_OptionalGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParsingMerge_RepeatedGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestCommentInjectionMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestCommentInjectionMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooClientMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooClientMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooServerMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooServerMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* BarRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BarRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BarResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BarResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TestEnumWithDupValue_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TestSparseEnum_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* TestService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2funittest_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/unittest.proto");
  GOOGLE_CHECK(file != NULL);
  TestAllTypes_descriptor_ = file->message_type(0);
  static const int TestAllTypes_offsets_[76] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optionalgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_nested_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_foreign_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_import_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_nested_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_foreign_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_import_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_string_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_cord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_public_import_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, optional_lazy_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeatedgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_nested_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_foreign_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_import_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_nested_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_foreign_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_import_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_string_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_cord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, repeated_lazy_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_nested_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_foreign_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_import_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_string_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, default_cord_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_uint32_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_nested_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestAllTypes_default_oneof_instance_, oneof_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, oneof_field_),
  };
  TestAllTypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestAllTypes_descriptor_,
      TestAllTypes::default_instance_,
      TestAllTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, _unknown_fields_),
      -1,
      TestAllTypes_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestAllTypes));
  TestAllTypes_NestedMessage_descriptor_ = TestAllTypes_descriptor_->nested_type(0);
  static const int TestAllTypes_NestedMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_NestedMessage, bb_),
  };
  TestAllTypes_NestedMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestAllTypes_NestedMessage_descriptor_,
      TestAllTypes_NestedMessage::default_instance_,
      TestAllTypes_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_NestedMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_NestedMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestAllTypes_NestedMessage));
  TestAllTypes_OptionalGroup_descriptor_ = TestAllTypes_descriptor_->nested_type(1);
  static const int TestAllTypes_OptionalGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_OptionalGroup, a_),
  };
  TestAllTypes_OptionalGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestAllTypes_OptionalGroup_descriptor_,
      TestAllTypes_OptionalGroup::default_instance_,
      TestAllTypes_OptionalGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_OptionalGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_OptionalGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestAllTypes_OptionalGroup));
  TestAllTypes_RepeatedGroup_descriptor_ = TestAllTypes_descriptor_->nested_type(2);
  static const int TestAllTypes_RepeatedGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_RepeatedGroup, a_),
  };
  TestAllTypes_RepeatedGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestAllTypes_RepeatedGroup_descriptor_,
      TestAllTypes_RepeatedGroup::default_instance_,
      TestAllTypes_RepeatedGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestAllTypes_RepeatedGroup));
  TestAllTypes_NestedEnum_descriptor_ = TestAllTypes_descriptor_->enum_type(0);
  NestedTestAllTypes_descriptor_ = file->message_type(1);
  static const int NestedTestAllTypes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, child_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, payload_),
  };
  NestedTestAllTypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NestedTestAllTypes_descriptor_,
      NestedTestAllTypes::default_instance_,
      NestedTestAllTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedTestAllTypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NestedTestAllTypes));
  TestDeprecatedFields_descriptor_ = file->message_type(2);
  static const int TestDeprecatedFields_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDeprecatedFields, deprecated_int32_),
  };
  TestDeprecatedFields_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestDeprecatedFields_descriptor_,
      TestDeprecatedFields::default_instance_,
      TestDeprecatedFields_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDeprecatedFields, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDeprecatedFields, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestDeprecatedFields));
  ForeignMessage_descriptor_ = file->message_type(3);
  static const int ForeignMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForeignMessage, c_),
  };
  ForeignMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ForeignMessage_descriptor_,
      ForeignMessage::default_instance_,
      ForeignMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForeignMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForeignMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ForeignMessage));
  TestAllExtensions_descriptor_ = file->message_type(4);
  static const int TestAllExtensions_offsets_[1] = {
  };
  TestAllExtensions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestAllExtensions_descriptor_,
      TestAllExtensions::default_instance_,
      TestAllExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllExtensions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllExtensions, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestAllExtensions, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestAllExtensions));
  OptionalGroup_extension_descriptor_ = file->message_type(5);
  static const int OptionalGroup_extension_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionalGroup_extension, a_),
  };
  OptionalGroup_extension_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OptionalGroup_extension_descriptor_,
      OptionalGroup_extension::default_instance_,
      OptionalGroup_extension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionalGroup_extension, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionalGroup_extension, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OptionalGroup_extension));
  RepeatedGroup_extension_descriptor_ = file->message_type(6);
  static const int RepeatedGroup_extension_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatedGroup_extension, a_),
  };
  RepeatedGroup_extension_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RepeatedGroup_extension_descriptor_,
      RepeatedGroup_extension::default_instance_,
      RepeatedGroup_extension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatedGroup_extension, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatedGroup_extension, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RepeatedGroup_extension));
  TestNestedExtension_descriptor_ = file->message_type(7);
  static const int TestNestedExtension_offsets_[1] = {
  };
  TestNestedExtension_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestNestedExtension_descriptor_,
      TestNestedExtension::default_instance_,
      TestNestedExtension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedExtension, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedExtension, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestNestedExtension));
  TestRequired_descriptor_ = file->message_type(8);
  static const int TestRequired_offsets_[33] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy17_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy19_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy20_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy23_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy24_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy25_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy26_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy27_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy28_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy29_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy31_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, dummy32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, c_),
  };
  TestRequired_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestRequired_descriptor_,
      TestRequired::default_instance_,
      TestRequired_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequired, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestRequired));
  TestRequiredForeign_descriptor_ = file->message_type(9);
  static const int TestRequiredForeign_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, optional_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, repeated_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, dummy_),
  };
  TestRequiredForeign_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestRequiredForeign_descriptor_,
      TestRequiredForeign::default_instance_,
      TestRequiredForeign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredForeign, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestRequiredForeign));
  TestForeignNested_descriptor_ = file->message_type(10);
  static const int TestForeignNested_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestForeignNested, foreign_nested_),
  };
  TestForeignNested_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestForeignNested_descriptor_,
      TestForeignNested::default_instance_,
      TestForeignNested_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestForeignNested, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestForeignNested, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestForeignNested));
  TestEmptyMessage_descriptor_ = file->message_type(11);
  static const int TestEmptyMessage_offsets_[1] = {
  };
  TestEmptyMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestEmptyMessage_descriptor_,
      TestEmptyMessage::default_instance_,
      TestEmptyMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestEmptyMessage));
  TestEmptyMessageWithExtensions_descriptor_ = file->message_type(12);
  static const int TestEmptyMessageWithExtensions_offsets_[1] = {
  };
  TestEmptyMessageWithExtensions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestEmptyMessageWithExtensions_descriptor_,
      TestEmptyMessageWithExtensions::default_instance_,
      TestEmptyMessageWithExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessageWithExtensions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessageWithExtensions, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmptyMessageWithExtensions, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestEmptyMessageWithExtensions));
  TestMultipleExtensionRanges_descriptor_ = file->message_type(13);
  static const int TestMultipleExtensionRanges_offsets_[1] = {
  };
  TestMultipleExtensionRanges_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMultipleExtensionRanges_descriptor_,
      TestMultipleExtensionRanges::default_instance_,
      TestMultipleExtensionRanges_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMultipleExtensionRanges, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMultipleExtensionRanges, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMultipleExtensionRanges, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMultipleExtensionRanges));
  TestReallyLargeTagNumber_descriptor_ = file->message_type(14);
  static const int TestReallyLargeTagNumber_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, bb_),
  };
  TestReallyLargeTagNumber_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestReallyLargeTagNumber_descriptor_,
      TestReallyLargeTagNumber::default_instance_,
      TestReallyLargeTagNumber_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestReallyLargeTagNumber, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestReallyLargeTagNumber));
  TestRecursiveMessage_descriptor_ = file->message_type(15);
  static const int TestRecursiveMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, i_),
  };
  TestRecursiveMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestRecursiveMessage_descriptor_,
      TestRecursiveMessage::default_instance_,
      TestRecursiveMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRecursiveMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestRecursiveMessage));
  TestMutualRecursionA_descriptor_ = file->message_type(16);
  static const int TestMutualRecursionA_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionA, bb_),
  };
  TestMutualRecursionA_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMutualRecursionA_descriptor_,
      TestMutualRecursionA::default_instance_,
      TestMutualRecursionA_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionA, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionA, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMutualRecursionA));
  TestMutualRecursionB_descriptor_ = file->message_type(17);
  static const int TestMutualRecursionB_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, optional_int32_),
  };
  TestMutualRecursionB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMutualRecursionB_descriptor_,
      TestMutualRecursionB::default_instance_,
      TestMutualRecursionB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMutualRecursionB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMutualRecursionB));
  TestDupFieldNumber_descriptor_ = file->message_type(18);
  static const int TestDupFieldNumber_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, foo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, bar_),
  };
  TestDupFieldNumber_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestDupFieldNumber_descriptor_,
      TestDupFieldNumber::default_instance_,
      TestDupFieldNumber_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestDupFieldNumber));
  TestDupFieldNumber_Foo_descriptor_ = TestDupFieldNumber_descriptor_->nested_type(0);
  static const int TestDupFieldNumber_Foo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Foo, a_),
  };
  TestDupFieldNumber_Foo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestDupFieldNumber_Foo_descriptor_,
      TestDupFieldNumber_Foo::default_instance_,
      TestDupFieldNumber_Foo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Foo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Foo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestDupFieldNumber_Foo));
  TestDupFieldNumber_Bar_descriptor_ = TestDupFieldNumber_descriptor_->nested_type(1);
  static const int TestDupFieldNumber_Bar_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Bar, a_),
  };
  TestDupFieldNumber_Bar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestDupFieldNumber_Bar_descriptor_,
      TestDupFieldNumber_Bar::default_instance_,
      TestDupFieldNumber_Bar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Bar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDupFieldNumber_Bar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestDupFieldNumber_Bar));
  TestEagerMessage_descriptor_ = file->message_type(19);
  static const int TestEagerMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEagerMessage, sub_message_),
  };
  TestEagerMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestEagerMessage_descriptor_,
      TestEagerMessage::default_instance_,
      TestEagerMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEagerMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEagerMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestEagerMessage));
  TestLazyMessage_descriptor_ = file->message_type(20);
  static const int TestLazyMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestLazyMessage, sub_message_),
  };
  TestLazyMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestLazyMessage_descriptor_,
      TestLazyMessage::default_instance_,
      TestLazyMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestLazyMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestLazyMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestLazyMessage));
  TestNestedMessageHasBits_descriptor_ = file->message_type(21);
  static const int TestNestedMessageHasBits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits, optional_nested_message_),
  };
  TestNestedMessageHasBits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestNestedMessageHasBits_descriptor_,
      TestNestedMessageHasBits::default_instance_,
      TestNestedMessageHasBits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestNestedMessageHasBits));
  TestNestedMessageHasBits_NestedMessage_descriptor_ = TestNestedMessageHasBits_descriptor_->nested_type(0);
  static const int TestNestedMessageHasBits_NestedMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, nestedmessage_repeated_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, nestedmessage_repeated_foreignmessage_),
  };
  TestNestedMessageHasBits_NestedMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestNestedMessageHasBits_NestedMessage_descriptor_,
      TestNestedMessageHasBits_NestedMessage::default_instance_,
      TestNestedMessageHasBits_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestNestedMessageHasBits_NestedMessage));
  TestCamelCaseFieldNames_descriptor_ = file->message_type(22);
  static const int TestCamelCaseFieldNames_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, primitivefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, stringfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, enumfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, messagefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, stringpiecefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, cordfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedprimitivefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedstringfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedenumfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedmessagefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedstringpiecefield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, repeatedcordfield_),
  };
  TestCamelCaseFieldNames_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestCamelCaseFieldNames_descriptor_,
      TestCamelCaseFieldNames::default_instance_,
      TestCamelCaseFieldNames_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCamelCaseFieldNames, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestCamelCaseFieldNames));
  TestFieldOrderings_descriptor_ = file->message_type(23);
  static const int TestFieldOrderings_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, my_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, my_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, my_float_),
  };
  TestFieldOrderings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldOrderings_descriptor_,
      TestFieldOrderings::default_instance_,
      TestFieldOrderings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldOrderings, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldOrderings));
  TestExtremeDefaultValues_descriptor_ = file->message_type(24);
  static const int TestExtremeDefaultValues_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, escaped_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, large_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, large_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, really_small_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, really_small_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, utf8_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, zero_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, one_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, negative_one_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, negative_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, large_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, small_negative_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, inf_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, neg_inf_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, nan_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, inf_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, neg_inf_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, nan_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, cpp_trigraph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, string_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, bytes_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, string_piece_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, cord_with_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, replacement_string_),
  };
  TestExtremeDefaultValues_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestExtremeDefaultValues_descriptor_,
      TestExtremeDefaultValues::default_instance_,
      TestExtremeDefaultValues_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestExtremeDefaultValues, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestExtremeDefaultValues));
  SparseEnumMessage_descriptor_ = file->message_type(25);
  static const int SparseEnumMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseEnumMessage, sparse_enum_),
  };
  SparseEnumMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SparseEnumMessage_descriptor_,
      SparseEnumMessage::default_instance_,
      SparseEnumMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseEnumMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseEnumMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SparseEnumMessage));
  OneString_descriptor_ = file->message_type(26);
  static const int OneString_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneString, data_),
  };
  OneString_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OneString_descriptor_,
      OneString::default_instance_,
      OneString_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneString, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneString, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OneString));
  MoreString_descriptor_ = file->message_type(27);
  static const int MoreString_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreString, data_),
  };
  MoreString_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoreString_descriptor_,
      MoreString::default_instance_,
      MoreString_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreString, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreString, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoreString));
  OneBytes_descriptor_ = file->message_type(28);
  static const int OneBytes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBytes, data_),
  };
  OneBytes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OneBytes_descriptor_,
      OneBytes::default_instance_,
      OneBytes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBytes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBytes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OneBytes));
  MoreBytes_descriptor_ = file->message_type(29);
  static const int MoreBytes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreBytes, data_),
  };
  MoreBytes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoreBytes_descriptor_,
      MoreBytes::default_instance_,
      MoreBytes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreBytes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoreBytes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoreBytes));
  Int32Message_descriptor_ = file->message_type(30);
  static const int Int32Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Message, data_),
  };
  Int32Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Int32Message_descriptor_,
      Int32Message::default_instance_,
      Int32Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Int32Message));
  Uint32Message_descriptor_ = file->message_type(31);
  static const int Uint32Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32Message, data_),
  };
  Uint32Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Uint32Message_descriptor_,
      Uint32Message::default_instance_,
      Uint32Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Uint32Message));
  Int64Message_descriptor_ = file->message_type(32);
  static const int Int64Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64Message, data_),
  };
  Int64Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Int64Message_descriptor_,
      Int64Message::default_instance_,
      Int64Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Int64Message));
  Uint64Message_descriptor_ = file->message_type(33);
  static const int Uint64Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint64Message, data_),
  };
  Uint64Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Uint64Message_descriptor_,
      Uint64Message::default_instance_,
      Uint64Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint64Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint64Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Uint64Message));
  BoolMessage_descriptor_ = file->message_type(34);
  static const int BoolMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolMessage, data_),
  };
  BoolMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BoolMessage_descriptor_,
      BoolMessage::default_instance_,
      BoolMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BoolMessage));
  TestOneof_descriptor_ = file->message_type(35);
  static const int TestOneof_offsets_[5] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foo_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foo_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foo_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof_default_oneof_instance_, foogroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, foo_),
  };
  TestOneof_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestOneof_descriptor_,
      TestOneof::default_instance_,
      TestOneof_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, _unknown_fields_),
      -1,
      TestOneof_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestOneof));
  TestOneof_FooGroup_descriptor_ = TestOneof_descriptor_->nested_type(0);
  static const int TestOneof_FooGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, b_),
  };
  TestOneof_FooGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestOneof_FooGroup_descriptor_,
      TestOneof_FooGroup::default_instance_,
      TestOneof_FooGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof_FooGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestOneof_FooGroup));
  TestOneofBackwardsCompatible_descriptor_ = file->message_type(36);
  static const int TestOneofBackwardsCompatible_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foo_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foo_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foo_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, foogroup_),
  };
  TestOneofBackwardsCompatible_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestOneofBackwardsCompatible_descriptor_,
      TestOneofBackwardsCompatible::default_instance_,
      TestOneofBackwardsCompatible_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestOneofBackwardsCompatible));
  TestOneofBackwardsCompatible_FooGroup_descriptor_ = TestOneofBackwardsCompatible_descriptor_->nested_type(0);
  static const int TestOneofBackwardsCompatible_FooGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, b_),
  };
  TestOneofBackwardsCompatible_FooGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestOneofBackwardsCompatible_FooGroup_descriptor_,
      TestOneofBackwardsCompatible_FooGroup::default_instance_,
      TestOneofBackwardsCompatible_FooGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestOneofBackwardsCompatible_FooGroup));
  TestOneof2_descriptor_ = file->message_type(37);
  static const int TestOneof2_offsets_[19] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_cord_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_string_piece_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_bytes_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_enum_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foogroup_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, foo_lazy_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_cord_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_string_piece_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_bytes_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestOneof2_default_oneof_instance_, bar_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, baz_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, baz_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, foo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, bar_),
  };
  TestOneof2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestOneof2_descriptor_,
      TestOneof2::default_instance_,
      TestOneof2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, _unknown_fields_),
      -1,
      TestOneof2_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestOneof2));
  TestOneof2_FooGroup_descriptor_ = TestOneof2_descriptor_->nested_type(0);
  static const int TestOneof2_FooGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, b_),
  };
  TestOneof2_FooGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestOneof2_FooGroup_descriptor_,
      TestOneof2_FooGroup::default_instance_,
      TestOneof2_FooGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_FooGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestOneof2_FooGroup));
  TestOneof2_NestedMessage_descriptor_ = TestOneof2_descriptor_->nested_type(1);
  static const int TestOneof2_NestedMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, qux_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, corge_int_),
  };
  TestOneof2_NestedMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestOneof2_NestedMessage_descriptor_,
      TestOneof2_NestedMessage::default_instance_,
      TestOneof2_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOneof2_NestedMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestOneof2_NestedMessage));
  TestOneof2_NestedEnum_descriptor_ = TestOneof2_descriptor_->enum_type(0);
  TestRequiredOneof_descriptor_ = file->message_type(38);
  static const int TestRequiredOneof_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestRequiredOneof_default_oneof_instance_, foo_int_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestRequiredOneof_default_oneof_instance_, foo_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestRequiredOneof_default_oneof_instance_, foo_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, foo_),
  };
  TestRequiredOneof_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestRequiredOneof_descriptor_,
      TestRequiredOneof::default_instance_,
      TestRequiredOneof_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, _unknown_fields_),
      -1,
      TestRequiredOneof_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestRequiredOneof));
  TestRequiredOneof_NestedMessage_descriptor_ = TestRequiredOneof_descriptor_->nested_type(0);
  static const int TestRequiredOneof_NestedMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof_NestedMessage, required_double_),
  };
  TestRequiredOneof_NestedMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestRequiredOneof_NestedMessage_descriptor_,
      TestRequiredOneof_NestedMessage::default_instance_,
      TestRequiredOneof_NestedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestRequiredOneof_NestedMessage));
  TestPackedTypes_descriptor_ = file->message_type(39);
  static const int TestPackedTypes_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, packed_enum_),
  };
  TestPackedTypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestPackedTypes_descriptor_,
      TestPackedTypes::default_instance_,
      TestPackedTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedTypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestPackedTypes));
  TestUnpackedTypes_descriptor_ = file->message_type(40);
  static const int TestUnpackedTypes_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, unpacked_enum_),
  };
  TestUnpackedTypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestUnpackedTypes_descriptor_,
      TestUnpackedTypes::default_instance_,
      TestUnpackedTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedTypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestUnpackedTypes));
  TestPackedExtensions_descriptor_ = file->message_type(41);
  static const int TestPackedExtensions_offsets_[1] = {
  };
  TestPackedExtensions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestPackedExtensions_descriptor_,
      TestPackedExtensions::default_instance_,
      TestPackedExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedExtensions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedExtensions, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPackedExtensions, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestPackedExtensions));
  TestUnpackedExtensions_descriptor_ = file->message_type(42);
  static const int TestUnpackedExtensions_offsets_[1] = {
  };
  TestUnpackedExtensions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestUnpackedExtensions_descriptor_,
      TestUnpackedExtensions::default_instance_,
      TestUnpackedExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedExtensions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedExtensions, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestUnpackedExtensions, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestUnpackedExtensions));
  TestDynamicExtensions_descriptor_ = file->message_type(43);
  static const int TestDynamicExtensions_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, scalar_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, enum_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, dynamic_enum_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, message_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, dynamic_message_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, repeated_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, packed_extension_),
  };
  TestDynamicExtensions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestDynamicExtensions_descriptor_,
      TestDynamicExtensions::default_instance_,
      TestDynamicExtensions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestDynamicExtensions));
  TestDynamicExtensions_DynamicMessageType_descriptor_ = TestDynamicExtensions_descriptor_->nested_type(0);
  static const int TestDynamicExtensions_DynamicMessageType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, dynamic_field_),
  };
  TestDynamicExtensions_DynamicMessageType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestDynamicExtensions_DynamicMessageType_descriptor_,
      TestDynamicExtensions_DynamicMessageType::default_instance_,
      TestDynamicExtensions_DynamicMessageType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestDynamicExtensions_DynamicMessageType));
  TestDynamicExtensions_DynamicEnumType_descriptor_ = TestDynamicExtensions_descriptor_->enum_type(0);
  TestRepeatedScalarDifferentTagSizes_descriptor_ = file->message_type(44);
  static const int TestRepeatedScalarDifferentTagSizes_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, repeated_uint64_),
  };
  TestRepeatedScalarDifferentTagSizes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestRepeatedScalarDifferentTagSizes_descriptor_,
      TestRepeatedScalarDifferentTagSizes::default_instance_,
      TestRepeatedScalarDifferentTagSizes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestRepeatedScalarDifferentTagSizes));
  TestParsingMerge_descriptor_ = file->message_type(45);
  static const int TestParsingMerge_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, required_all_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, optional_all_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, repeated_all_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, optionalgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, repeatedgroup_),
  };
  TestParsingMerge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestParsingMerge_descriptor_,
      TestParsingMerge::default_instance_,
      TestParsingMerge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestParsingMerge));
  TestParsingMerge_RepeatedFieldsGenerator_descriptor_ = TestParsingMerge_descriptor_->nested_type(0);
  static const int TestParsingMerge_RepeatedFieldsGenerator_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, field1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, field2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, field3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, group1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, group2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, ext1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, ext2_),
  };
  TestParsingMerge_RepeatedFieldsGenerator_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestParsingMerge_RepeatedFieldsGenerator_descriptor_,
      TestParsingMerge_RepeatedFieldsGenerator::default_instance_,
      TestParsingMerge_RepeatedFieldsGenerator_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestParsingMerge_RepeatedFieldsGenerator));
  TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_ = TestParsingMerge_RepeatedFieldsGenerator_descriptor_->nested_type(0);
  static const int TestParsingMerge_RepeatedFieldsGenerator_Group1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, field1_),
  };
  TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_,
      TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance_,
      TestParsingMerge_RepeatedFieldsGenerator_Group1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestParsingMerge_RepeatedFieldsGenerator_Group1));
  TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_ = TestParsingMerge_RepeatedFieldsGenerator_descriptor_->nested_type(1);
  static const int TestParsingMerge_RepeatedFieldsGenerator_Group2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, field1_),
  };
  TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_,
      TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance_,
      TestParsingMerge_RepeatedFieldsGenerator_Group2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestParsingMerge_RepeatedFieldsGenerator_Group2));
  TestParsingMerge_OptionalGroup_descriptor_ = TestParsingMerge_descriptor_->nested_type(1);
  static const int TestParsingMerge_OptionalGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_OptionalGroup, optional_group_all_types_),
  };
  TestParsingMerge_OptionalGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestParsingMerge_OptionalGroup_descriptor_,
      TestParsingMerge_OptionalGroup::default_instance_,
      TestParsingMerge_OptionalGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestParsingMerge_OptionalGroup));
  TestParsingMerge_RepeatedGroup_descriptor_ = TestParsingMerge_descriptor_->nested_type(2);
  static const int TestParsingMerge_RepeatedGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, repeated_group_all_types_),
  };
  TestParsingMerge_RepeatedGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestParsingMerge_RepeatedGroup_descriptor_,
      TestParsingMerge_RepeatedGroup::default_instance_,
      TestParsingMerge_RepeatedGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestParsingMerge_RepeatedGroup));
  TestCommentInjectionMessage_descriptor_ = file->message_type(46);
  static const int TestCommentInjectionMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCommentInjectionMessage, a_),
  };
  TestCommentInjectionMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestCommentInjectionMessage_descriptor_,
      TestCommentInjectionMessage::default_instance_,
      TestCommentInjectionMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCommentInjectionMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestCommentInjectionMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestCommentInjectionMessage));
  FooRequest_descriptor_ = file->message_type(47);
  static const int FooRequest_offsets_[1] = {
  };
  FooRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FooRequest_descriptor_,
      FooRequest::default_instance_,
      FooRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FooRequest));
  FooResponse_descriptor_ = file->message_type(48);
  static const int FooResponse_offsets_[1] = {
  };
  FooResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FooResponse_descriptor_,
      FooResponse::default_instance_,
      FooResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FooResponse));
  FooClientMessage_descriptor_ = file->message_type(49);
  static const int FooClientMessage_offsets_[1] = {
  };
  FooClientMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FooClientMessage_descriptor_,
      FooClientMessage::default_instance_,
      FooClientMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooClientMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooClientMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FooClientMessage));
  FooServerMessage_descriptor_ = file->message_type(50);
  static const int FooServerMessage_offsets_[1] = {
  };
  FooServerMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FooServerMessage_descriptor_,
      FooServerMessage::default_instance_,
      FooServerMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooServerMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooServerMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FooServerMessage));
  BarRequest_descriptor_ = file->message_type(51);
  static const int BarRequest_offsets_[1] = {
  };
  BarRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BarRequest_descriptor_,
      BarRequest::default_instance_,
      BarRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BarRequest));
  BarResponse_descriptor_ = file->message_type(52);
  static const int BarResponse_offsets_[1] = {
  };
  BarResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BarResponse_descriptor_,
      BarResponse::default_instance_,
      BarResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BarResponse));
  ForeignEnum_descriptor_ = file->enum_type(0);
  TestEnumWithDupValue_descriptor_ = file->enum_type(1);
  TestSparseEnum_descriptor_ = file->enum_type(2);
  TestService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2funittest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestAllTypes_descriptor_, &TestAllTypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestAllTypes_NestedMessage_descriptor_, &TestAllTypes_NestedMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestAllTypes_OptionalGroup_descriptor_, &TestAllTypes_OptionalGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestAllTypes_RepeatedGroup_descriptor_, &TestAllTypes_RepeatedGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NestedTestAllTypes_descriptor_, &NestedTestAllTypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestDeprecatedFields_descriptor_, &TestDeprecatedFields::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ForeignMessage_descriptor_, &ForeignMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestAllExtensions_descriptor_, &TestAllExtensions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OptionalGroup_extension_descriptor_, &OptionalGroup_extension::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RepeatedGroup_extension_descriptor_, &RepeatedGroup_extension::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestNestedExtension_descriptor_, &TestNestedExtension::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestRequired_descriptor_, &TestRequired::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestRequiredForeign_descriptor_, &TestRequiredForeign::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestForeignNested_descriptor_, &TestForeignNested::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestEmptyMessage_descriptor_, &TestEmptyMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestEmptyMessageWithExtensions_descriptor_, &TestEmptyMessageWithExtensions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMultipleExtensionRanges_descriptor_, &TestMultipleExtensionRanges::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestReallyLargeTagNumber_descriptor_, &TestReallyLargeTagNumber::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestRecursiveMessage_descriptor_, &TestRecursiveMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMutualRecursionA_descriptor_, &TestMutualRecursionA::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMutualRecursionB_descriptor_, &TestMutualRecursionB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestDupFieldNumber_descriptor_, &TestDupFieldNumber::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestDupFieldNumber_Foo_descriptor_, &TestDupFieldNumber_Foo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestDupFieldNumber_Bar_descriptor_, &TestDupFieldNumber_Bar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestEagerMessage_descriptor_, &TestEagerMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestLazyMessage_descriptor_, &TestLazyMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestNestedMessageHasBits_descriptor_, &TestNestedMessageHasBits::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestNestedMessageHasBits_NestedMessage_descriptor_, &TestNestedMessageHasBits_NestedMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestCamelCaseFieldNames_descriptor_, &TestCamelCaseFieldNames::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldOrderings_descriptor_, &TestFieldOrderings::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestExtremeDefaultValues_descriptor_, &TestExtremeDefaultValues::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SparseEnumMessage_descriptor_, &SparseEnumMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OneString_descriptor_, &OneString::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoreString_descriptor_, &MoreString::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OneBytes_descriptor_, &OneBytes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoreBytes_descriptor_, &MoreBytes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Int32Message_descriptor_, &Int32Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Uint32Message_descriptor_, &Uint32Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Int64Message_descriptor_, &Int64Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Uint64Message_descriptor_, &Uint64Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BoolMessage_descriptor_, &BoolMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestOneof_descriptor_, &TestOneof::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestOneof_FooGroup_descriptor_, &TestOneof_FooGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestOneofBackwardsCompatible_descriptor_, &TestOneofBackwardsCompatible::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestOneofBackwardsCompatible_FooGroup_descriptor_, &TestOneofBackwardsCompatible_FooGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestOneof2_descriptor_, &TestOneof2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestOneof2_FooGroup_descriptor_, &TestOneof2_FooGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestOneof2_NestedMessage_descriptor_, &TestOneof2_NestedMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestRequiredOneof_descriptor_, &TestRequiredOneof::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestRequiredOneof_NestedMessage_descriptor_, &TestRequiredOneof_NestedMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestPackedTypes_descriptor_, &TestPackedTypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestUnpackedTypes_descriptor_, &TestUnpackedTypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestPackedExtensions_descriptor_, &TestPackedExtensions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestUnpackedExtensions_descriptor_, &TestUnpackedExtensions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestDynamicExtensions_descriptor_, &TestDynamicExtensions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestDynamicExtensions_DynamicMessageType_descriptor_, &TestDynamicExtensions_DynamicMessageType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestRepeatedScalarDifferentTagSizes_descriptor_, &TestRepeatedScalarDifferentTagSizes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestParsingMerge_descriptor_, &TestParsingMerge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestParsingMerge_RepeatedFieldsGenerator_descriptor_, &TestParsingMerge_RepeatedFieldsGenerator::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_, &TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_, &TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestParsingMerge_OptionalGroup_descriptor_, &TestParsingMerge_OptionalGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestParsingMerge_RepeatedGroup_descriptor_, &TestParsingMerge_RepeatedGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestCommentInjectionMessage_descriptor_, &TestCommentInjectionMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FooRequest_descriptor_, &FooRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FooResponse_descriptor_, &FooResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FooClientMessage_descriptor_, &FooClientMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FooServerMessage_descriptor_, &FooServerMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BarRequest_descriptor_, &BarRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BarResponse_descriptor_, &BarResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2funittest_2eproto() {
  delete TestAllTypes::default_instance_;
  delete TestAllTypes_default_oneof_instance_;
  delete TestAllTypes_reflection_;
  delete TestAllTypes::_default_default_string_;
  delete TestAllTypes::_default_default_bytes_;
  delete TestAllTypes::_default_default_string_piece_;
  delete TestAllTypes::_default_default_cord_;
  delete TestAllTypes_NestedMessage::default_instance_;
  delete TestAllTypes_NestedMessage_reflection_;
  delete TestAllTypes_OptionalGroup::default_instance_;
  delete TestAllTypes_OptionalGroup_reflection_;
  delete TestAllTypes_RepeatedGroup::default_instance_;
  delete TestAllTypes_RepeatedGroup_reflection_;
  delete NestedTestAllTypes::default_instance_;
  delete NestedTestAllTypes_reflection_;
  delete TestDeprecatedFields::default_instance_;
  delete TestDeprecatedFields_reflection_;
  delete ForeignMessage::default_instance_;
  delete ForeignMessage_reflection_;
  delete TestAllExtensions::default_instance_;
  delete TestAllExtensions_reflection_;
  delete OptionalGroup_extension::default_instance_;
  delete OptionalGroup_extension_reflection_;
  delete RepeatedGroup_extension::default_instance_;
  delete RepeatedGroup_extension_reflection_;
  delete TestNestedExtension::default_instance_;
  delete TestNestedExtension_reflection_;
  delete TestRequired::default_instance_;
  delete TestRequired_reflection_;
  delete TestRequiredForeign::default_instance_;
  delete TestRequiredForeign_reflection_;
  delete TestForeignNested::default_instance_;
  delete TestForeignNested_reflection_;
  delete TestEmptyMessage::default_instance_;
  delete TestEmptyMessage_reflection_;
  delete TestEmptyMessageWithExtensions::default_instance_;
  delete TestEmptyMessageWithExtensions_reflection_;
  delete TestMultipleExtensionRanges::default_instance_;
  delete TestMultipleExtensionRanges_reflection_;
  delete TestReallyLargeTagNumber::default_instance_;
  delete TestReallyLargeTagNumber_reflection_;
  delete TestRecursiveMessage::default_instance_;
  delete TestRecursiveMessage_reflection_;
  delete TestMutualRecursionA::default_instance_;
  delete TestMutualRecursionA_reflection_;
  delete TestMutualRecursionB::default_instance_;
  delete TestMutualRecursionB_reflection_;
  delete TestDupFieldNumber::default_instance_;
  delete TestDupFieldNumber_reflection_;
  delete TestDupFieldNumber_Foo::default_instance_;
  delete TestDupFieldNumber_Foo_reflection_;
  delete TestDupFieldNumber_Bar::default_instance_;
  delete TestDupFieldNumber_Bar_reflection_;
  delete TestEagerMessage::default_instance_;
  delete TestEagerMessage_reflection_;
  delete TestLazyMessage::default_instance_;
  delete TestLazyMessage_reflection_;
  delete TestNestedMessageHasBits::default_instance_;
  delete TestNestedMessageHasBits_reflection_;
  delete TestNestedMessageHasBits_NestedMessage::default_instance_;
  delete TestNestedMessageHasBits_NestedMessage_reflection_;
  delete TestCamelCaseFieldNames::default_instance_;
  delete TestCamelCaseFieldNames_reflection_;
  delete TestFieldOrderings::default_instance_;
  delete TestFieldOrderings_reflection_;
  delete TestExtremeDefaultValues::default_instance_;
  delete TestExtremeDefaultValues_reflection_;
  delete TestExtremeDefaultValues::_default_escaped_bytes_;
  delete TestExtremeDefaultValues::_default_utf8_string_;
  delete TestExtremeDefaultValues::_default_cpp_trigraph_;
  delete TestExtremeDefaultValues::_default_string_with_zero_;
  delete TestExtremeDefaultValues::_default_bytes_with_zero_;
  delete TestExtremeDefaultValues::_default_string_piece_with_zero_;
  delete TestExtremeDefaultValues::_default_cord_with_zero_;
  delete TestExtremeDefaultValues::_default_replacement_string_;
  delete SparseEnumMessage::default_instance_;
  delete SparseEnumMessage_reflection_;
  delete OneString::default_instance_;
  delete OneString_reflection_;
  delete MoreString::default_instance_;
  delete MoreString_reflection_;
  delete OneBytes::default_instance_;
  delete OneBytes_reflection_;
  delete MoreBytes::default_instance_;
  delete MoreBytes_reflection_;
  delete Int32Message::default_instance_;
  delete Int32Message_reflection_;
  delete Uint32Message::default_instance_;
  delete Uint32Message_reflection_;
  delete Int64Message::default_instance_;
  delete Int64Message_reflection_;
  delete Uint64Message::default_instance_;
  delete Uint64Message_reflection_;
  delete BoolMessage::default_instance_;
  delete BoolMessage_reflection_;
  delete TestOneof::default_instance_;
  delete TestOneof_default_oneof_instance_;
  delete TestOneof_reflection_;
  delete TestOneof_FooGroup::default_instance_;
  delete TestOneof_FooGroup_reflection_;
  delete TestOneofBackwardsCompatible::default_instance_;
  delete TestOneofBackwardsCompatible_reflection_;
  delete TestOneofBackwardsCompatible_FooGroup::default_instance_;
  delete TestOneofBackwardsCompatible_FooGroup_reflection_;
  delete TestOneof2::default_instance_;
  delete TestOneof2_default_oneof_instance_;
  delete TestOneof2_reflection_;
  delete TestOneof2::_default_bar_string_;
  delete TestOneof2::_default_bar_cord_;
  delete TestOneof2::_default_bar_string_piece_;
  delete TestOneof2::_default_bar_bytes_;
  delete TestOneof2::_default_baz_string_;
  delete TestOneof2_FooGroup::default_instance_;
  delete TestOneof2_FooGroup_reflection_;
  delete TestOneof2_NestedMessage::default_instance_;
  delete TestOneof2_NestedMessage_reflection_;
  delete TestRequiredOneof::default_instance_;
  delete TestRequiredOneof_default_oneof_instance_;
  delete TestRequiredOneof_reflection_;
  delete TestRequiredOneof_NestedMessage::default_instance_;
  delete TestRequiredOneof_NestedMessage_reflection_;
  delete TestPackedTypes::default_instance_;
  delete TestPackedTypes_reflection_;
  delete TestUnpackedTypes::default_instance_;
  delete TestUnpackedTypes_reflection_;
  delete TestPackedExtensions::default_instance_;
  delete TestPackedExtensions_reflection_;
  delete TestUnpackedExtensions::default_instance_;
  delete TestUnpackedExtensions_reflection_;
  delete TestDynamicExtensions::default_instance_;
  delete TestDynamicExtensions_reflection_;
  delete TestDynamicExtensions_DynamicMessageType::default_instance_;
  delete TestDynamicExtensions_DynamicMessageType_reflection_;
  delete TestRepeatedScalarDifferentTagSizes::default_instance_;
  delete TestRepeatedScalarDifferentTagSizes_reflection_;
  delete TestParsingMerge::default_instance_;
  delete TestParsingMerge_reflection_;
  delete TestParsingMerge_RepeatedFieldsGenerator::default_instance_;
  delete TestParsingMerge_RepeatedFieldsGenerator_reflection_;
  delete TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance_;
  delete TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_;
  delete TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance_;
  delete TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_;
  delete TestParsingMerge_OptionalGroup::default_instance_;
  delete TestParsingMerge_OptionalGroup_reflection_;
  delete TestParsingMerge_RepeatedGroup::default_instance_;
  delete TestParsingMerge_RepeatedGroup_reflection_;
  delete TestCommentInjectionMessage::default_instance_;
  delete TestCommentInjectionMessage_reflection_;
  delete TestCommentInjectionMessage::_default_a_;
  delete FooRequest::default_instance_;
  delete FooRequest_reflection_;
  delete FooResponse::default_instance_;
  delete FooResponse_reflection_;
  delete FooClientMessage::default_instance_;
  delete FooClientMessage_reflection_;
  delete FooServerMessage::default_instance_;
  delete FooServerMessage_reflection_;
  delete BarRequest::default_instance_;
  delete BarRequest_reflection_;
  delete BarResponse::default_instance_;
  delete BarResponse_reflection_;
}

void protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_unittest_import::protobuf_AddDesc_google_2fprotobuf_2funittest_5fimport_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036google/protobuf/unittest.proto\022\021protob"
    "uf_unittest\032%google/protobuf/unittest_im"
    "port.proto\"\355\030\n\014TestAllTypes\022\026\n\016optional_"
    "int32\030\001 \001(\005\022\026\n\016optional_int64\030\002 \001(\003\022\027\n\017o"
    "ptional_uint32\030\003 \001(\r\022\027\n\017optional_uint64\030"
    "\004 \001(\004\022\027\n\017optional_sint32\030\005 \001(\021\022\027\n\017option"
    "al_sint64\030\006 \001(\022\022\030\n\020optional_fixed32\030\007 \001("
    "\007\022\030\n\020optional_fixed64\030\010 \001(\006\022\031\n\021optional_"
    "sfixed32\030\t \001(\017\022\031\n\021optional_sfixed64\030\n \001("
    "\020\022\026\n\016optional_float\030\013 \001(\002\022\027\n\017optional_do"
    "uble\030\014 \001(\001\022\025\n\roptional_bool\030\r \001(\010\022\027\n\017opt"
    "ional_string\030\016 \001(\t\022\026\n\016optional_bytes\030\017 \001"
    "(\014\022D\n\roptionalgroup\030\020 \001(\n2-.protobuf_uni"
    "ttest.TestAllTypes.OptionalGroup\022N\n\027opti"
    "onal_nested_message\030\022 \001(\0132-.protobuf_uni"
    "ttest.TestAllTypes.NestedMessage\022C\n\030opti"
    "onal_foreign_message\030\023 \001(\0132!.protobuf_un"
    "ittest.ForeignMessage\022H\n\027optional_import"
    "_message\030\024 \001(\0132\'.protobuf_unittest_impor"
    "t.ImportMessage\022H\n\024optional_nested_enum\030"
    "\025 \001(\0162*.protobuf_unittest.TestAllTypes.N"
    "estedEnum\022=\n\025optional_foreign_enum\030\026 \001(\016"
    "2\036.protobuf_unittest.ForeignEnum\022B\n\024opti"
    "onal_import_enum\030\027 \001(\0162$.protobuf_unitte"
    "st_import.ImportEnum\022!\n\025optional_string_"
    "piece\030\030 \001(\tB\002\010\002\022\031\n\roptional_cord\030\031 \001(\tB\002"
    "\010\001\022U\n\036optional_public_import_message\030\032 \001"
    "(\0132-.protobuf_unittest_import.PublicImpo"
    "rtMessage\022P\n\025optional_lazy_message\030\033 \001(\013"
    "2-.protobuf_unittest.TestAllTypes.Nested"
    "MessageB\002(\001\022\026\n\016repeated_int32\030\037 \003(\005\022\026\n\016r"
    "epeated_int64\030  \003(\003\022\027\n\017repeated_uint32\030!"
    " \003(\r\022\027\n\017repeated_uint64\030\" \003(\004\022\027\n\017repeate"
    "d_sint32\030# \003(\021\022\027\n\017repeated_sint64\030$ \003(\022\022"
    "\030\n\020repeated_fixed32\030% \003(\007\022\030\n\020repeated_fi"
    "xed64\030& \003(\006\022\031\n\021repeated_sfixed32\030\' \003(\017\022\031"
    "\n\021repeated_sfixed64\030( \003(\020\022\026\n\016repeated_fl"
    "oat\030) \003(\002\022\027\n\017repeated_double\030* \003(\001\022\025\n\rre"
    "peated_bool\030+ \003(\010\022\027\n\017repeated_string\030, \003"
    "(\t\022\026\n\016repeated_bytes\030- \003(\014\022D\n\rrepeatedgr"
    "oup\030. \003(\n2-.protobuf_unittest.TestAllTyp"
    "es.RepeatedGroup\022N\n\027repeated_nested_mess"
    "age\0300 \003(\0132-.protobuf_unittest.TestAllTyp"
    "es.NestedMessage\022C\n\030repeated_foreign_mes"
    "sage\0301 \003(\0132!.protobuf_unittest.ForeignMe"
    "ssage\022H\n\027repeated_import_message\0302 \003(\0132\'"
    ".protobuf_unittest_import.ImportMessage\022"
    "H\n\024repeated_nested_enum\0303 \003(\0162*.protobuf"
    "_unittest.TestAllTypes.NestedEnum\022=\n\025rep"
    "eated_foreign_enum\0304 \003(\0162\036.protobuf_unit"
    "test.ForeignEnum\022B\n\024repeated_import_enum"
    "\0305 \003(\0162$.protobuf_unittest_import.Import"
    "Enum\022!\n\025repeated_string_piece\0306 \003(\tB\002\010\002\022"
    "\031\n\rrepeated_cord\0307 \003(\tB\002\010\001\022P\n\025repeated_l"
    "azy_message\0309 \003(\0132-.protobuf_unittest.Te"
    "stAllTypes.NestedMessageB\002(\001\022\031\n\rdefault_"
    "int32\030= \001(\005:\00241\022\031\n\rdefault_int64\030> \001(\003:\002"
    "42\022\032\n\016default_uint32\030\? \001(\r:\00243\022\032\n\016defaul"
    "t_uint64\030@ \001(\004:\00244\022\033\n\016default_sint32\030A \001"
    "(\021:\003-45\022\032\n\016default_sint64\030B \001(\022:\00246\022\033\n\017d"
    "efault_fixed32\030C \001(\007:\00247\022\033\n\017default_fixe"
    "d64\030D \001(\006:\00248\022\034\n\020default_sfixed32\030E \001(\017:"
    "\00249\022\035\n\020default_sfixed64\030F \001(\020:\003-50\022\033\n\rde"
    "fault_float\030G \001(\002:\00451.5\022\035\n\016default_doubl"
    "e\030H \001(\001:\00552000\022\032\n\014default_bool\030I \001(\010:\004tr"
    "ue\022\035\n\016default_string\030J \001(\t:\005hello\022\034\n\rdef"
    "ault_bytes\030K \001(\014:\005world\022L\n\023default_neste"
    "d_enum\030Q \001(\0162*.protobuf_unittest.TestAll"
    "Types.NestedEnum:\003BAR\022I\n\024default_foreign"
    "_enum\030R \001(\0162\036.protobuf_unittest.ForeignE"
    "num:\013FOREIGN_BAR\022M\n\023default_import_enum\030"
    "S \001(\0162$.protobuf_unittest_import.ImportE"
    "num:\nIMPORT_BAR\022%\n\024default_string_piece\030"
    "T \001(\t:\003abcB\002\010\002\022\035\n\014default_cord\030U \001(\t:\00312"
    "3B\002\010\001\022\026\n\014oneof_uint32\030o \001(\rH\000\022M\n\024oneof_n"
    "ested_message\030p \001(\0132-.protobuf_unittest."
    "TestAllTypes.NestedMessageH\000\022\026\n\014oneof_st"
    "ring\030q \001(\tH\000\022\025\n\013oneof_bytes\030r \001(\014H\000\032\033\n\rN"
    "estedMessage\022\n\n\002bb\030\001 \001(\005\032\032\n\rOptionalGrou"
    "p\022\t\n\001a\030\021 \001(\005\032\032\n\rRepeatedGroup\022\t\n\001a\030/ \001(\005"
    "\"9\n\nNestedEnum\022\007\n\003FOO\020\001\022\007\n\003BAR\020\002\022\007\n\003BAZ\020"
    "\003\022\020\n\003NEG\020\377\377\377\377\377\377\377\377\377\001B\r\n\013oneof_field\"|\n\022Ne"
    "stedTestAllTypes\0224\n\005child\030\001 \001(\0132%.protob"
    "uf_unittest.NestedTestAllTypes\0220\n\007payloa"
    "d\030\002 \001(\0132\037.protobuf_unittest.TestAllTypes"
    "\"4\n\024TestDeprecatedFields\022\034\n\020deprecated_i"
    "nt32\030\001 \001(\005B\002\030\001\"\033\n\016ForeignMessage\022\t\n\001c\030\001 "
    "\001(\005\"\035\n\021TestAllExtensions*\010\010\001\020\200\200\200\200\002\"$\n\027Op"
    "tionalGroup_extension\022\t\n\001a\030\021 \001(\005\"$\n\027Repe"
    "atedGroup_extension\022\t\n\001a\030/ \001(\005\"\230\001\n\023TestN"
    "estedExtension29\n\004test\022$.protobuf_unitte"
    "st.TestAllExtensions\030\352\007 \001(\t:\004test2F\n\027nes"
    "ted_string_extension\022$.protobuf_unittest"
    ".TestAllExtensions\030\353\007 \001(\t\"\325\005\n\014TestRequir"
    "ed\022\t\n\001a\030\001 \002(\005\022\016\n\006dummy2\030\002 \001(\005\022\t\n\001b\030\003 \002(\005"
    "\022\016\n\006dummy4\030\004 \001(\005\022\016\n\006dummy5\030\005 \001(\005\022\016\n\006dumm"
    "y6\030\006 \001(\005\022\016\n\006dummy7\030\007 \001(\005\022\016\n\006dummy8\030\010 \001(\005"
    "\022\016\n\006dummy9\030\t \001(\005\022\017\n\007dummy10\030\n \001(\005\022\017\n\007dum"
    "my11\030\013 \001(\005\022\017\n\007dummy12\030\014 \001(\005\022\017\n\007dummy13\030\r"
    " \001(\005\022\017\n\007dummy14\030\016 \001(\005\022\017\n\007dummy15\030\017 \001(\005\022\017"
    "\n\007dummy16\030\020 \001(\005\022\017\n\007dummy17\030\021 \001(\005\022\017\n\007dumm"
    "y18\030\022 \001(\005\022\017\n\007dummy19\030\023 \001(\005\022\017\n\007dummy20\030\024 "
    "\001(\005\022\017\n\007dummy21\030\025 \001(\005\022\017\n\007dummy22\030\026 \001(\005\022\017\n"
    "\007dummy23\030\027 \001(\005\022\017\n\007dummy24\030\030 \001(\005\022\017\n\007dummy"
    "25\030\031 \001(\005\022\017\n\007dummy26\030\032 \001(\005\022\017\n\007dummy27\030\033 \001"
    "(\005\022\017\n\007dummy28\030\034 \001(\005\022\017\n\007dummy29\030\035 \001(\005\022\017\n\007"
    "dummy30\030\036 \001(\005\022\017\n\007dummy31\030\037 \001(\005\022\017\n\007dummy3"
    "2\030  \001(\005\022\t\n\001c\030! \002(\0052V\n\006single\022$.protobuf_"
    "unittest.TestAllExtensions\030\350\007 \001(\0132\037.prot"
    "obuf_unittest.TestRequired2U\n\005multi\022$.pr"
    "otobuf_unittest.TestAllExtensions\030\351\007 \003(\013"
    "2\037.protobuf_unittest.TestRequired\"\232\001\n\023Te"
    "stRequiredForeign\0229\n\020optional_message\030\001 "
    "\001(\0132\037.protobuf_unittest.TestRequired\0229\n\020"
    "repeated_message\030\002 \003(\0132\037.protobuf_unitte"
    "st.TestRequired\022\r\n\005dummy\030\003 \001(\005\"Z\n\021TestFo"
    "reignNested\022E\n\016foreign_nested\030\001 \001(\0132-.pr"
    "otobuf_unittest.TestAllTypes.NestedMessa"
    "ge\"\022\n\020TestEmptyMessage\"*\n\036TestEmptyMessa"
    "geWithExtensions*\010\010\001\020\200\200\200\200\002\"7\n\033TestMultip"
    "leExtensionRanges*\004\010*\020+*\006\010\257 \020\224!*\n\010\200\200\004\020\200\200"
    "\200\200\002\"4\n\030TestReallyLargeTagNumber\022\t\n\001a\030\001 \001"
    "(\005\022\r\n\002bb\030\377\377\377\177 \001(\005\"U\n\024TestRecursiveMessag"
    "e\0222\n\001a\030\001 \001(\0132\'.protobuf_unittest.TestRec"
    "ursiveMessage\022\t\n\001i\030\002 \001(\005\"K\n\024TestMutualRe"
    "cursionA\0223\n\002bb\030\001 \001(\0132\'.protobuf_unittest"
    ".TestMutualRecursionB\"b\n\024TestMutualRecur"
    "sionB\0222\n\001a\030\001 \001(\0132\'.protobuf_unittest.Tes"
    "tMutualRecursionA\022\026\n\016optional_int32\030\002 \001("
    "\005\"\263\001\n\022TestDupFieldNumber\022\t\n\001a\030\001 \001(\005\0226\n\003f"
    "oo\030\002 \001(\n2).protobuf_unittest.TestDupFiel"
    "dNumber.Foo\0226\n\003bar\030\003 \001(\n2).protobuf_unit"
    "test.TestDupFieldNumber.Bar\032\020\n\003Foo\022\t\n\001a\030"
    "\001 \001(\005\032\020\n\003Bar\022\t\n\001a\030\001 \001(\005\"L\n\020TestEagerMess"
    "age\0228\n\013sub_message\030\001 \001(\0132\037.protobuf_unit"
    "test.TestAllTypesB\002(\000\"K\n\017TestLazyMessage"
    "\0228\n\013sub_message\030\001 \001(\0132\037.protobuf_unittes"
    "t.TestAllTypesB\002(\001\"\200\002\n\030TestNestedMessage"
    "HasBits\022Z\n\027optional_nested_message\030\001 \001(\013"
    "29.protobuf_unittest.TestNestedMessageHa"
    "sBits.NestedMessage\032\207\001\n\rNestedMessage\022$\n"
    "\034nestedmessage_repeated_int32\030\001 \003(\005\022P\n%n"
    "estedmessage_repeated_foreignmessage\030\002 \003"
    "(\0132!.protobuf_unittest.ForeignMessage\"\345\003"
    "\n\027TestCamelCaseFieldNames\022\026\n\016PrimitiveFi"
    "eld\030\001 \001(\005\022\023\n\013StringField\030\002 \001(\t\0221\n\tEnumFi"
    "eld\030\003 \001(\0162\036.protobuf_unittest.ForeignEnu"
    "m\0227\n\014MessageField\030\004 \001(\0132!.protobuf_unitt"
    "est.ForeignMessage\022\034\n\020StringPieceField\030\005"
    " \001(\tB\002\010\002\022\025\n\tCordField\030\006 \001(\tB\002\010\001\022\036\n\026Repea"
    "tedPrimitiveField\030\007 \003(\005\022\033\n\023RepeatedStrin"
    "gField\030\010 \003(\t\0229\n\021RepeatedEnumField\030\t \003(\0162"
    "\036.protobuf_unittest.ForeignEnum\022\?\n\024Repea"
    "tedMessageField\030\n \003(\0132!.protobuf_unittes"
    "t.ForeignMessage\022$\n\030RepeatedStringPieceF"
    "ield\030\013 \003(\tB\002\010\002\022\035\n\021RepeatedCordField\030\014 \003("
    "\tB\002\010\001\"U\n\022TestFieldOrderings\022\021\n\tmy_string"
    "\030\013 \001(\t\022\016\n\006my_int\030\001 \001(\003\022\020\n\010my_float\030e \001(\002"
    "*\004\010\002\020\013*\004\010\014\020e\"\266\007\n\030TestExtremeDefaultValue"
    "s\022\?\n\rescaped_bytes\030\001 \001(\014:(\\000\\001\\007\\0"
    "10\\014\\n\\r\\t\\013\\\\\\\'\\\"\\376\022 \n\014large_uint"
    "32\030\002 \001(\r:\n4294967295\022*\n\014large_uint64\030\003 \001"
    "(\004:\02418446744073709551615\022 \n\013small_int32\030"
    "\004 \001(\005:\013-2147483647\022)\n\013small_int64\030\005 \001(\003:"
    "\024-9223372036854775807\022\'\n\022really_small_in"
    "t32\030\025 \001(\005:\013-2147483648\0220\n\022really_small_i"
    "nt64\030\026 \001(\003:\024-9223372036854775808\022\030\n\013utf8"
    "_string\030\006 \001(\t:\003\341\210\264\022\025\n\nzero_float\030\007 \001(\002:\001"
    "0\022\024\n\tone_float\030\010 \001(\002:\0011\022\030\n\013small_float\030\t"
    " \001(\002:\0031.5\022\036\n\022negative_one_float\030\n \001(\002:\002-"
    "1\022\034\n\016negative_float\030\013 \001(\002:\004-1.5\022\032\n\013large"
    "_float\030\014 \001(\002:\0052e+08\022$\n\024small_negative_fl"
    "oat\030\r \001(\002:\006-8e-28\022\027\n\ninf_double\030\016 \001(\001:\003i"
    "nf\022\034\n\016neg_inf_double\030\017 \001(\001:\004-inf\022\027\n\nnan_"
    "double\030\020 \001(\001:\003nan\022\026\n\tinf_float\030\021 \001(\002:\003in"
    "f\022\033\n\rneg_inf_float\030\022 \001(\002:\004-inf\022\026\n\tnan_fl"
    "oat\030\023 \001(\002:\003nan\022+\n\014cpp_trigraph\030\024 \001(\t:\025\? "
    "\? \?\? \?\? \?\?\? \?\?/ \?\?-\022 \n\020string_with_zero\030"
    "\027 \001(\t:\006hel\000lo\022\"\n\017bytes_with_zero\030\030 \001(\014:\t"
    "wor\\000ld\022(\n\026string_piece_with_zero\030\031 \001("
    "\t:\004ab\000cB\002\010\002\022 \n\016cord_with_zero\030\032 \001(\t:\00412\000"
    "3B\002\010\001\022&\n\022replacement_string\030\033 \001(\t:\n${unk"
    "nown}\"K\n\021SparseEnumMessage\0226\n\013sparse_enu"
    "m\030\001 \001(\0162!.protobuf_unittest.TestSparseEn"
    "um\"\031\n\tOneString\022\014\n\004data\030\001 \001(\t\"\032\n\nMoreStr"
    "ing\022\014\n\004data\030\001 \003(\t\"\030\n\010OneBytes\022\014\n\004data\030\001 "
    "\001(\014\"\031\n\tMoreBytes\022\014\n\004data\030\001 \003(\014\"\034\n\014Int32M"
    "essage\022\014\n\004data\030\001 \001(\005\"\035\n\rUint32Message\022\014\n"
    "\004data\030\001 \001(\r\"\034\n\014Int64Message\022\014\n\004data\030\001 \001("
    "\003\"\035\n\rUint64Message\022\014\n\004data\030\001 \001(\004\"\033\n\013Bool"
    "Message\022\014\n\004data\030\001 \001(\010\"\320\001\n\tTestOneof\022\021\n\007f"
    "oo_int\030\001 \001(\005H\000\022\024\n\nfoo_string\030\002 \001(\tH\000\0226\n\013"
    "foo_message\030\003 \001(\0132\037.protobuf_unittest.Te"
    "stAllTypesH\000\0229\n\010foogroup\030\004 \001(\n2%.protobu"
    "f_unittest.TestOneof.FooGroupH\000\032 \n\010FooGr"
    "oup\022\t\n\001a\030\005 \001(\005\022\t\n\001b\030\006 \001(\tB\005\n\003foo\"\347\001\n\034Tes"
    "tOneofBackwardsCompatible\022\017\n\007foo_int\030\001 \001"
    "(\005\022\022\n\nfoo_string\030\002 \001(\t\0224\n\013foo_message\030\003 "
    "\001(\0132\037.protobuf_unittest.TestAllTypes\022J\n\010"
    "foogroup\030\004 \001(\n28.protobuf_unittest.TestO"
    "neofBackwardsCompatible.FooGroup\032 \n\010FooG"
    "roup\022\t\n\001a\030\005 \001(\005\022\t\n\001b\030\006 \001(\t\"\236\006\n\nTestOneof"
    "2\022\021\n\007foo_int\030\001 \001(\005H\000\022\024\n\nfoo_string\030\002 \001(\t"
    "H\000\022\026\n\010foo_cord\030\003 \001(\tB\002\010\001H\000\022\036\n\020foo_string"
    "_piece\030\004 \001(\tB\002\010\002H\000\022\023\n\tfoo_bytes\030\005 \001(\014H\000\022"
    "<\n\010foo_enum\030\006 \001(\0162(.protobuf_unittest.Te"
    "stOneof2.NestedEnumH\000\022B\n\013foo_message\030\007 \001"
    "(\0132+.protobuf_unittest.TestOneof2.Nested"
    "MessageH\000\022:\n\010foogroup\030\010 \001(\n2&.protobuf_u"
    "nittest.TestOneof2.FooGroupH\000\022K\n\020foo_laz"
    "y_message\030\013 \001(\0132+.protobuf_unittest.Test"
    "Oneof2.NestedMessageB\002(\001H\000\022\024\n\007bar_int\030\014 "
    "\001(\005:\0015H\001\022\034\n\nbar_string\030\r \001(\t:\006STRINGH\001\022\034"
    "\n\010bar_cord\030\016 \001(\t:\004CORDB\002\010\001H\001\022&\n\020bar_stri"
    "ng_piece\030\017 \001(\t:\006SPIECEB\002\010\002H\001\022\032\n\tbar_byte"
    "s\030\020 \001(\014:\005BYTESH\001\022A\n\010bar_enum\030\021 \001(\0162(.pro"
    "tobuf_unittest.TestOneof2.NestedEnum:\003BA"
    "RH\001\022\017\n\007baz_int\030\022 \001(\005\022\027\n\nbaz_string\030\023 \001(\t"
    ":\003BAZ\032 \n\010FooGroup\022\t\n\001a\030\t \001(\005\022\t\n\001b\030\n \001(\t\032"
    "3\n\rNestedMessage\022\017\n\007qux_int\030\001 \001(\003\022\021\n\tcor"
    "ge_int\030\002 \003(\005\"\'\n\nNestedEnum\022\007\n\003FOO\020\001\022\007\n\003B"
    "AR\020\002\022\007\n\003BAZ\020\003B\005\n\003fooB\005\n\003bar\"\270\001\n\021TestRequ"
    "iredOneof\022\021\n\007foo_int\030\001 \001(\005H\000\022\024\n\nfoo_stri"
    "ng\030\002 \001(\tH\000\022I\n\013foo_message\030\003 \001(\01322.protob"
    "uf_unittest.TestRequiredOneof.NestedMess"
    "ageH\000\032(\n\rNestedMessage\022\027\n\017required_doubl"
    "e\030\001 \002(\001B\005\n\003foo\"\252\003\n\017TestPackedTypes\022\030\n\014pa"
    "cked_int32\030Z \003(\005B\002\020\001\022\030\n\014packed_int64\030[ \003"
    "(\003B\002\020\001\022\031\n\rpacked_uint32\030\\ \003(\rB\002\020\001\022\031\n\rpac"
    "ked_uint64\030] \003(\004B\002\020\001\022\031\n\rpacked_sint32\030^ "
    "\003(\021B\002\020\001\022\031\n\rpacked_sint64\030_ \003(\022B\002\020\001\022\032\n\016pa"
    "cked_fixed32\030` \003(\007B\002\020\001\022\032\n\016packed_fixed64"
    "\030a \003(\006B\002\020\001\022\033\n\017packed_sfixed32\030b \003(\017B\002\020\001\022"
    "\033\n\017packed_sfixed64\030c \003(\020B\002\020\001\022\030\n\014packed_f"
    "loat\030d \003(\002B\002\020\001\022\031\n\rpacked_double\030e \003(\001B\002\020"
    "\001\022\027\n\013packed_bool\030f \003(\010B\002\020\001\0227\n\013packed_enu"
    "m\030g \003(\0162\036.protobuf_unittest.ForeignEnumB"
    "\002\020\001\"\310\003\n\021TestUnpackedTypes\022\032\n\016unpacked_in"
    "t32\030Z \003(\005B\002\020\000\022\032\n\016unpacked_int64\030[ \003(\003B\002\020"
    "\000\022\033\n\017unpacked_uint32\030\\ \003(\rB\002\020\000\022\033\n\017unpack"
    "ed_uint64\030] \003(\004B\002\020\000\022\033\n\017unpacked_sint32\030^"
    " \003(\021B\002\020\000\022\033\n\017unpacked_sint64\030_ \003(\022B\002\020\000\022\034\n"
    "\020unpacked_fixed32\030` \003(\007B\002\020\000\022\034\n\020unpacked_"
    "fixed64\030a \003(\006B\002\020\000\022\035\n\021unpacked_sfixed32\030b"
    " \003(\017B\002\020\000\022\035\n\021unpacked_sfixed64\030c \003(\020B\002\020\000\022"
    "\032\n\016unpacked_float\030d \003(\002B\002\020\000\022\033\n\017unpacked_"
    "double\030e \003(\001B\002\020\000\022\031\n\runpacked_bool\030f \003(\010B"
    "\002\020\000\0229\n\runpacked_enum\030g \003(\0162\036.protobuf_un"
    "ittest.ForeignEnumB\002\020\000\" \n\024TestPackedExte"
    "nsions*\010\010\001\020\200\200\200\200\002\"\"\n\026TestUnpackedExtensio"
    "ns*\010\010\001\020\200\200\200\200\002\"\231\004\n\025TestDynamicExtensions\022\031"
    "\n\020scalar_extension\030\320\017 \001(\007\0227\n\016enum_extens"
    "ion\030\321\017 \001(\0162\036.protobuf_unittest.ForeignEn"
    "um\022Y\n\026dynamic_enum_extension\030\322\017 \001(\01628.pr"
    "otobuf_unittest.TestDynamicExtensions.Dy"
    "namicEnumType\022=\n\021message_extension\030\323\017 \001("
    "\0132!.protobuf_unittest.ForeignMessage\022_\n\031"
    "dynamic_message_extension\030\324\017 \001(\0132;.proto"
    "buf_unittest.TestDynamicExtensions.Dynam"
    "icMessageType\022\033\n\022repeated_extension\030\325\017 \003"
    "(\t\022\035\n\020packed_extension\030\326\017 \003(\021B\002\020\001\032,\n\022Dyn"
    "amicMessageType\022\026\n\rdynamic_field\030\264\020 \001(\005\""
    "G\n\017DynamicEnumType\022\020\n\013DYNAMIC_FOO\020\230\021\022\020\n\013"
    "DYNAMIC_BAR\020\231\021\022\020\n\013DYNAMIC_BAZ\020\232\021\"\300\001\n#Tes"
    "tRepeatedScalarDifferentTagSizes\022\030\n\020repe"
    "ated_fixed32\030\014 \003(\007\022\026\n\016repeated_int32\030\r \003"
    "(\005\022\031\n\020repeated_fixed64\030\376\017 \003(\006\022\027\n\016repeate"
    "d_int64\030\377\017 \003(\003\022\030\n\016repeated_float\030\376\377\017 \003(\002"
    "\022\031\n\017repeated_uint64\030\377\377\017 \003(\004\"\367\t\n\020TestPars"
    "ingMerge\022;\n\022required_all_types\030\001 \002(\0132\037.p"
    "rotobuf_unittest.TestAllTypes\022;\n\022optiona"
    "l_all_types\030\002 \001(\0132\037.protobuf_unittest.Te"
    "stAllTypes\022;\n\022repeated_all_types\030\003 \003(\0132\037"
    ".protobuf_unittest.TestAllTypes\022H\n\roptio"
    "nalgroup\030\n \001(\n21.protobuf_unittest.TestP"
    "arsingMerge.OptionalGroup\022H\n\rrepeatedgro"
    "up\030\024 \003(\n21.protobuf_unittest.TestParsing"
    "Merge.RepeatedGroup\032\252\004\n\027RepeatedFieldsGe"
    "nerator\022/\n\006field1\030\001 \003(\0132\037.protobuf_unitt"
    "est.TestAllTypes\022/\n\006field2\030\002 \003(\0132\037.proto"
    "buf_unittest.TestAllTypes\022/\n\006field3\030\003 \003("
    "\0132\037.protobuf_unittest.TestAllTypes\022R\n\006gr"
    "oup1\030\n \003(\n2B.protobuf_unittest.TestParsi"
    "ngMerge.RepeatedFieldsGenerator.Group1\022R"
    "\n\006group2\030\024 \003(\n2B.protobuf_unittest.TestP"
    "arsingMerge.RepeatedFieldsGenerator.Grou"
    "p2\022.\n\004ext1\030\350\007 \003(\0132\037.protobuf_unittest.Te"
    "stAllTypes\022.\n\004ext2\030\351\007 \003(\0132\037.protobuf_uni"
    "ttest.TestAllTypes\0329\n\006Group1\022/\n\006field1\030\013"
    " \001(\0132\037.protobuf_unittest.TestAllTypes\0329\n"
    "\006Group2\022/\n\006field1\030\025 \001(\0132\037.protobuf_unitt"
    "est.TestAllTypes\032R\n\rOptionalGroup\022A\n\030opt"
    "ional_group_all_types\030\013 \001(\0132\037.protobuf_u"
    "nittest.TestAllTypes\032R\n\rRepeatedGroup\022A\n"
    "\030repeated_group_all_types\030\025 \001(\0132\037.protob"
    "uf_unittest.TestAllTypes*\t\010\350\007\020\200\200\200\200\0022[\n\014o"
    "ptional_ext\022#.protobuf_unittest.TestPars"
    "ingMerge\030\350\007 \001(\0132\037.protobuf_unittest.Test"
    "AllTypes2[\n\014repeated_ext\022#.protobuf_unit"
    "test.TestParsingMerge\030\351\007 \003(\0132\037.protobuf_"
    "unittest.TestAllTypes\"D\n\033TestCommentInje"
    "ctionMessage\022%\n\001a\030\001 \001(\t:\032*/ <- Neither s"
    "hould this.\"\014\n\nFooRequest\"\r\n\013FooResponse"
    "\"\022\n\020FooClientMessage\"\022\n\020FooServerMessage"
    "\"\014\n\nBarRequest\"\r\n\013BarResponse*@\n\013Foreign"
    "Enum\022\017\n\013FOREIGN_FOO\020\004\022\017\n\013FOREIGN_BAR\020\005\022\017"
    "\n\013FOREIGN_BAZ\020\006*K\n\024TestEnumWithDupValue\022"
    "\010\n\004FOO1\020\001\022\010\n\004BAR1\020\002\022\007\n\003BAZ\020\003\022\010\n\004FOO2\020\001\022\010"
    "\n\004BAR2\020\002\032\002\020\001*\211\001\n\016TestSparseEnum\022\014\n\010SPARS"
    "E_A\020{\022\016\n\010SPARSE_B\020\246\347\003\022\017\n\010SPARSE_C\020\262\261\200\006\022\025"
    "\n\010SPARSE_D\020\361\377\377\377\377\377\377\377\377\001\022\025\n\010SPARSE_E\020\264\336\374\377\377\377"
    "\377\377\377\001\022\014\n\010SPARSE_F\020\000\022\014\n\010SPARSE_G\020\0022\231\001\n\013Tes"
    "tService\022D\n\003Foo\022\035.protobuf_unittest.FooR"
    "equest\032\036.protobuf_unittest.FooResponse\022D"
    "\n\003Bar\022\035.protobuf_unittest.BarRequest\032\036.p"
    "rotobuf_unittest.BarResponse:F\n\030optional"
    "_int32_extension\022$.protobuf_unittest.Tes"
    "tAllExtensions\030\001 \001(\005:F\n\030optional_int64_e"
    "xtension\022$.protobuf_unittest.TestAllExte"
    "nsions\030\002 \001(\003:G\n\031optional_uint32_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "\003 \001(\r:G\n\031optional_uint64_extension\022$.pro"
    "tobuf_unittest.TestAllExtensions\030\004 \001(\004:G"
    "\n\031optional_sint32_extension\022$.protobuf_u"
    "nittest.TestAllExtensions\030\005 \001(\021:G\n\031optio"
    "nal_sint64_extension\022$.protobuf_unittest"
    ".TestAllExtensions\030\006 \001(\022:H\n\032optional_fix"
    "ed32_extension\022$.protobuf_unittest.TestA"
    "llExtensions\030\007 \001(\007:H\n\032optional_fixed64_e"
    "xtension\022$.protobuf_unittest.TestAllExte"
    "nsions\030\010 \001(\006:I\n\033optional_sfixed32_extens"
    "ion\022$.protobuf_unittest.TestAllExtension"
    "s\030\t \001(\017:I\n\033optional_sfixed64_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030\n \001"
    "(\020:F\n\030optional_float_extension\022$.protobu"
    "f_unittest.TestAllExtensions\030\013 \001(\002:G\n\031op"
    "tional_double_extension\022$.protobuf_unitt"
    "est.TestAllExtensions\030\014 \001(\001:E\n\027optional_"
    "bool_extension\022$.protobuf_unittest.TestA"
    "llExtensions\030\r \001(\010:G\n\031optional_string_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\030\016 \001(\t:F\n\030optional_bytes_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030\017 "
    "\001(\014:q\n\027optionalgroup_extension\022$.protobu"
    "f_unittest.TestAllExtensions\030\020 \001(\n2*.pro"
    "tobuf_unittest.OptionalGroup_extension:~"
    "\n!optional_nested_message_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\030\022 \001(\0132"
    "-.protobuf_unittest.TestAllTypes.NestedM"
    "essage:s\n\"optional_foreign_message_exten"
    "sion\022$.protobuf_unittest.TestAllExtensio"
    "ns\030\023 \001(\0132!.protobuf_unittest.ForeignMess"
    "age:x\n!optional_import_message_extension"
    "\022$.protobuf_unittest.TestAllExtensions\030\024"
    " \001(\0132\'.protobuf_unittest_import.ImportMe"
    "ssage:x\n\036optional_nested_enum_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030\025 "
    "\001(\0162*.protobuf_unittest.TestAllTypes.Nes"
    "tedEnum:m\n\037optional_foreign_enum_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030\026 \001(\0162\036.protobuf_unittest.ForeignEnum:r"
    "\n\036optional_import_enum_extension\022$.proto"
    "buf_unittest.TestAllExtensions\030\027 \001(\0162$.p"
    "rotobuf_unittest_import.ImportEnum:Q\n\037op"
    "tional_string_piece_extension\022$.protobuf"
    "_unittest.TestAllExtensions\030\030 \001(\tB\002\010\002:I\n"
    "\027optional_cord_extension\022$.protobuf_unit"
    "test.TestAllExtensions\030\031 \001(\tB\002\010\001:\205\001\n(opt"
    "ional_public_import_message_extension\022$."
    "protobuf_unittest.TestAllExtensions\030\032 \001("
    "\0132-.protobuf_unittest_import.PublicImpor"
    "tMessage:\200\001\n\037optional_lazy_message_exten"
    "sion\022$.protobuf_unittest.TestAllExtensio"
    "ns\030\033 \001(\0132-.protobuf_unittest.TestAllType"
    "s.NestedMessageB\002(\001:F\n\030repeated_int32_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\030\037 \003(\005:F\n\030repeated_int64_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030  "
    "\003(\003:G\n\031repeated_uint32_extension\022$.proto"
    "buf_unittest.TestAllExtensions\030! \003(\r:G\n\031"
    "repeated_uint64_extension\022$.protobuf_uni"
    "ttest.TestAllExtensions\030\" \003(\004:G\n\031repeate"
    "d_sint32_extension\022$.protobuf_unittest.T"
    "estAllExtensions\030# \003(\021:G\n\031repeated_sint6"
    "4_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\030$ \003(\022:H\n\032repeated_fixed32_exte"
    "nsion\022$.protobuf_unittest.TestAllExtensi"
    "ons\030% \003(\007:H\n\032repeated_fixed64_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030& "
    "\003(\006:I\n\033repeated_sfixed32_extension\022$.pro"
    "tobuf_unittest.TestAllExtensions\030\' \003(\017:I"
    "\n\033repeated_sfixed64_extension\022$.protobuf"
    "_unittest.TestAllExtensions\030( \003(\020:F\n\030rep"
    "eated_float_extension\022$.protobuf_unittes"
    "t.TestAllExtensions\030) \003(\002:G\n\031repeated_do"
    "uble_extension\022$.protobuf_unittest.TestA"
    "llExtensions\030* \003(\001:E\n\027repeated_bool_exte"
    "nsion\022$.protobuf_unittest.TestAllExtensi"
    "ons\030+ \003(\010:G\n\031repeated_string_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030, \003"
    "(\t:F\n\030repeated_bytes_extension\022$.protobu"
    "f_unittest.TestAllExtensions\030- \003(\014:q\n\027re"
    "peatedgroup_extension\022$.protobuf_unittes"
    "t.TestAllExtensions\030. \003(\n2*.protobuf_uni"
    "ttest.RepeatedGroup_extension:~\n!repeate"
    "d_nested_message_extension\022$.protobuf_un"
    "ittest.TestAllExtensions\0300 \003(\0132-.protobu"
    "f_unittest.TestAllTypes.NestedMessage:s\n"
    "\"repeated_foreign_message_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\0301 \003(\0132"
    "!.protobuf_unittest.ForeignMessage:x\n!re"
    "peated_import_message_extension\022$.protob"
    "uf_unittest.TestAllExtensions\0302 \003(\0132\'.pr"
    "otobuf_unittest_import.ImportMessage:x\n\036"
    "repeated_nested_enum_extension\022$.protobu"
    "f_unittest.TestAllExtensions\0303 \003(\0162*.pro"
    "tobuf_unittest.TestAllTypes.NestedEnum:m"
    "\n\037repeated_foreign_enum_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\0304 \003(\0162\036."
    "protobuf_unittest.ForeignEnum:r\n\036repeate"
    "d_import_enum_extension\022$.protobuf_unitt"
    "est.TestAllExtensions\0305 \003(\0162$.protobuf_u"
    "nittest_import.ImportEnum:Q\n\037repeated_st"
    "ring_piece_extension\022$.protobuf_unittest"
    ".TestAllExtensions\0306 \003(\tB\002\010\002:I\n\027repeated"
    "_cord_extension\022$.protobuf_unittest.Test"
    "AllExtensions\0307 \003(\tB\002\010\001:\200\001\n\037repeated_laz"
    "y_message_extension\022$.protobuf_unittest."
    "TestAllExtensions\0309 \003(\0132-.protobuf_unitt"
    "est.TestAllTypes.NestedMessageB\002(\001:I\n\027de"
    "fault_int32_extension\022$.protobuf_unittes"
    "t.TestAllExtensions\030= \001(\005:\00241:I\n\027default"
    "_int64_extension\022$.protobuf_unittest.Tes"
    "tAllExtensions\030> \001(\003:\00242:J\n\030default_uint"
    "32_extension\022$.protobuf_unittest.TestAll"
    "Extensions\030\? \001(\r:\00243:J\n\030default_uint64_e"
    "xtension\022$.protobuf_unittest.TestAllExte"
    "nsions\030@ \001(\004:\00244:K\n\030default_sint32_exten"
    "sion\022$.protobuf_unittest.TestAllExtensio"
    "ns\030A \001(\021:\003-45:J\n\030default_sint64_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "B \001(\022:\00246:K\n\031default_fixed32_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030C \001"
    "(\007:\00247:K\n\031default_fixed64_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\030D \001(\006:"
    "\00248:L\n\032default_sfixed32_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\030E \001(\017:\0024"
    "9:M\n\032default_sfixed64_extension\022$.protob"
    "uf_unittest.TestAllExtensions\030F \001(\020:\003-50"
    ":K\n\027default_float_extension\022$.protobuf_u"
    "nittest.TestAllExtensions\030G \001(\002:\00451.5:M\n"
    "\030default_double_extension\022$.protobuf_uni"
    "ttest.TestAllExtensions\030H \001(\001:\00552000:J\n\026"
    "default_bool_extension\022$.protobuf_unitte"
    "st.TestAllExtensions\030I \001(\010:\004true:M\n\030defa"
    "ult_string_extension\022$.protobuf_unittest"
    ".TestAllExtensions\030J \001(\t:\005hello:L\n\027defau"
    "lt_bytes_extension\022$.protobuf_unittest.T"
    "estAllExtensions\030K \001(\014:\005world:|\n\035default"
    "_nested_enum_extension\022$.protobuf_unitte"
    "st.TestAllExtensions\030Q \001(\0162*.protobuf_un"
    "ittest.TestAllTypes.NestedEnum:\003BAR:y\n\036d"
    "efault_foreign_enum_extension\022$.protobuf"
    "_unittest.TestAllExtensions\030R \001(\0162\036.prot"
    "obuf_unittest.ForeignEnum:\013FOREIGN_BAR:}"
    "\n\035default_import_enum_extension\022$.protob"
    "uf_unittest.TestAllExtensions\030S \001(\0162$.pr"
    "otobuf_unittest_import.ImportEnum:\nIMPOR"
    "T_BAR:U\n\036default_string_piece_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030T "
    "\001(\t:\003abcB\002\010\002:M\n\026default_cord_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030U \001"
    "(\t:\003123B\002\010\001:D\n\026oneof_uint32_extension\022$."
    "protobuf_unittest.TestAllExtensions\030o \001("
    "\r:{\n\036oneof_nested_message_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\030p \001(\0132"
    "-.protobuf_unittest.TestAllTypes.NestedM"
    "essage:D\n\026oneof_string_extension\022$.proto"
    "buf_unittest.TestAllExtensions\030q \001(\t:C\n\025"
    "oneof_bytes_extension\022$.protobuf_unittes"
    "t.TestAllExtensions\030r \001(\014:B\n\023my_extensio"
    "n_string\022%.protobuf_unittest.TestFieldOr"
    "derings\0302 \001(\t:\?\n\020my_extension_int\022%.prot"
    "obuf_unittest.TestFieldOrderings\030\005 \001(\005:K"
    "\n\026packed_int32_extension\022\'.protobuf_unit"
    "test.TestPackedExtensions\030Z \003(\005B\002\020\001:K\n\026p"
    "acked_int64_extension\022\'.protobuf_unittes"
    "t.TestPackedExtensions\030[ \003(\003B\002\020\001:L\n\027pack"
    "ed_uint32_extension\022\'.protobuf_unittest."
    "TestPackedExtensions\030\\ \003(\rB\002\020\001:L\n\027packed"
    "_uint64_extension\022\'.protobuf_unittest.Te"
    "stPackedExtensions\030] \003(\004B\002\020\001:L\n\027packed_s"
    "int32_extension\022\'.protobuf_unittest.Test"
    "PackedExtensions\030^ \003(\021B\002\020\001:L\n\027packed_sin"
    "t64_extension\022\'.protobuf_unittest.TestPa"
    "ckedExtensions\030_ \003(\022B\002\020\001:M\n\030packed_fixed"
    "32_extension\022\'.protobuf_unittest.TestPac"
    "kedExtensions\030` \003(\007B\002\020\001:M\n\030packed_fixed6"
    "4_extension\022\'.protobuf_unittest.TestPack"
    "edExtensions\030a \003(\006B\002\020\001:N\n\031packed_sfixed3"
    "2_extension\022\'.protobuf_unittest.TestPack"
    "edExtensions\030b \003(\017B\002\020\001:N\n\031packed_sfixed6"
    "4_extension\022\'.protobuf_unittest.TestPack"
    "edExtensions\030c \003(\020B\002\020\001:K\n\026packed_float_e"
    "xtension\022\'.protobuf_unittest.TestPackedE"
    "xtensions\030d \003(\002B\002\020\001:L\n\027packed_double_ext"
    "ension\022\'.protobuf_unittest.TestPackedExt"
    "ensions\030e \003(\001B\002\020\001:J\n\025packed_bool_extensi"
    "on\022\'.protobuf_unittest.TestPackedExtensi"
    "ons\030f \003(\010B\002\020\001:j\n\025packed_enum_extension\022\'"
    ".protobuf_unittest.TestPackedExtensions\030"
    "g \003(\0162\036.protobuf_unittest.ForeignEnumB\002\020"
    "\001:O\n\030unpacked_int32_extension\022).protobuf"
    "_unittest.TestUnpackedExtensions\030Z \003(\005B\002"
    "\020\000:O\n\030unpacked_int64_extension\022).protobu"
    "f_unittest.TestUnpackedExtensions\030[ \003(\003B"
    "\002\020\000:P\n\031unpacked_uint32_extension\022).proto"
    "buf_unittest.TestUnpackedExtensions\030\\ \003("
    "\rB\002\020\000:P\n\031unpacked_uint64_extension\022).pro"
    "tobuf_unittest.TestUnpackedExtensions\030] "
    "\003(\004B\002\020\000:P\n\031unpacked_sint32_extension\022).p"
    "rotobuf_unittest.TestUnpackedExtensions\030"
    "^ \003(\021B\002\020\000:P\n\031unpacked_sint64_extension\022)"
    ".protobuf_unittest.TestUnpackedExtension"
    "s\030_ \003(\022B\002\020\000:Q\n\032unpacked_fixed32_extensio"
    "n\022).protobuf_unittest.TestUnpackedExtens"
    "ions\030` \003(\007B\002\020\000:Q\n\032unpacked_fixed64_exten"
    "sion\022).protobuf_unittest.TestUnpackedExt"
    "ensions\030a \003(\006B\002\020\000:R\n\033unpacked_sfixed32_e"
    "xtension\022).protobuf_unittest.TestUnpacke"
    "dExtensions\030b \003(\017B\002\020\000:R\n\033unpacked_sfixed"
    "64_extension\022).protobuf_unittest.TestUnp"
    "ackedExtensions\030c \003(\020B\002\020\000:O\n\030unpacked_fl"
    "oat_extension\022).protobuf_unittest.TestUn"
    "packedExtensions\030d \003(\002B\002\020\000:P\n\031unpacked_d"
    "ouble_extension\022).protobuf_unittest.Test"
    "UnpackedExtensions\030e \003(\001B\002\020\000:N\n\027unpacked"
    "_bool_extension\022).protobuf_unittest.Test"
    "UnpackedExtensions\030f \003(\010B\002\020\000:n\n\027unpacked"
    "_enum_extension\022).protobuf_unittest.Test"
    "UnpackedExtensions\030g \003(\0162\036.protobuf_unit"
    "test.ForeignEnumB\002\020\000B\032B\rUnittestProtoH\001\200"
    "\001\001\210\001\001\220\001\001", 21688);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/unittest.proto", &protobuf_RegisterTypes);
  TestAllTypes::_default_default_string_ =
      new ::std::string("hello", 5);
  TestAllTypes::_default_default_bytes_ =
      new ::std::string("world", 5);
  TestAllTypes::_default_default_string_piece_ =
      new ::std::string("abc", 3);
  TestAllTypes::_default_default_cord_ =
      new ::std::string("123", 3);
  TestAllTypes::default_instance_ = new TestAllTypes();
  TestAllTypes_default_oneof_instance_ = new TestAllTypesOneofInstance;
  TestAllTypes_NestedMessage::default_instance_ = new TestAllTypes_NestedMessage();
  TestAllTypes_OptionalGroup::default_instance_ = new TestAllTypes_OptionalGroup();
  TestAllTypes_RepeatedGroup::default_instance_ = new TestAllTypes_RepeatedGroup();
  NestedTestAllTypes::default_instance_ = new NestedTestAllTypes();
  TestDeprecatedFields::default_instance_ = new TestDeprecatedFields();
  ForeignMessage::default_instance_ = new ForeignMessage();
  TestAllExtensions::default_instance_ = new TestAllExtensions();
  OptionalGroup_extension::default_instance_ = new OptionalGroup_extension();
  RepeatedGroup_extension::default_instance_ = new RepeatedGroup_extension();
  TestNestedExtension::default_instance_ = new TestNestedExtension();
  TestRequired::default_instance_ = new TestRequired();
  TestRequiredForeign::default_instance_ = new TestRequiredForeign();
  TestForeignNested::default_instance_ = new TestForeignNested();
  TestEmptyMessage::default_instance_ = new TestEmptyMessage();
  TestEmptyMessageWithExtensions::default_instance_ = new TestEmptyMessageWithExtensions();
  TestMultipleExtensionRanges::default_instance_ = new TestMultipleExtensionRanges();
  TestReallyLargeTagNumber::default_instance_ = new TestReallyLargeTagNumber();
  TestRecursiveMessage::default_instance_ = new TestRecursiveMessage();
  TestMutualRecursionA::default_instance_ = new TestMutualRecursionA();
  TestMutualRecursionB::default_instance_ = new TestMutualRecursionB();
  TestDupFieldNumber::default_instance_ = new TestDupFieldNumber();
  TestDupFieldNumber_Foo::default_instance_ = new TestDupFieldNumber_Foo();
  TestDupFieldNumber_Bar::default_instance_ = new TestDupFieldNumber_Bar();
  TestEagerMessage::default_instance_ = new TestEagerMessage();
  TestLazyMessage::default_instance_ = new TestLazyMessage();
  TestNestedMessageHasBits::default_instance_ = new TestNestedMessageHasBits();
  TestNestedMessageHasBits_NestedMessage::default_instance_ = new TestNestedMessageHasBits_NestedMessage();
  TestCamelCaseFieldNames::default_instance_ = new TestCamelCaseFieldNames();
  TestFieldOrderings::default_instance_ = new TestFieldOrderings();
  TestExtremeDefaultValues::_default_escaped_bytes_ =
      new ::std::string("\000\001\007\010\014\n\r\t\013\\\'\"\376", 13);
  TestExtremeDefaultValues::_default_utf8_string_ =
      new ::std::string("\341\210\264", 3);
  TestExtremeDefaultValues::_default_cpp_trigraph_ =
      new ::std::string("\? \? \?\? \?\? \?\?\? \?\?/ \?\?-", 21);
  TestExtremeDefaultValues::_default_string_with_zero_ =
      new ::std::string("hel\000lo", 6);
  TestExtremeDefaultValues::_default_bytes_with_zero_ =
      new ::std::string("wor\000ld", 6);
  TestExtremeDefaultValues::_default_string_piece_with_zero_ =
      new ::std::string("ab\000c", 4);
  TestExtremeDefaultValues::_default_cord_with_zero_ =
      new ::std::string("12\0003", 4);
  TestExtremeDefaultValues::_default_replacement_string_ =
      new ::std::string("${unknown}", 10);
  TestExtremeDefaultValues::default_instance_ = new TestExtremeDefaultValues();
  SparseEnumMessage::default_instance_ = new SparseEnumMessage();
  OneString::default_instance_ = new OneString();
  MoreString::default_instance_ = new MoreString();
  OneBytes::default_instance_ = new OneBytes();
  MoreBytes::default_instance_ = new MoreBytes();
  Int32Message::default_instance_ = new Int32Message();
  Uint32Message::default_instance_ = new Uint32Message();
  Int64Message::default_instance_ = new Int64Message();
  Uint64Message::default_instance_ = new Uint64Message();
  BoolMessage::default_instance_ = new BoolMessage();
  TestOneof::default_instance_ = new TestOneof();
  TestOneof_default_oneof_instance_ = new TestOneofOneofInstance;
  TestOneof_FooGroup::default_instance_ = new TestOneof_FooGroup();
  TestOneofBackwardsCompatible::default_instance_ = new TestOneofBackwardsCompatible();
  TestOneofBackwardsCompatible_FooGroup::default_instance_ = new TestOneofBackwardsCompatible_FooGroup();
  TestOneof2::_default_bar_string_ =
      new ::std::string("STRING", 6);
  TestOneof2::_default_bar_cord_ =
      new ::std::string("CORD", 4);
  TestOneof2::_default_bar_string_piece_ =
      new ::std::string("SPIECE", 6);
  TestOneof2::_default_bar_bytes_ =
      new ::std::string("BYTES", 5);
  TestOneof2::_default_baz_string_ =
      new ::std::string("BAZ", 3);
  TestOneof2::default_instance_ = new TestOneof2();
  TestOneof2_default_oneof_instance_ = new TestOneof2OneofInstance;
  TestOneof2_FooGroup::default_instance_ = new TestOneof2_FooGroup();
  TestOneof2_NestedMessage::default_instance_ = new TestOneof2_NestedMessage();
  TestRequiredOneof::default_instance_ = new TestRequiredOneof();
  TestRequiredOneof_default_oneof_instance_ = new TestRequiredOneofOneofInstance;
  TestRequiredOneof_NestedMessage::default_instance_ = new TestRequiredOneof_NestedMessage();
  TestPackedTypes::default_instance_ = new TestPackedTypes();
  TestUnpackedTypes::default_instance_ = new TestUnpackedTypes();
  TestPackedExtensions::default_instance_ = new TestPackedExtensions();
  TestUnpackedExtensions::default_instance_ = new TestUnpackedExtensions();
  TestDynamicExtensions::default_instance_ = new TestDynamicExtensions();
  TestDynamicExtensions_DynamicMessageType::default_instance_ = new TestDynamicExtensions_DynamicMessageType();
  TestRepeatedScalarDifferentTagSizes::default_instance_ = new TestRepeatedScalarDifferentTagSizes();
  TestParsingMerge::default_instance_ = new TestParsingMerge();
  TestParsingMerge_RepeatedFieldsGenerator::default_instance_ = new TestParsingMerge_RepeatedFieldsGenerator();
  TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance_ = new TestParsingMerge_RepeatedFieldsGenerator_Group1();
  TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance_ = new TestParsingMerge_RepeatedFieldsGenerator_Group2();
  TestParsingMerge_OptionalGroup::default_instance_ = new TestParsingMerge_OptionalGroup();
  TestParsingMerge_RepeatedGroup::default_instance_ = new TestParsingMerge_RepeatedGroup();
  TestCommentInjectionMessage::_default_a_ =
      new ::std::string("*/ <- Neither should this.", 26);
  TestCommentInjectionMessage::default_instance_ = new TestCommentInjectionMessage();
  FooRequest::default_instance_ = new FooRequest();
  FooResponse::default_instance_ = new FooResponse();
  FooClientMessage::default_instance_ = new FooClientMessage();
  FooServerMessage::default_instance_ = new FooServerMessage();
  BarRequest::default_instance_ = new BarRequest();
  BarResponse::default_instance_ = new BarResponse();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    1, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    2, 3, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    3, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    4, 4, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    5, 17, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    6, 18, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    7, 7, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    8, 6, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    9, 15, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    10, 16, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    11, 2, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    12, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    13, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    14, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    15, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    16, 10, false, false,
    &::protobuf_unittest::OptionalGroup_extension::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    18, 11, false, false,
    &::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    19, 11, false, false,
    &::protobuf_unittest::ForeignMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    20, 11, false, false,
    &::protobuf_unittest_import::ImportMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    21, 14, false, false,
    &::protobuf_unittest::TestAllTypes_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    22, 14, false, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    23, 14, false, false,
    &::protobuf_unittest_import::ImportEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    24, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    25, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    26, 11, false, false,
    &::protobuf_unittest_import::PublicImportMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    27, 11, false, false,
    &::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    31, 5, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    32, 3, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    33, 13, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    34, 4, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    35, 17, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    36, 18, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    37, 7, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    38, 6, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    39, 15, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    40, 16, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    41, 2, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    42, 1, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    43, 8, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    44, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    45, 12, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    46, 10, true, false,
    &::protobuf_unittest::RepeatedGroup_extension::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    48, 11, true, false,
    &::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    49, 11, true, false,
    &::protobuf_unittest::ForeignMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    50, 11, true, false,
    &::protobuf_unittest_import::ImportMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    51, 14, true, false,
    &::protobuf_unittest::TestAllTypes_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    52, 14, true, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    53, 14, true, false,
    &::protobuf_unittest_import::ImportEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    54, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    55, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    57, 11, true, false,
    &::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    61, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    62, 3, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    63, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    64, 4, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    65, 17, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    66, 18, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    67, 7, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    68, 6, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    69, 15, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    70, 16, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    71, 2, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    72, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    73, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    74, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    75, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    81, 14, false, false,
    &::protobuf_unittest::TestAllTypes_NestedEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    82, 14, false, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    83, 14, false, false,
    &::protobuf_unittest_import::ImportEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    84, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    85, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    111, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    112, 11, false, false,
    &::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    113, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    114, 12, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestFieldOrderings::default_instance(),
    50, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestFieldOrderings::default_instance(),
    5, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    90, 5, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    91, 3, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    92, 13, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    93, 4, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    94, 17, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    95, 18, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    96, 7, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    97, 6, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    98, 15, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    99, 16, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    100, 2, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    101, 1, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    102, 8, true, true);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestPackedExtensions::default_instance(),
    103, 14, true, true,
    &::protobuf_unittest::ForeignEnum_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    90, 5, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    91, 3, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    92, 13, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    93, 4, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    94, 17, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    95, 18, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    96, 7, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    97, 6, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    98, 15, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    99, 16, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    100, 2, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    101, 1, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    102, 8, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::protobuf_unittest::TestUnpackedExtensions::default_instance(),
    103, 14, true, false,
    &::protobuf_unittest::ForeignEnum_IsValid);
  TestAllTypes::default_instance_->InitAsDefaultInstance();
  TestAllTypes_NestedMessage::default_instance_->InitAsDefaultInstance();
  TestAllTypes_OptionalGroup::default_instance_->InitAsDefaultInstance();
  TestAllTypes_RepeatedGroup::default_instance_->InitAsDefaultInstance();
  NestedTestAllTypes::default_instance_->InitAsDefaultInstance();
  TestDeprecatedFields::default_instance_->InitAsDefaultInstance();
  ForeignMessage::default_instance_->InitAsDefaultInstance();
  TestAllExtensions::default_instance_->InitAsDefaultInstance();
  OptionalGroup_extension::default_instance_->InitAsDefaultInstance();
  RepeatedGroup_extension::default_instance_->InitAsDefaultInstance();
  TestNestedExtension::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    1002, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    1003, 9, false, false);
  TestRequired::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    1000, 11, false, false,
    &::protobuf_unittest::TestRequired::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestAllExtensions::default_instance(),
    1001, 11, true, false,
    &::protobuf_unittest::TestRequired::default_instance());
  TestRequiredForeign::default_instance_->InitAsDefaultInstance();
  TestForeignNested::default_instance_->InitAsDefaultInstance();
  TestEmptyMessage::default_instance_->InitAsDefaultInstance();
  TestEmptyMessageWithExtensions::default_instance_->InitAsDefaultInstance();
  TestMultipleExtensionRanges::default_instance_->InitAsDefaultInstance();
  TestReallyLargeTagNumber::default_instance_->InitAsDefaultInstance();
  TestRecursiveMessage::default_instance_->InitAsDefaultInstance();
  TestMutualRecursionA::default_instance_->InitAsDefaultInstance();
  TestMutualRecursionB::default_instance_->InitAsDefaultInstance();
  TestDupFieldNumber::default_instance_->InitAsDefaultInstance();
  TestDupFieldNumber_Foo::default_instance_->InitAsDefaultInstance();
  TestDupFieldNumber_Bar::default_instance_->InitAsDefaultInstance();
  TestEagerMessage::default_instance_->InitAsDefaultInstance();
  TestLazyMessage::default_instance_->InitAsDefaultInstance();
  TestNestedMessageHasBits::default_instance_->InitAsDefaultInstance();
  TestNestedMessageHasBits_NestedMessage::default_instance_->InitAsDefaultInstance();
  TestCamelCaseFieldNames::default_instance_->InitAsDefaultInstance();
  TestFieldOrderings::default_instance_->InitAsDefaultInstance();
  TestExtremeDefaultValues::default_instance_->InitAsDefaultInstance();
  SparseEnumMessage::default_instance_->InitAsDefaultInstance();
  OneString::default_instance_->InitAsDefaultInstance();
  MoreString::default_instance_->InitAsDefaultInstance();
  OneBytes::default_instance_->InitAsDefaultInstance();
  MoreBytes::default_instance_->InitAsDefaultInstance();
  Int32Message::default_instance_->InitAsDefaultInstance();
  Uint32Message::default_instance_->InitAsDefaultInstance();
  Int64Message::default_instance_->InitAsDefaultInstance();
  Uint64Message::default_instance_->InitAsDefaultInstance();
  BoolMessage::default_instance_->InitAsDefaultInstance();
  TestOneof::default_instance_->InitAsDefaultInstance();
  TestOneof_FooGroup::default_instance_->InitAsDefaultInstance();
  TestOneofBackwardsCompatible::default_instance_->InitAsDefaultInstance();
  TestOneofBackwardsCompatible_FooGroup::default_instance_->InitAsDefaultInstance();
  TestOneof2::default_instance_->InitAsDefaultInstance();
  TestOneof2_FooGroup::default_instance_->InitAsDefaultInstance();
  TestOneof2_NestedMessage::default_instance_->InitAsDefaultInstance();
  TestRequiredOneof::default_instance_->InitAsDefaultInstance();
  TestRequiredOneof_NestedMessage::default_instance_->InitAsDefaultInstance();
  TestPackedTypes::default_instance_->InitAsDefaultInstance();
  TestUnpackedTypes::default_instance_->InitAsDefaultInstance();
  TestPackedExtensions::default_instance_->InitAsDefaultInstance();
  TestUnpackedExtensions::default_instance_->InitAsDefaultInstance();
  TestDynamicExtensions::default_instance_->InitAsDefaultInstance();
  TestDynamicExtensions_DynamicMessageType::default_instance_->InitAsDefaultInstance();
  TestRepeatedScalarDifferentTagSizes::default_instance_->InitAsDefaultInstance();
  TestParsingMerge::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestParsingMerge::default_instance(),
    1000, 11, false, false,
    &::protobuf_unittest::TestAllTypes::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::protobuf_unittest::TestParsingMerge::default_instance(),
    1001, 11, true, false,
    &::protobuf_unittest::TestAllTypes::default_instance());
  TestParsingMerge_RepeatedFieldsGenerator::default_instance_->InitAsDefaultInstance();
  TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance_->InitAsDefaultInstance();
  TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance_->InitAsDefaultInstance();
  TestParsingMerge_OptionalGroup::default_instance_->InitAsDefaultInstance();
  TestParsingMerge_RepeatedGroup::default_instance_->InitAsDefaultInstance();
  TestCommentInjectionMessage::default_instance_->InitAsDefaultInstance();
  FooRequest::default_instance_->InitAsDefaultInstance();
  FooResponse::default_instance_->InitAsDefaultInstance();
  FooClientMessage::default_instance_->InitAsDefaultInstance();
  FooServerMessage::default_instance_->InitAsDefaultInstance();
  BarRequest::default_instance_->InitAsDefaultInstance();
  BarResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2funittest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funittest_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funittest_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funittest_2eproto_;
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForeignEnum_descriptor_;
}
bool ForeignEnum_IsValid(int value) {
  switch(value) {
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestEnumWithDupValue_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEnumWithDupValue_descriptor_;
}
bool TestEnumWithDupValue_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestSparseEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestSparseEnum_descriptor_;
}
bool TestSparseEnum_IsValid(int value) {
  switch(value) {
    case -53452:
    case -15:
    case 0:
    case 2:
    case 123:
    case 62374:
    case 12589234:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* TestAllTypes_NestedEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_NestedEnum_descriptor_;
}
bool TestAllTypes_NestedEnum_IsValid(int value) {
  switch(value) {
    case -1:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TestAllTypes_NestedEnum TestAllTypes::FOO;
const TestAllTypes_NestedEnum TestAllTypes::BAR;
const TestAllTypes_NestedEnum TestAllTypes::BAZ;
const TestAllTypes_NestedEnum TestAllTypes::NEG;
const TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MIN;
const TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MAX;
const int TestAllTypes::NestedEnum_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TestAllTypes_NestedMessage::kBbFieldNumber;
#endif  // !_MSC_VER

TestAllTypes_NestedMessage::TestAllTypes_NestedMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes.NestedMessage)
}

void TestAllTypes_NestedMessage::InitAsDefaultInstance() {
}

TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(const TestAllTypes_NestedMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.NestedMessage)
}

void TestAllTypes_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  bb_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestAllTypes_NestedMessage::~TestAllTypes_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.NestedMessage)
  SharedDtor();
}

void TestAllTypes_NestedMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestAllTypes_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_NestedMessage_descriptor_;
}

const TestAllTypes_NestedMessage& TestAllTypes_NestedMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestAllTypes_NestedMessage* TestAllTypes_NestedMessage::default_instance_ = NULL;

TestAllTypes_NestedMessage* TestAllTypes_NestedMessage::New() const {
  return new TestAllTypes_NestedMessage;
}

void TestAllTypes_NestedMessage::Clear() {
  bb_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestAllTypes_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bb = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bb_)));
          set_has_bb();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes.NestedMessage)
  return false;
#undef DO_
}

void TestAllTypes_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes.NestedMessage)
  // optional int32 bb = 1;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bb(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes.NestedMessage)
}

::google::protobuf::uint8* TestAllTypes_NestedMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.NestedMessage)
  // optional int32 bb = 1;
  if (has_bb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bb(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.NestedMessage)
  return target;
}

int TestAllTypes_NestedMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 bb = 1;
    if (has_bb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bb());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestAllTypes_NestedMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestAllTypes_NestedMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestAllTypes_NestedMessage::MergeFrom(const TestAllTypes_NestedMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bb()) {
      set_bb(from.bb());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestAllTypes_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes_NestedMessage::CopyFrom(const TestAllTypes_NestedMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypes_NestedMessage::IsInitialized() const {

  return true;
}

void TestAllTypes_NestedMessage::Swap(TestAllTypes_NestedMessage* other) {
  if (other != this) {
    std::swap(bb_, other->bb_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestAllTypes_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_NestedMessage_descriptor_;
  metadata.reflection = TestAllTypes_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestAllTypes_OptionalGroup::kAFieldNumber;
#endif  // !_MSC_VER

TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes.OptionalGroup)
}

void TestAllTypes_OptionalGroup::InitAsDefaultInstance() {
}

TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup(const TestAllTypes_OptionalGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.OptionalGroup)
}

void TestAllTypes_OptionalGroup::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestAllTypes_OptionalGroup::~TestAllTypes_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.OptionalGroup)
  SharedDtor();
}

void TestAllTypes_OptionalGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestAllTypes_OptionalGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes_OptionalGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_OptionalGroup_descriptor_;
}

const TestAllTypes_OptionalGroup& TestAllTypes_OptionalGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestAllTypes_OptionalGroup* TestAllTypes_OptionalGroup::default_instance_ = NULL;

TestAllTypes_OptionalGroup* TestAllTypes_OptionalGroup::New() const {
  return new TestAllTypes_OptionalGroup;
}

void TestAllTypes_OptionalGroup::Clear() {
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestAllTypes_OptionalGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 17;
      case 17: {
        if (tag == 136) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes.OptionalGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes.OptionalGroup)
  return false;
#undef DO_
}

void TestAllTypes_OptionalGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  // optional int32 a = 17;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes.OptionalGroup)
}

::google::protobuf::uint8* TestAllTypes_OptionalGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  // optional int32 a = 17;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.OptionalGroup)
  return target;
}

int TestAllTypes_OptionalGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 17;
    if (has_a()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes_OptionalGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestAllTypes_OptionalGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestAllTypes_OptionalGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestAllTypes_OptionalGroup::MergeFrom(const TestAllTypes_OptionalGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestAllTypes_OptionalGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes_OptionalGroup::CopyFrom(const TestAllTypes_OptionalGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypes_OptionalGroup::IsInitialized() const {

  return true;
}

void TestAllTypes_OptionalGroup::Swap(TestAllTypes_OptionalGroup* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestAllTypes_OptionalGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_OptionalGroup_descriptor_;
  metadata.reflection = TestAllTypes_OptionalGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestAllTypes_RepeatedGroup::kAFieldNumber;
#endif  // !_MSC_VER

TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
}

void TestAllTypes_RepeatedGroup::InitAsDefaultInstance() {
}

TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup(const TestAllTypes_RepeatedGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
}

void TestAllTypes_RepeatedGroup::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestAllTypes_RepeatedGroup::~TestAllTypes_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
  SharedDtor();
}

void TestAllTypes_RepeatedGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestAllTypes_RepeatedGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes_RepeatedGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_RepeatedGroup_descriptor_;
}

const TestAllTypes_RepeatedGroup& TestAllTypes_RepeatedGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestAllTypes_RepeatedGroup* TestAllTypes_RepeatedGroup::default_instance_ = NULL;

TestAllTypes_RepeatedGroup* TestAllTypes_RepeatedGroup::New() const {
  return new TestAllTypes_RepeatedGroup;
}

void TestAllTypes_RepeatedGroup::Clear() {
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestAllTypes_RepeatedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 47;
      case 47: {
        if (tag == 376) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes.RepeatedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes.RepeatedGroup)
  return false;
#undef DO_
}

void TestAllTypes_RepeatedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  // optional int32 a = 47;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes.RepeatedGroup)
}

::google::protobuf::uint8* TestAllTypes_RepeatedGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  // optional int32 a = 47;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.RepeatedGroup)
  return target;
}

int TestAllTypes_RepeatedGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 47;
    if (has_a()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes_RepeatedGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestAllTypes_RepeatedGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestAllTypes_RepeatedGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestAllTypes_RepeatedGroup::MergeFrom(const TestAllTypes_RepeatedGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestAllTypes_RepeatedGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes_RepeatedGroup::CopyFrom(const TestAllTypes_RepeatedGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypes_RepeatedGroup::IsInitialized() const {

  return true;
}

void TestAllTypes_RepeatedGroup::Swap(TestAllTypes_RepeatedGroup* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestAllTypes_RepeatedGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_RepeatedGroup_descriptor_;
  metadata.reflection = TestAllTypes_RepeatedGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

::std::string* TestAllTypes::_default_default_string_ = NULL;
::std::string* TestAllTypes::_default_default_bytes_ = NULL;
::std::string* TestAllTypes::_default_default_string_piece_ = NULL;
::std::string* TestAllTypes::_default_default_cord_ = NULL;
#ifndef _MSC_VER
const int TestAllTypes::kOptionalInt32FieldNumber;
const int TestAllTypes::kOptionalInt64FieldNumber;
const int TestAllTypes::kOptionalUint32FieldNumber;
const int TestAllTypes::kOptionalUint64FieldNumber;
const int TestAllTypes::kOptionalSint32FieldNumber;
const int TestAllTypes::kOptionalSint64FieldNumber;
const int TestAllTypes::kOptionalFixed32FieldNumber;
const int TestAllTypes::kOptionalFixed64FieldNumber;
const int TestAllTypes::kOptionalSfixed32FieldNumber;
const int TestAllTypes::kOptionalSfixed64FieldNumber;
const int TestAllTypes::kOptionalFloatFieldNumber;
const int TestAllTypes::kOptionalDoubleFieldNumber;
const int TestAllTypes::kOptionalBoolFieldNumber;
const int TestAllTypes::kOptionalStringFieldNumber;
const int TestAllTypes::kOptionalBytesFieldNumber;
const int TestAllTypes::kOptionalgroupFieldNumber;
const int TestAllTypes::kOptionalNestedMessageFieldNumber;
const int TestAllTypes::kOptionalForeignMessageFieldNumber;
const int TestAllTypes::kOptionalImportMessageFieldNumber;
const int TestAllTypes::kOptionalNestedEnumFieldNumber;
const int TestAllTypes::kOptionalForeignEnumFieldNumber;
const int TestAllTypes::kOptionalImportEnumFieldNumber;
const int TestAllTypes::kOptionalStringPieceFieldNumber;
const int TestAllTypes::kOptionalCordFieldNumber;
const int TestAllTypes::kOptionalPublicImportMessageFieldNumber;
const int TestAllTypes::kOptionalLazyMessageFieldNumber;
const int TestAllTypes::kRepeatedInt32FieldNumber;
const int TestAllTypes::kRepeatedInt64FieldNumber;
const int TestAllTypes::kRepeatedUint32FieldNumber;
const int TestAllTypes::kRepeatedUint64FieldNumber;
const int TestAllTypes::kRepeatedSint32FieldNumber;
const int TestAllTypes::kRepeatedSint64FieldNumber;
const int TestAllTypes::kRepeatedFixed32FieldNumber;
const int TestAllTypes::kRepeatedFixed64FieldNumber;
const int TestAllTypes::kRepeatedSfixed32FieldNumber;
const int TestAllTypes::kRepeatedSfixed64FieldNumber;
const int TestAllTypes::kRepeatedFloatFieldNumber;
const int TestAllTypes::kRepeatedDoubleFieldNumber;
const int TestAllTypes::kRepeatedBoolFieldNumber;
const int TestAllTypes::kRepeatedStringFieldNumber;
const int TestAllTypes::kRepeatedBytesFieldNumber;
const int TestAllTypes::kRepeatedgroupFieldNumber;
const int TestAllTypes::kRepeatedNestedMessageFieldNumber;
const int TestAllTypes::kRepeatedForeignMessageFieldNumber;
const int TestAllTypes::kRepeatedImportMessageFieldNumber;
const int TestAllTypes::kRepeatedNestedEnumFieldNumber;
const int TestAllTypes::kRepeatedForeignEnumFieldNumber;
const int TestAllTypes::kRepeatedImportEnumFieldNumber;
const int TestAllTypes::kRepeatedStringPieceFieldNumber;
const int TestAllTypes::kRepeatedCordFieldNumber;
const int TestAllTypes::kRepeatedLazyMessageFieldNumber;
const int TestAllTypes::kDefaultInt32FieldNumber;
const int TestAllTypes::kDefaultInt64FieldNumber;
const int TestAllTypes::kDefaultUint32FieldNumber;
const int TestAllTypes::kDefaultUint64FieldNumber;
const int TestAllTypes::kDefaultSint32FieldNumber;
const int TestAllTypes::kDefaultSint64FieldNumber;
const int TestAllTypes::kDefaultFixed32FieldNumber;
const int TestAllTypes::kDefaultFixed64FieldNumber;
const int TestAllTypes::kDefaultSfixed32FieldNumber;
const int TestAllTypes::kDefaultSfixed64FieldNumber;
const int TestAllTypes::kDefaultFloatFieldNumber;
const int TestAllTypes::kDefaultDoubleFieldNumber;
const int TestAllTypes::kDefaultBoolFieldNumber;
const int TestAllTypes::kDefaultStringFieldNumber;
const int TestAllTypes::kDefaultBytesFieldNumber;
const int TestAllTypes::kDefaultNestedEnumFieldNumber;
const int TestAllTypes::kDefaultForeignEnumFieldNumber;
const int TestAllTypes::kDefaultImportEnumFieldNumber;
const int TestAllTypes::kDefaultStringPieceFieldNumber;
const int TestAllTypes::kDefaultCordFieldNumber;
const int TestAllTypes::kOneofUint32FieldNumber;
const int TestAllTypes::kOneofNestedMessageFieldNumber;
const int TestAllTypes::kOneofStringFieldNumber;
const int TestAllTypes::kOneofBytesFieldNumber;
#endif  // !_MSC_VER

TestAllTypes::TestAllTypes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllTypes)
}

void TestAllTypes::InitAsDefaultInstance() {
  optionalgroup_ = const_cast< ::protobuf_unittest::TestAllTypes_OptionalGroup*>(&::protobuf_unittest::TestAllTypes_OptionalGroup::default_instance());
  optional_nested_message_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(&::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  optional_foreign_message_ = const_cast< ::protobuf_unittest::ForeignMessage*>(&::protobuf_unittest::ForeignMessage::default_instance());
  optional_import_message_ = const_cast< ::protobuf_unittest_import::ImportMessage*>(&::protobuf_unittest_import::ImportMessage::default_instance());
  optional_public_import_message_ = const_cast< ::protobuf_unittest_import::PublicImportMessage*>(&::protobuf_unittest_import::PublicImportMessage::default_instance());
  optional_lazy_message_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(&::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  TestAllTypes_default_oneof_instance_->oneof_uint32_ = 0u;
  TestAllTypes_default_oneof_instance_->oneof_nested_message_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(&::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
  TestAllTypes_default_oneof_instance_->oneof_string_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestAllTypes_default_oneof_instance_->oneof_bytes_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
}

TestAllTypes::TestAllTypes(const TestAllTypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes)
}

void TestAllTypes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  optional_int32_ = 0;
  optional_int64_ = GOOGLE_LONGLONG(0);
  optional_uint32_ = 0u;
  optional_uint64_ = GOOGLE_ULONGLONG(0);
  optional_sint32_ = 0;
  optional_sint64_ = GOOGLE_LONGLONG(0);
  optional_fixed32_ = 0u;
  optional_fixed64_ = GOOGLE_ULONGLONG(0);
  optional_sfixed32_ = 0;
  optional_sfixed64_ = GOOGLE_LONGLONG(0);
  optional_float_ = 0;
  optional_double_ = 0;
  optional_bool_ = false;
  optional_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionalgroup_ = NULL;
  optional_nested_message_ = NULL;
  optional_foreign_message_ = NULL;
  optional_import_message_ = NULL;
  optional_nested_enum_ = 1;
  optional_foreign_enum_ = 4;
  optional_import_enum_ = 7;
  optional_string_piece_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_public_import_message_ = NULL;
  optional_lazy_message_ = NULL;
  default_int32_ = 41;
  default_int64_ = GOOGLE_LONGLONG(42);
  default_uint32_ = 43u;
  default_uint64_ = GOOGLE_ULONGLONG(44);
  default_sint32_ = -45;
  default_sint64_ = GOOGLE_LONGLONG(46);
  default_fixed32_ = 47u;
  default_fixed64_ = GOOGLE_ULONGLONG(48);
  default_sfixed32_ = 49;
  default_sfixed64_ = GOOGLE_LONGLONG(-50);
  default_float_ = 51.5f;
  default_double_ = 52000;
  default_bool_ = true;
  default_string_ = const_cast< ::std::string*>(_default_default_string_);
  default_bytes_ = const_cast< ::std::string*>(_default_default_bytes_);
  default_nested_enum_ = 2;
  default_foreign_enum_ = 5;
  default_import_enum_ = 8;
  default_string_piece_ = const_cast< ::std::string*>(_default_default_string_piece_);
  default_cord_ = const_cast< ::std::string*>(_default_default_cord_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_oneof_field();
}

TestAllTypes::~TestAllTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes)
  SharedDtor();
}

void TestAllTypes::SharedDtor() {
  if (optional_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete optional_string_;
  }
  if (optional_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete optional_bytes_;
  }
  if (optional_string_piece_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete optional_string_piece_;
  }
  if (optional_cord_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete optional_cord_;
  }
  if (default_string_ != _default_default_string_) {
    delete default_string_;
  }
  if (default_bytes_ != _default_default_bytes_) {
    delete default_bytes_;
  }
  if (default_string_piece_ != _default_default_string_piece_) {
    delete default_string_piece_;
  }
  if (default_cord_ != _default_default_cord_) {
    delete default_cord_;
  }
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  if (this != default_instance_) {
    delete optionalgroup_;
    delete optional_nested_message_;
    delete optional_foreign_message_;
    delete optional_import_message_;
    delete optional_public_import_message_;
    delete optional_lazy_message_;
  }
}

void TestAllTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllTypes_descriptor_;
}

const TestAllTypes& TestAllTypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestAllTypes* TestAllTypes::default_instance_ = NULL;

TestAllTypes* TestAllTypes::New() const {
  return new TestAllTypes;
}

void TestAllTypes::clear_oneof_field() {
  switch(oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      delete oneof_field_.oneof_nested_message_;
      break;
    }
    case kOneofString: {
      delete oneof_field_.oneof_string_;
      break;
    }
    case kOneofBytes: {
      delete oneof_field_.oneof_bytes_;
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


void TestAllTypes::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TestAllTypes*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(optional_int64_, optional_fixed64_);
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(optional_sfixed64_, optional_double_);
    optional_bool_ = false;
    if (has_optional_string()) {
      if (optional_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        optional_string_->clear();
      }
    }
    if (has_optional_bytes()) {
      if (optional_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        optional_bytes_->clear();
      }
    }
    if (has_optionalgroup()) {
      if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestAllTypes_OptionalGroup::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680) {
    if (has_optional_nested_message()) {
      if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
    }
    if (has_optional_foreign_message()) {
      if (optional_foreign_message_ != NULL) optional_foreign_message_->::protobuf_unittest::ForeignMessage::Clear();
    }
    if (has_optional_import_message()) {
      if (optional_import_message_ != NULL) optional_import_message_->::protobuf_unittest_import::ImportMessage::Clear();
    }
    optional_nested_enum_ = 1;
    optional_foreign_enum_ = 4;
    optional_import_enum_ = 7;
    if (has_optional_string_piece()) {
      if (optional_string_piece_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        optional_string_piece_->clear();
      }
    }
    if (has_optional_cord()) {
      if (optional_cord_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        optional_cord_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & 50331648) {
    if (has_optional_public_import_message()) {
      if (optional_public_import_message_ != NULL) optional_public_import_message_->::protobuf_unittest_import::PublicImportMessage::Clear();
    }
    if (has_optional_lazy_message()) {
      if (optional_lazy_message_ != NULL) optional_lazy_message_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
    }
  }
  if (_has_bits_[48 / 32] & 16252928) {
    default_int32_ = 41;
    default_int64_ = GOOGLE_LONGLONG(42);
    default_uint32_ = 43u;
    default_uint64_ = GOOGLE_ULONGLONG(44);
    default_sint32_ = -45;
  }
  if (_has_bits_[56 / 32] & 4278190080) {
    default_sint64_ = GOOGLE_LONGLONG(46);
    default_fixed32_ = 47u;
    default_fixed64_ = GOOGLE_ULONGLONG(48);
    default_sfixed32_ = 49;
    default_sfixed64_ = GOOGLE_LONGLONG(-50);
    default_float_ = 51.5f;
    default_double_ = 52000;
    default_bool_ = true;
  }
  if (_has_bits_[64 / 32] & 127) {
    if (has_default_string()) {
      if (default_string_ != _default_default_string_) {
        default_string_->assign(*_default_default_string_);
      }
    }
    if (has_default_bytes()) {
      if (default_bytes_ != _default_default_bytes_) {
        default_bytes_->assign(*_default_default_bytes_);
      }
    }
    default_nested_enum_ = 2;
    default_foreign_enum_ = 5;
    default_import_enum_ = 8;
    if (has_default_string_piece()) {
      if (default_string_piece_ != _default_default_string_piece_) {
        default_string_piece_->assign(*_default_default_string_piece_);
      }
    }
    if (has_default_cord()) {
      if (default_cord_ != _default_default_cord_) {
        default_cord_->assign(*_default_default_cord_);
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  repeated_int32_.Clear();
  repeated_int64_.Clear();
  repeated_uint32_.Clear();
  repeated_uint64_.Clear();
  repeated_sint32_.Clear();
  repeated_sint64_.Clear();
  repeated_fixed32_.Clear();
  repeated_fixed64_.Clear();
  repeated_sfixed32_.Clear();
  repeated_sfixed64_.Clear();
  repeated_float_.Clear();
  repeated_double_.Clear();
  repeated_bool_.Clear();
  repeated_string_.Clear();
  repeated_bytes_.Clear();
  repeatedgroup_.Clear();
  repeated_nested_message_.Clear();
  repeated_foreign_message_.Clear();
  repeated_import_message_.Clear();
  repeated_nested_enum_.Clear();
  repeated_foreign_enum_.Clear();
  repeated_import_enum_.Clear();
  repeated_string_piece_.Clear();
  repeated_cord_.Clear();
  repeated_lazy_message_.Clear();
  clear_oneof_field();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestAllTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 optional_int32 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optional_int32_)));
          set_has_optional_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_optional_int64;
        break;
      }

      // optional int64 optional_int64 = 2;
      case 2: {
        if (tag == 16) {
         parse_optional_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_int64_)));
          set_has_optional_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_optional_uint32;
        break;
      }

      // optional uint32 optional_uint32 = 3;
      case 3: {
        if (tag == 24) {
         parse_optional_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optional_uint32_)));
          set_has_optional_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_optional_uint64;
        break;
      }

      // optional uint64 optional_uint64 = 4;
      case 4: {
        if (tag == 32) {
         parse_optional_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &optional_uint64_)));
          set_has_optional_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_optional_sint32;
        break;
      }

      // optional sint32 optional_sint32 = 5;
      case 5: {
        if (tag == 40) {
         parse_optional_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &optional_sint32_)));
          set_has_optional_sint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_optional_sint64;
        break;
      }

      // optional sint64 optional_sint64 = 6;
      case 6: {
        if (tag == 48) {
         parse_optional_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &optional_sint64_)));
          set_has_optional_sint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_optional_fixed32;
        break;
      }

      // optional fixed32 optional_fixed32 = 7;
      case 7: {
        if (tag == 61) {
         parse_optional_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &optional_fixed32_)));
          set_has_optional_fixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_optional_fixed64;
        break;
      }

      // optional fixed64 optional_fixed64 = 8;
      case 8: {
        if (tag == 65) {
         parse_optional_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &optional_fixed64_)));
          set_has_optional_fixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_optional_sfixed32;
        break;
      }

      // optional sfixed32 optional_sfixed32 = 9;
      case 9: {
        if (tag == 77) {
         parse_optional_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &optional_sfixed32_)));
          set_has_optional_sfixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_optional_sfixed64;
        break;
      }

      // optional sfixed64 optional_sfixed64 = 10;
      case 10: {
        if (tag == 81) {
         parse_optional_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optional_sfixed64_)));
          set_has_optional_sfixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_optional_float;
        break;
      }

      // optional float optional_float = 11;
      case 11: {
        if (tag == 93) {
         parse_optional_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_float_)));
          set_has_optional_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_optional_double;
        break;
      }

      // optional double optional_double = 12;
      case 12: {
        if (tag == 97) {
         parse_optional_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optional_double_)));
          set_has_optional_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_optional_bool;
        break;
      }

      // optional bool optional_bool = 13;
      case 13: {
        if (tag == 104) {
         parse_optional_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &optional_bool_)));
          set_has_optional_bool();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_optional_string;
        break;
      }

      // optional string optional_string = 14;
      case 14: {
        if (tag == 114) {
         parse_optional_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_string().data(), this->optional_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "optional_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_optional_bytes;
        break;
      }

      // optional bytes optional_bytes = 15;
      case 15: {
        if (tag == 122) {
         parse_optional_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_optional_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(131)) goto parse_optionalgroup;
        break;
      }

      // optional group OptionalGroup = 16 {
      case 16: {
        if (tag == 131) {
         parse_optionalgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                16, input, mutable_optionalgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_optional_nested_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
      case 18: {
        if (tag == 146) {
         parse_optional_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_optional_foreign_message;
        break;
      }

      // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
      case 19: {
        if (tag == 154) {
         parse_optional_foreign_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_foreign_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_optional_import_message;
        break;
      }

      // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
      case 20: {
        if (tag == 162) {
         parse_optional_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_optional_nested_enum;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
      case 21: {
        if (tag == 168) {
         parse_optional_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value)) {
            set_optional_nested_enum(static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(21, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_optional_foreign_enum;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
      case 22: {
        if (tag == 176) {
         parse_optional_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_optional_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(22, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_optional_import_enum;
        break;
      }

      // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
      case 23: {
        if (tag == 184) {
         parse_optional_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnum_IsValid(value)) {
            set_optional_import_enum(static_cast< ::protobuf_unittest_import::ImportEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(23, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_optional_string_piece;
        break;
      }

      // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
      case 24: {
        if (tag == 194) {
         parse_optional_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_string_piece().data(), this->optional_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "optional_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_optional_cord;
        break;
      }

      // optional string optional_cord = 25 [ctype = CORD];
      case 25: {
        if (tag == 202) {
         parse_optional_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_cord().data(), this->optional_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "optional_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_optional_public_import_message;
        break;
      }

      // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
      case 26: {
        if (tag == 210) {
         parse_optional_public_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_public_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_optional_lazy_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
      case 27: {
        if (tag == 218) {
         parse_optional_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_lazy_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_repeated_int32;
        break;
      }

      // repeated int32 repeated_int32 = 31;
      case 31: {
        if (tag == 248) {
         parse_repeated_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 248, input, this->mutable_repeated_int32())));
        } else if (tag == 250) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_repeated_int32;
        if (input->ExpectTag(256)) goto parse_repeated_int64;
        break;
      }

      // repeated int64 repeated_int64 = 32;
      case 32: {
        if (tag == 256) {
         parse_repeated_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 256, input, this->mutable_repeated_int64())));
        } else if (tag == 258) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repeated_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_repeated_int64;
        if (input->ExpectTag(264)) goto parse_repeated_uint32;
        break;
      }

      // repeated uint32 repeated_uint32 = 33;
      case 33: {
        if (tag == 264) {
         parse_repeated_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 264, input, this->mutable_repeated_uint32())));
        } else if (tag == 266) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_repeated_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_repeated_uint32;
        if (input->ExpectTag(272)) goto parse_repeated_uint64;
        break;
      }

      // repeated uint64 repeated_uint64 = 34;
      case 34: {
        if (tag == 272) {
         parse_repeated_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 272, input, this->mutable_repeated_uint64())));
        } else if (tag == 274) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repeated_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_repeated_uint64;
        if (input->ExpectTag(280)) goto parse_repeated_sint32;
        break;
      }

      // repeated sint32 repeated_sint32 = 35;
      case 35: {
        if (tag == 280) {
         parse_repeated_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 280, input, this->mutable_repeated_sint32())));
        } else if (tag == 282) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_repeated_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_repeated_sint32;
        if (input->ExpectTag(288)) goto parse_repeated_sint64;
        break;
      }

      // repeated sint64 repeated_sint64 = 36;
      case 36: {
        if (tag == 288) {
         parse_repeated_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 288, input, this->mutable_repeated_sint64())));
        } else if (tag == 290) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_repeated_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_repeated_sint64;
        if (input->ExpectTag(301)) goto parse_repeated_fixed32;
        break;
      }

      // repeated fixed32 repeated_fixed32 = 37;
      case 37: {
        if (tag == 301) {
         parse_repeated_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 301, input, this->mutable_repeated_fixed32())));
        } else if (tag == 298) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repeated_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(301)) goto parse_repeated_fixed32;
        if (input->ExpectTag(305)) goto parse_repeated_fixed64;
        break;
      }

      // repeated fixed64 repeated_fixed64 = 38;
      case 38: {
        if (tag == 305) {
         parse_repeated_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 305, input, this->mutable_repeated_fixed64())));
        } else if (tag == 306) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repeated_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(305)) goto parse_repeated_fixed64;
        if (input->ExpectTag(317)) goto parse_repeated_sfixed32;
        break;
      }

      // repeated sfixed32 repeated_sfixed32 = 39;
      case 39: {
        if (tag == 317) {
         parse_repeated_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 317, input, this->mutable_repeated_sfixed32())));
        } else if (tag == 314) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_repeated_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(317)) goto parse_repeated_sfixed32;
        if (input->ExpectTag(321)) goto parse_repeated_sfixed64;
        break;
      }

      // repeated sfixed64 repeated_sfixed64 = 40;
      case 40: {
        if (tag == 321) {
         parse_repeated_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 321, input, this->mutable_repeated_sfixed64())));
        } else if (tag == 322) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_repeated_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(321)) goto parse_repeated_sfixed64;
        if (input->ExpectTag(333)) goto parse_repeated_float;
        break;
      }

      // repeated float repeated_float = 41;
      case 41: {
        if (tag == 333) {
         parse_repeated_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 333, input, this->mutable_repeated_float())));
        } else if (tag == 330) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repeated_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(333)) goto parse_repeated_float;
        if (input->ExpectTag(337)) goto parse_repeated_double;
        break;
      }

      // repeated double repeated_double = 42;
      case 42: {
        if (tag == 337) {
         parse_repeated_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 337, input, this->mutable_repeated_double())));
        } else if (tag == 338) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_repeated_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(337)) goto parse_repeated_double;
        if (input->ExpectTag(344)) goto parse_repeated_bool;
        break;
      }

      // repeated bool repeated_bool = 43;
      case 43: {
        if (tag == 344) {
         parse_repeated_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 344, input, this->mutable_repeated_bool())));
        } else if (tag == 346) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_repeated_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_repeated_bool;
        if (input->ExpectTag(354)) goto parse_repeated_string;
        break;
      }

      // repeated string repeated_string = 44;
      case 44: {
        if (tag == 354) {
         parse_repeated_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_string(this->repeated_string_size() - 1).data(),
            this->repeated_string(this->repeated_string_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeated_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_repeated_string;
        if (input->ExpectTag(362)) goto parse_repeated_bytes;
        break;
      }

      // repeated bytes repeated_bytes = 45;
      case 45: {
        if (tag == 362) {
         parse_repeated_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_repeated_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_repeated_bytes;
        if (input->ExpectTag(371)) goto parse_repeatedgroup;
        break;
      }

      // repeated group RepeatedGroup = 46 {
      case 46: {
        if (tag == 371) {
         parse_repeatedgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                46, input, add_repeatedgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(371)) goto parse_repeatedgroup;
        if (input->ExpectTag(386)) goto parse_repeated_nested_message;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
      case 48: {
        if (tag == 386) {
         parse_repeated_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeated_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_repeated_nested_message;
        if (input->ExpectTag(394)) goto parse_repeated_foreign_message;
        break;
      }

      // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
      case 49: {
        if (tag == 394) {
         parse_repeated_foreign_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeated_foreign_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_repeated_foreign_message;
        if (input->ExpectTag(402)) goto parse_repeated_import_message;
        break;
      }

      // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
      case 50: {
        if (tag == 402) {
         parse_repeated_import_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeated_import_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_repeated_import_message;
        if (input->ExpectTag(408)) goto parse_repeated_nested_enum;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
      case 51: {
        if (tag == 408) {
         parse_repeated_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value)) {
            add_repeated_nested_enum(static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(51, value);
          }
        } else if (tag == 410) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::protobuf_unittest::TestAllTypes_NestedEnum_IsValid,
                 this->mutable_repeated_nested_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_repeated_nested_enum;
        if (input->ExpectTag(416)) goto parse_repeated_foreign_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
      case 52: {
        if (tag == 416) {
         parse_repeated_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_repeated_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(52, value);
          }
        } else if (tag == 418) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::protobuf_unittest::ForeignEnum_IsValid,
                 this->mutable_repeated_foreign_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(416)) goto parse_repeated_foreign_enum;
        if (input->ExpectTag(424)) goto parse_repeated_import_enum;
        break;
      }

      // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
      case 53: {
        if (tag == 424) {
         parse_repeated_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnum_IsValid(value)) {
            add_repeated_import_enum(static_cast< ::protobuf_unittest_import::ImportEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(53, value);
          }
        } else if (tag == 426) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::protobuf_unittest_import::ImportEnum_IsValid,
                 this->mutable_repeated_import_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(424)) goto parse_repeated_import_enum;
        if (input->ExpectTag(434)) goto parse_repeated_string_piece;
        break;
      }

      // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
      case 54: {
        if (tag == 434) {
         parse_repeated_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_string_piece(this->repeated_string_piece_size() - 1).data(),
            this->repeated_string_piece(this->repeated_string_piece_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeated_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_repeated_string_piece;
        if (input->ExpectTag(442)) goto parse_repeated_cord;
        break;
      }

      // repeated string repeated_cord = 55 [ctype = CORD];
      case 55: {
        if (tag == 442) {
         parse_repeated_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_cord(this->repeated_cord_size() - 1).data(),
            this->repeated_cord(this->repeated_cord_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeated_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_repeated_cord;
        if (input->ExpectTag(458)) goto parse_repeated_lazy_message;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
      case 57: {
        if (tag == 458) {
         parse_repeated_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeated_lazy_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_repeated_lazy_message;
        if (input->ExpectTag(488)) goto parse_default_int32;
        break;
      }

      // optional int32 default_int32 = 61 [default = 41];
      case 61: {
        if (tag == 488) {
         parse_default_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_int32_)));
          set_has_default_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(496)) goto parse_default_int64;
        break;
      }

      // optional int64 default_int64 = 62 [default = 42];
      case 62: {
        if (tag == 496) {
         parse_default_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &default_int64_)));
          set_has_default_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(504)) goto parse_default_uint32;
        break;
      }

      // optional uint32 default_uint32 = 63 [default = 43];
      case 63: {
        if (tag == 504) {
         parse_default_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_uint32_)));
          set_has_default_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(512)) goto parse_default_uint64;
        break;
      }

      // optional uint64 default_uint64 = 64 [default = 44];
      case 64: {
        if (tag == 512) {
         parse_default_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &default_uint64_)));
          set_has_default_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_default_sint32;
        break;
      }

      // optional sint32 default_sint32 = 65 [default = -45];
      case 65: {
        if (tag == 520) {
         parse_default_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &default_sint32_)));
          set_has_default_sint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(528)) goto parse_default_sint64;
        break;
      }

      // optional sint64 default_sint64 = 66 [default = 46];
      case 66: {
        if (tag == 528) {
         parse_default_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &default_sint64_)));
          set_has_default_sint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(541)) goto parse_default_fixed32;
        break;
      }

      // optional fixed32 default_fixed32 = 67 [default = 47];
      case 67: {
        if (tag == 541) {
         parse_default_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &default_fixed32_)));
          set_has_default_fixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(545)) goto parse_default_fixed64;
        break;
      }

      // optional fixed64 default_fixed64 = 68 [default = 48];
      case 68: {
        if (tag == 545) {
         parse_default_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &default_fixed64_)));
          set_has_default_fixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(557)) goto parse_default_sfixed32;
        break;
      }

      // optional sfixed32 default_sfixed32 = 69 [default = 49];
      case 69: {
        if (tag == 557) {
         parse_default_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &default_sfixed32_)));
          set_has_default_sfixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(561)) goto parse_default_sfixed64;
        break;
      }

      // optional sfixed64 default_sfixed64 = 70 [default = -50];
      case 70: {
        if (tag == 561) {
         parse_default_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &default_sfixed64_)));
          set_has_default_sfixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(573)) goto parse_default_float;
        break;
      }

      // optional float default_float = 71 [default = 51.5];
      case 71: {
        if (tag == 573) {
         parse_default_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &default_float_)));
          set_has_default_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(577)) goto parse_default_double;
        break;
      }

      // optional double default_double = 72 [default = 52000];
      case 72: {
        if (tag == 577) {
         parse_default_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_double_)));
          set_has_default_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(584)) goto parse_default_bool;
        break;
      }

      // optional bool default_bool = 73 [default = true];
      case 73: {
        if (tag == 584) {
         parse_default_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default_bool_)));
          set_has_default_bool();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(594)) goto parse_default_string;
        break;
      }

      // optional string default_string = 74 [default = "hello"];
      case 74: {
        if (tag == 594) {
         parse_default_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_string().data(), this->default_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "default_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(602)) goto parse_default_bytes;
        break;
      }

      // optional bytes default_bytes = 75 [default = "world"];
      case 75: {
        if (tag == 602) {
         parse_default_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_default_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(648)) goto parse_default_nested_enum;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
      case 81: {
        if (tag == 648) {
         parse_default_nested_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestAllTypes_NestedEnum_IsValid(value)) {
            set_default_nested_enum(static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(81, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(656)) goto parse_default_foreign_enum;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
      case 82: {
        if (tag == 656) {
         parse_default_foreign_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_default_foreign_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(82, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(664)) goto parse_default_import_enum;
        break;
      }

      // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
      case 83: {
        if (tag == 664) {
         parse_default_import_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest_import::ImportEnum_IsValid(value)) {
            set_default_import_enum(static_cast< ::protobuf_unittest_import::ImportEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(83, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(674)) goto parse_default_string_piece;
        break;
      }

      // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
      case 84: {
        if (tag == 674) {
         parse_default_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_string_piece().data(), this->default_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "default_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(682)) goto parse_default_cord;
        break;
      }

      // optional string default_cord = 85 [default = "123", ctype = CORD];
      case 85: {
        if (tag == 682) {
         parse_default_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_cord().data(), this->default_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "default_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(888)) goto parse_oneof_uint32;
        break;
      }

      // optional uint32 oneof_uint32 = 111;
      case 111: {
        if (tag == 888) {
         parse_oneof_uint32:
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oneof_field_.oneof_uint32_)));
          set_has_oneof_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(898)) goto parse_oneof_nested_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
      case 112: {
        if (tag == 898) {
         parse_oneof_nested_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oneof_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(906)) goto parse_oneof_string;
        break;
      }

      // optional string oneof_string = 113;
      case 113: {
        if (tag == 906) {
         parse_oneof_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oneof_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oneof_string().data(), this->oneof_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "oneof_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(914)) goto parse_oneof_bytes;
        break;
      }

      // optional bytes oneof_bytes = 114;
      case 114: {
        if (tag == 914) {
         parse_oneof_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oneof_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllTypes)
  return false;
#undef DO_
}

void TestAllTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllTypes)
  // optional int32 optional_int32 = 1;
  if (has_optional_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->optional_int32(), output);
  }

  // optional int64 optional_int64 = 2;
  if (has_optional_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->optional_int64(), output);
  }

  // optional uint32 optional_uint32 = 3;
  if (has_optional_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->optional_uint32(), output);
  }

  // optional uint64 optional_uint64 = 4;
  if (has_optional_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->optional_uint64(), output);
  }

  // optional sint32 optional_sint32 = 5;
  if (has_optional_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->optional_sint32(), output);
  }

  // optional sint64 optional_sint64 = 6;
  if (has_optional_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->optional_sint64(), output);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (has_optional_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->optional_fixed32(), output);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (has_optional_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->optional_fixed64(), output);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (has_optional_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(9, this->optional_sfixed32(), output);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (has_optional_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->optional_sfixed64(), output);
  }

  // optional float optional_float = 11;
  if (has_optional_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->optional_float(), output);
  }

  // optional double optional_double = 12;
  if (has_optional_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->optional_double(), output);
  }

  // optional bool optional_bool = 13;
  if (has_optional_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->optional_bool(), output);
  }

  // optional string optional_string = 14;
  if (has_optional_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), this->optional_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->optional_string(), output);
  }

  // optional bytes optional_bytes = 15;
  if (has_optional_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->optional_bytes(), output);
  }

  // optional group OptionalGroup = 16 {
  if (has_optionalgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      16, this->optionalgroup(), output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
  if (has_optional_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->optional_nested_message(), output);
  }

  // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
  if (has_optional_foreign_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->optional_foreign_message(), output);
  }

  // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
  if (has_optional_import_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->optional_import_message(), output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  if (has_optional_nested_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->optional_nested_enum(), output);
  }

  // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
  if (has_optional_foreign_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->optional_foreign_enum(), output);
  }

  // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
  if (has_optional_import_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->optional_import_enum(), output);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (has_optional_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string_piece().data(), this->optional_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->optional_string_piece(), output);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (has_optional_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_cord().data(), this->optional_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->optional_cord(), output);
  }

  // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
  if (has_optional_public_import_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->optional_public_import_message(), output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
  if (has_optional_lazy_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->optional_lazy_message(), output);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      31, this->repeated_int32(i), output);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      32, this->repeated_int64(i), output);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0; i < this->repeated_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      33, this->repeated_uint32(i), output);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      34, this->repeated_uint64(i), output);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0; i < this->repeated_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      35, this->repeated_sint32(i), output);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0; i < this->repeated_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      36, this->repeated_sint64(i), output);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      37, this->repeated_fixed32(i), output);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      38, this->repeated_fixed64(i), output);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0; i < this->repeated_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      39, this->repeated_sfixed32(i), output);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0; i < this->repeated_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      40, this->repeated_sfixed64(i), output);
  }

  // repeated float repeated_float = 41;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      41, this->repeated_float(i), output);
  }

  // repeated double repeated_double = 42;
  for (int i = 0; i < this->repeated_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      42, this->repeated_double(i), output);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0; i < this->repeated_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      43, this->repeated_bool(i), output);
  }

  // repeated string repeated_string = 44;
  for (int i = 0; i < this->repeated_string_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeated_string(i).data(), this->repeated_string(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeated_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      44, this->repeated_string(i), output);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      45, this->repeated_bytes(i), output);
  }

  // repeated group RepeatedGroup = 46 {
  for (int i = 0; i < this->repeatedgroup_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      46, this->repeatedgroup(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  for (int i = 0; i < this->repeated_nested_message_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->repeated_nested_message(i), output);
  }

  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  for (int i = 0; i < this->repeated_foreign_message_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->repeated_foreign_message(i), output);
  }

  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  for (int i = 0; i < this->repeated_import_message_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->repeated_import_message(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  for (int i = 0; i < this->repeated_nested_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      51, this->repeated_nested_enum(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  for (int i = 0; i < this->repeated_foreign_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      52, this->repeated_foreign_enum(i), output);
  }

  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  for (int i = 0; i < this->repeated_import_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      53, this->repeated_import_enum(i), output);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeated_string_piece(i).data(), this->repeated_string_piece(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeated_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      54, this->repeated_string_piece(i), output);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0; i < this->repeated_cord_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeated_cord(i).data(), this->repeated_cord(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeated_cord");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      55, this->repeated_cord(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (int i = 0; i < this->repeated_lazy_message_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->repeated_lazy_message(i), output);
  }

  // optional int32 default_int32 = 61 [default = 41];
  if (has_default_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->default_int32(), output);
  }

  // optional int64 default_int64 = 62 [default = 42];
  if (has_default_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(62, this->default_int64(), output);
  }

  // optional uint32 default_uint32 = 63 [default = 43];
  if (has_default_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(63, this->default_uint32(), output);
  }

  // optional uint64 default_uint64 = 64 [default = 44];
  if (has_default_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(64, this->default_uint64(), output);
  }

  // optional sint32 default_sint32 = 65 [default = -45];
  if (has_default_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(65, this->default_sint32(), output);
  }

  // optional sint64 default_sint64 = 66 [default = 46];
  if (has_default_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(66, this->default_sint64(), output);
  }

  // optional fixed32 default_fixed32 = 67 [default = 47];
  if (has_default_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(67, this->default_fixed32(), output);
  }

  // optional fixed64 default_fixed64 = 68 [default = 48];
  if (has_default_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(68, this->default_fixed64(), output);
  }

  // optional sfixed32 default_sfixed32 = 69 [default = 49];
  if (has_default_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(69, this->default_sfixed32(), output);
  }

  // optional sfixed64 default_sfixed64 = 70 [default = -50];
  if (has_default_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(70, this->default_sfixed64(), output);
  }

  // optional float default_float = 71 [default = 51.5];
  if (has_default_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(71, this->default_float(), output);
  }

  // optional double default_double = 72 [default = 52000];
  if (has_default_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(72, this->default_double(), output);
  }

  // optional bool default_bool = 73 [default = true];
  if (has_default_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(73, this->default_bool(), output);
  }

  // optional string default_string = 74 [default = "hello"];
  if (has_default_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string().data(), this->default_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "default_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      74, this->default_string(), output);
  }

  // optional bytes default_bytes = 75 [default = "world"];
  if (has_default_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      75, this->default_bytes(), output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
  if (has_default_nested_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      81, this->default_nested_enum(), output);
  }

  // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
  if (has_default_foreign_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      82, this->default_foreign_enum(), output);
  }

  // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
  if (has_default_import_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      83, this->default_import_enum(), output);
  }

  // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  if (has_default_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string_piece().data(), this->default_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "default_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->default_string_piece(), output);
  }

  // optional string default_cord = 85 [default = "123", ctype = CORD];
  if (has_default_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_cord().data(), this->default_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "default_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      85, this->default_cord(), output);
  }

  // optional uint32 oneof_uint32 = 111;
  if (has_oneof_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(111, this->oneof_uint32(), output);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
  if (has_oneof_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112, this->oneof_nested_message(), output);
  }

  // optional string oneof_string = 113;
  if (has_oneof_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oneof_string().data(), this->oneof_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "oneof_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      113, this->oneof_string(), output);
  }

  // optional bytes oneof_bytes = 114;
  if (has_oneof_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      114, this->oneof_bytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllTypes)
}

::google::protobuf::uint8* TestAllTypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes)
  // optional int32 optional_int32 = 1;
  if (has_optional_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->optional_int32(), target);
  }

  // optional int64 optional_int64 = 2;
  if (has_optional_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->optional_int64(), target);
  }

  // optional uint32 optional_uint32 = 3;
  if (has_optional_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->optional_uint32(), target);
  }

  // optional uint64 optional_uint64 = 4;
  if (has_optional_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->optional_uint64(), target);
  }

  // optional sint32 optional_sint32 = 5;
  if (has_optional_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->optional_sint32(), target);
  }

  // optional sint64 optional_sint64 = 6;
  if (has_optional_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->optional_sint64(), target);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (has_optional_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->optional_fixed32(), target);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (has_optional_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->optional_fixed64(), target);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (has_optional_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(9, this->optional_sfixed32(), target);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (has_optional_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->optional_sfixed64(), target);
  }

  // optional float optional_float = 11;
  if (has_optional_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->optional_float(), target);
  }

  // optional double optional_double = 12;
  if (has_optional_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->optional_double(), target);
  }

  // optional bool optional_bool = 13;
  if (has_optional_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->optional_bool(), target);
  }

  // optional string optional_string = 14;
  if (has_optional_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), this->optional_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->optional_string(), target);
  }

  // optional bytes optional_bytes = 15;
  if (has_optional_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->optional_bytes(), target);
  }

  // optional group OptionalGroup = 16 {
  if (has_optionalgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        16, this->optionalgroup(), target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
  if (has_optional_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->optional_nested_message(), target);
  }

  // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
  if (has_optional_foreign_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->optional_foreign_message(), target);
  }

  // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
  if (has_optional_import_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->optional_import_message(), target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  if (has_optional_nested_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->optional_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
  if (has_optional_foreign_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->optional_foreign_enum(), target);
  }

  // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
  if (has_optional_import_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->optional_import_enum(), target);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (has_optional_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string_piece().data(), this->optional_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->optional_string_piece(), target);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (has_optional_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_cord().data(), this->optional_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->optional_cord(), target);
  }

  // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
  if (has_optional_public_import_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->optional_public_import_message(), target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
  if (has_optional_lazy_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->optional_lazy_message(), target);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(31, this->repeated_int32(i), target);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(32, this->repeated_int64(i), target);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0; i < this->repeated_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(33, this->repeated_uint32(i), target);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(34, this->repeated_uint64(i), target);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0; i < this->repeated_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(35, this->repeated_sint32(i), target);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0; i < this->repeated_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(36, this->repeated_sint64(i), target);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(37, this->repeated_fixed32(i), target);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(38, this->repeated_fixed64(i), target);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0; i < this->repeated_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(39, this->repeated_sfixed32(i), target);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0; i < this->repeated_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64ToArray(40, this->repeated_sfixed64(i), target);
  }

  // repeated float repeated_float = 41;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(41, this->repeated_float(i), target);
  }

  // repeated double repeated_double = 42;
  for (int i = 0; i < this->repeated_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(42, this->repeated_double(i), target);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0; i < this->repeated_bool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(43, this->repeated_bool(i), target);
  }

  // repeated string repeated_string = 44;
  for (int i = 0; i < this->repeated_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string(i).data(), this->repeated_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeated_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(44, this->repeated_string(i), target);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(45, this->repeated_bytes(i), target);
  }

  // repeated group RepeatedGroup = 46 {
  for (int i = 0; i < this->repeatedgroup_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        46, this->repeatedgroup(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  for (int i = 0; i < this->repeated_nested_message_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        48, this->repeated_nested_message(i), target);
  }

  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  for (int i = 0; i < this->repeated_foreign_message_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        49, this->repeated_foreign_message(i), target);
  }

  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  for (int i = 0; i < this->repeated_import_message_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->repeated_import_message(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  for (int i = 0; i < this->repeated_nested_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      51, this->repeated_nested_enum(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  for (int i = 0; i < this->repeated_foreign_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      52, this->repeated_foreign_enum(i), target);
  }

  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  for (int i = 0; i < this->repeated_import_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      53, this->repeated_import_enum(i), target);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string_piece(i).data(), this->repeated_string_piece(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeated_string_piece");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(54, this->repeated_string_piece(i), target);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0; i < this->repeated_cord_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_cord(i).data(), this->repeated_cord(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeated_cord");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(55, this->repeated_cord(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (int i = 0; i < this->repeated_lazy_message_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        57, this->repeated_lazy_message(i), target);
  }

  // optional int32 default_int32 = 61 [default = 41];
  if (has_default_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->default_int32(), target);
  }

  // optional int64 default_int64 = 62 [default = 42];
  if (has_default_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(62, this->default_int64(), target);
  }

  // optional uint32 default_uint32 = 63 [default = 43];
  if (has_default_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(63, this->default_uint32(), target);
  }

  // optional uint64 default_uint64 = 64 [default = 44];
  if (has_default_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(64, this->default_uint64(), target);
  }

  // optional sint32 default_sint32 = 65 [default = -45];
  if (has_default_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(65, this->default_sint32(), target);
  }

  // optional sint64 default_sint64 = 66 [default = 46];
  if (has_default_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(66, this->default_sint64(), target);
  }

  // optional fixed32 default_fixed32 = 67 [default = 47];
  if (has_default_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(67, this->default_fixed32(), target);
  }

  // optional fixed64 default_fixed64 = 68 [default = 48];
  if (has_default_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(68, this->default_fixed64(), target);
  }

  // optional sfixed32 default_sfixed32 = 69 [default = 49];
  if (has_default_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(69, this->default_sfixed32(), target);
  }

  // optional sfixed64 default_sfixed64 = 70 [default = -50];
  if (has_default_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(70, this->default_sfixed64(), target);
  }

  // optional float default_float = 71 [default = 51.5];
  if (has_default_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(71, this->default_float(), target);
  }

  // optional double default_double = 72 [default = 52000];
  if (has_default_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(72, this->default_double(), target);
  }

  // optional bool default_bool = 73 [default = true];
  if (has_default_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(73, this->default_bool(), target);
  }

  // optional string default_string = 74 [default = "hello"];
  if (has_default_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string().data(), this->default_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "default_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        74, this->default_string(), target);
  }

  // optional bytes default_bytes = 75 [default = "world"];
  if (has_default_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        75, this->default_bytes(), target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
  if (has_default_nested_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      81, this->default_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
  if (has_default_foreign_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      82, this->default_foreign_enum(), target);
  }

  // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
  if (has_default_import_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      83, this->default_import_enum(), target);
  }

  // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  if (has_default_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_string_piece().data(), this->default_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "default_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        84, this->default_string_piece(), target);
  }

  // optional string default_cord = 85 [default = "123", ctype = CORD];
  if (has_default_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_cord().data(), this->default_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "default_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        85, this->default_cord(), target);
  }

  // optional uint32 oneof_uint32 = 111;
  if (has_oneof_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(111, this->oneof_uint32(), target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
  if (has_oneof_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        112, this->oneof_nested_message(), target);
  }

  // optional string oneof_string = 113;
  if (has_oneof_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oneof_string().data(), this->oneof_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "oneof_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        113, this->oneof_string(), target);
  }

  // optional bytes oneof_bytes = 114;
  if (has_oneof_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        114, this->oneof_bytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes)
  return target;
}

int TestAllTypes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 optional_int32 = 1;
    if (has_optional_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optional_int32());
    }

    // optional int64 optional_int64 = 2;
    if (has_optional_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->optional_int64());
    }

    // optional uint32 optional_uint32 = 3;
    if (has_optional_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->optional_uint32());
    }

    // optional uint64 optional_uint64 = 4;
    if (has_optional_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->optional_uint64());
    }

    // optional sint32 optional_sint32 = 5;
    if (has_optional_sint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->optional_sint32());
    }

    // optional sint64 optional_sint64 = 6;
    if (has_optional_sint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->optional_sint64());
    }

    // optional fixed32 optional_fixed32 = 7;
    if (has_optional_fixed32()) {
      total_size += 1 + 4;
    }

    // optional fixed64 optional_fixed64 = 8;
    if (has_optional_fixed64()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional sfixed32 optional_sfixed32 = 9;
    if (has_optional_sfixed32()) {
      total_size += 1 + 4;
    }

    // optional sfixed64 optional_sfixed64 = 10;
    if (has_optional_sfixed64()) {
      total_size += 1 + 8;
    }

    // optional float optional_float = 11;
    if (has_optional_float()) {
      total_size += 1 + 4;
    }

    // optional double optional_double = 12;
    if (has_optional_double()) {
      total_size += 1 + 8;
    }

    // optional bool optional_bool = 13;
    if (has_optional_bool()) {
      total_size += 1 + 1;
    }

    // optional string optional_string = 14;
    if (has_optional_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string());
    }

    // optional bytes optional_bytes = 15;
    if (has_optional_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->optional_bytes());
    }

    // optional group OptionalGroup = 16 {
    if (has_optionalgroup()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->optionalgroup());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    if (has_optional_nested_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_nested_message());
    }

    // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
    if (has_optional_foreign_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_foreign_message());
    }

    // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
    if (has_optional_import_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_import_message());
    }

    // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    if (has_optional_nested_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    if (has_optional_foreign_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_foreign_enum());
    }

    // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
    if (has_optional_import_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_import_enum());
    }

    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    if (has_optional_string_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string_piece());
    }

    // optional string optional_cord = 25 [ctype = CORD];
    if (has_optional_cord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_cord());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
    if (has_optional_public_import_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_public_import_message());
    }

    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
    if (has_optional_lazy_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_lazy_message());
    }

  }
  if (_has_bits_[51 / 32] & (0xffu << (51 % 32))) {
    // optional int32 default_int32 = 61 [default = 41];
    if (has_default_int32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->default_int32());
    }

    // optional int64 default_int64 = 62 [default = 42];
    if (has_default_int64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->default_int64());
    }

    // optional uint32 default_uint32 = 63 [default = 43];
    if (has_default_uint32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_uint32());
    }

    // optional uint64 default_uint64 = 64 [default = 44];
    if (has_default_uint64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->default_uint64());
    }

    // optional sint32 default_sint32 = 65 [default = -45];
    if (has_default_sint32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->default_sint32());
    }

  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional sint64 default_sint64 = 66 [default = 46];
    if (has_default_sint64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->default_sint64());
    }

    // optional fixed32 default_fixed32 = 67 [default = 47];
    if (has_default_fixed32()) {
      total_size += 2 + 4;
    }

    // optional fixed64 default_fixed64 = 68 [default = 48];
    if (has_default_fixed64()) {
      total_size += 2 + 8;
    }

    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    if (has_default_sfixed32()) {
      total_size += 2 + 4;
    }

    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    if (has_default_sfixed64()) {
      total_size += 2 + 8;
    }

    // optional float default_float = 71 [default = 51.5];
    if (has_default_float()) {
      total_size += 2 + 4;
    }

    // optional double default_double = 72 [default = 52000];
    if (has_default_double()) {
      total_size += 2 + 8;
    }

    // optional bool default_bool = 73 [default = true];
    if (has_default_bool()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    // optional string default_string = 74 [default = "hello"];
    if (has_default_string()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_string());
    }

    // optional bytes default_bytes = 75 [default = "world"];
    if (has_default_bytes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->default_bytes());
    }

    // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
    if (has_default_nested_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
    if (has_default_foreign_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_foreign_enum());
    }

    // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
    if (has_default_import_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_import_enum());
    }

    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    if (has_default_string_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_string_piece());
    }

    // optional string default_cord = 85 [default = "123", ctype = CORD];
    if (has_default_cord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_cord());
    }

  }
  // repeated int32 repeated_int32 = 31;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_int32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->repeated_int32(i));
    }
    total_size += 2 * this->repeated_int32_size() + data_size;
  }

  // repeated int64 repeated_int64 = 32;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_int64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->repeated_int64(i));
    }
    total_size += 2 * this->repeated_int64_size() + data_size;
  }

  // repeated uint32 repeated_uint32 = 33;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_uint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->repeated_uint32(i));
    }
    total_size += 2 * this->repeated_uint32_size() + data_size;
  }

  // repeated uint64 repeated_uint64 = 34;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_uint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->repeated_uint64(i));
    }
    total_size += 2 * this->repeated_uint64_size() + data_size;
  }

  // repeated sint32 repeated_sint32 = 35;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_sint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->repeated_sint32(i));
    }
    total_size += 2 * this->repeated_sint32_size() + data_size;
  }

  // repeated sint64 repeated_sint64 = 36;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_sint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->repeated_sint64(i));
    }
    total_size += 2 * this->repeated_sint64_size() + data_size;
  }

  // repeated fixed32 repeated_fixed32 = 37;
  {
    int data_size = 0;
    data_size = 4 * this->repeated_fixed32_size();
    total_size += 2 * this->repeated_fixed32_size() + data_size;
  }

  // repeated fixed64 repeated_fixed64 = 38;
  {
    int data_size = 0;
    data_size = 8 * this->repeated_fixed64_size();
    total_size += 2 * this->repeated_fixed64_size() + data_size;
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    int data_size = 0;
    data_size = 4 * this->repeated_sfixed32_size();
    total_size += 2 * this->repeated_sfixed32_size() + data_size;
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    int data_size = 0;
    data_size = 8 * this->repeated_sfixed64_size();
    total_size += 2 * this->repeated_sfixed64_size() + data_size;
  }

  // repeated float repeated_float = 41;
  {
    int data_size = 0;
    data_size = 4 * this->repeated_float_size();
    total_size += 2 * this->repeated_float_size() + data_size;
  }

  // repeated double repeated_double = 42;
  {
    int data_size = 0;
    data_size = 8 * this->repeated_double_size();
    total_size += 2 * this->repeated_double_size() + data_size;
  }

  // repeated bool repeated_bool = 43;
  {
    int data_size = 0;
    data_size = 1 * this->repeated_bool_size();
    total_size += 2 * this->repeated_bool_size() + data_size;
  }

  // repeated string repeated_string = 44;
  total_size += 2 * this->repeated_string_size();
  for (int i = 0; i < this->repeated_string_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string(i));
  }

  // repeated bytes repeated_bytes = 45;
  total_size += 2 * this->repeated_bytes_size();
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->repeated_bytes(i));
  }

  // repeated group RepeatedGroup = 46 {
  total_size += 4 * this->repeatedgroup_size();
  for (int i = 0; i < this->repeatedgroup_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->repeatedgroup(i));
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  total_size += 2 * this->repeated_nested_message_size();
  for (int i = 0; i < this->repeated_nested_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeated_nested_message(i));
  }

  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  total_size += 2 * this->repeated_foreign_message_size();
  for (int i = 0; i < this->repeated_foreign_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeated_foreign_message(i));
  }

  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  total_size += 2 * this->repeated_import_message_size();
  for (int i = 0; i < this->repeated_import_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeated_import_message(i));
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_nested_enum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_nested_enum(i));
    }
    total_size += 2 * this->repeated_nested_enum_size() + data_size;
  }

  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_foreign_enum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_foreign_enum(i));
    }
    total_size += 2 * this->repeated_foreign_enum_size() + data_size;
  }

  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_import_enum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_import_enum(i));
    }
    total_size += 2 * this->repeated_import_enum_size() + data_size;
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 * this->repeated_string_piece_size();
  for (int i = 0; i < this->repeated_string_piece_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string_piece(i));
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 * this->repeated_cord_size();
  for (int i = 0; i < this->repeated_cord_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_cord(i));
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  total_size += 2 * this->repeated_lazy_message_size();
  for (int i = 0; i < this->repeated_lazy_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeated_lazy_message(i));
  }

  switch (oneof_field_case()) {
    // optional uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oneof_uint32());
      break;
    }
    // optional .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oneof_nested_message());
      break;
    }
    // optional string oneof_string = 113;
    case kOneofString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oneof_string());
      break;
    }
    // optional bytes oneof_bytes = 114;
    case kOneofBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllTypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestAllTypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestAllTypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestAllTypes::MergeFrom(const TestAllTypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeated_int32_.MergeFrom(from.repeated_int32_);
  repeated_int64_.MergeFrom(from.repeated_int64_);
  repeated_uint32_.MergeFrom(from.repeated_uint32_);
  repeated_uint64_.MergeFrom(from.repeated_uint64_);
  repeated_sint32_.MergeFrom(from.repeated_sint32_);
  repeated_sint64_.MergeFrom(from.repeated_sint64_);
  repeated_fixed32_.MergeFrom(from.repeated_fixed32_);
  repeated_fixed64_.MergeFrom(from.repeated_fixed64_);
  repeated_sfixed32_.MergeFrom(from.repeated_sfixed32_);
  repeated_sfixed64_.MergeFrom(from.repeated_sfixed64_);
  repeated_float_.MergeFrom(from.repeated_float_);
  repeated_double_.MergeFrom(from.repeated_double_);
  repeated_bool_.MergeFrom(from.repeated_bool_);
  repeated_string_.MergeFrom(from.repeated_string_);
  repeated_bytes_.MergeFrom(from.repeated_bytes_);
  repeatedgroup_.MergeFrom(from.repeatedgroup_);
  repeated_nested_message_.MergeFrom(from.repeated_nested_message_);
  repeated_foreign_message_.MergeFrom(from.repeated_foreign_message_);
  repeated_import_message_.MergeFrom(from.repeated_import_message_);
  repeated_nested_enum_.MergeFrom(from.repeated_nested_enum_);
  repeated_foreign_enum_.MergeFrom(from.repeated_foreign_enum_);
  repeated_import_enum_.MergeFrom(from.repeated_import_enum_);
  repeated_string_piece_.MergeFrom(from.repeated_string_piece_);
  repeated_cord_.MergeFrom(from.repeated_cord_);
  repeated_lazy_message_.MergeFrom(from.repeated_lazy_message_);
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      set_oneof_uint32(from.oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      mutable_oneof_nested_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.oneof_nested_message());
      break;
    }
    case kOneofString: {
      set_oneof_string(from.oneof_string());
      break;
    }
    case kOneofBytes: {
      set_oneof_bytes(from.oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_int32()) {
      set_optional_int32(from.optional_int32());
    }
    if (from.has_optional_int64()) {
      set_optional_int64(from.optional_int64());
    }
    if (from.has_optional_uint32()) {
      set_optional_uint32(from.optional_uint32());
    }
    if (from.has_optional_uint64()) {
      set_optional_uint64(from.optional_uint64());
    }
    if (from.has_optional_sint32()) {
      set_optional_sint32(from.optional_sint32());
    }
    if (from.has_optional_sint64()) {
      set_optional_sint64(from.optional_sint64());
    }
    if (from.has_optional_fixed32()) {
      set_optional_fixed32(from.optional_fixed32());
    }
    if (from.has_optional_fixed64()) {
      set_optional_fixed64(from.optional_fixed64());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_optional_sfixed32()) {
      set_optional_sfixed32(from.optional_sfixed32());
    }
    if (from.has_optional_sfixed64()) {
      set_optional_sfixed64(from.optional_sfixed64());
    }
    if (from.has_optional_float()) {
      set_optional_float(from.optional_float());
    }
    if (from.has_optional_double()) {
      set_optional_double(from.optional_double());
    }
    if (from.has_optional_bool()) {
      set_optional_bool(from.optional_bool());
    }
    if (from.has_optional_string()) {
      set_optional_string(from.optional_string());
    }
    if (from.has_optional_bytes()) {
      set_optional_bytes(from.optional_bytes());
    }
    if (from.has_optionalgroup()) {
      mutable_optionalgroup()->::protobuf_unittest::TestAllTypes_OptionalGroup::MergeFrom(from.optionalgroup());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_optional_nested_message()) {
      mutable_optional_nested_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.optional_nested_message());
    }
    if (from.has_optional_foreign_message()) {
      mutable_optional_foreign_message()->::protobuf_unittest::ForeignMessage::MergeFrom(from.optional_foreign_message());
    }
    if (from.has_optional_import_message()) {
      mutable_optional_import_message()->::protobuf_unittest_import::ImportMessage::MergeFrom(from.optional_import_message());
    }
    if (from.has_optional_nested_enum()) {
      set_optional_nested_enum(from.optional_nested_enum());
    }
    if (from.has_optional_foreign_enum()) {
      set_optional_foreign_enum(from.optional_foreign_enum());
    }
    if (from.has_optional_import_enum()) {
      set_optional_import_enum(from.optional_import_enum());
    }
    if (from.has_optional_string_piece()) {
      set_optional_string_piece(from.optional_string_piece());
    }
    if (from.has_optional_cord()) {
      set_optional_cord(from.optional_cord());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_optional_public_import_message()) {
      mutable_optional_public_import_message()->::protobuf_unittest_import::PublicImportMessage::MergeFrom(from.optional_public_import_message());
    }
    if (from.has_optional_lazy_message()) {
      mutable_optional_lazy_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.optional_lazy_message());
    }
  }
  if (from._has_bits_[51 / 32] & (0xffu << (51 % 32))) {
    if (from.has_default_int32()) {
      set_default_int32(from.default_int32());
    }
    if (from.has_default_int64()) {
      set_default_int64(from.default_int64());
    }
    if (from.has_default_uint32()) {
      set_default_uint32(from.default_uint32());
    }
    if (from.has_default_uint64()) {
      set_default_uint64(from.default_uint64());
    }
    if (from.has_default_sint32()) {
      set_default_sint32(from.default_sint32());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_default_sint64()) {
      set_default_sint64(from.default_sint64());
    }
    if (from.has_default_fixed32()) {
      set_default_fixed32(from.default_fixed32());
    }
    if (from.has_default_fixed64()) {
      set_default_fixed64(from.default_fixed64());
    }
    if (from.has_default_sfixed32()) {
      set_default_sfixed32(from.default_sfixed32());
    }
    if (from.has_default_sfixed64()) {
      set_default_sfixed64(from.default_sfixed64());
    }
    if (from.has_default_float()) {
      set_default_float(from.default_float());
    }
    if (from.has_default_double()) {
      set_default_double(from.default_double());
    }
    if (from.has_default_bool()) {
      set_default_bool(from.default_bool());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from.has_default_string()) {
      set_default_string(from.default_string());
    }
    if (from.has_default_bytes()) {
      set_default_bytes(from.default_bytes());
    }
    if (from.has_default_nested_enum()) {
      set_default_nested_enum(from.default_nested_enum());
    }
    if (from.has_default_foreign_enum()) {
      set_default_foreign_enum(from.default_foreign_enum());
    }
    if (from.has_default_import_enum()) {
      set_default_import_enum(from.default_import_enum());
    }
    if (from.has_default_string_piece()) {
      set_default_string_piece(from.default_string_piece());
    }
    if (from.has_default_cord()) {
      set_default_cord(from.default_cord());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestAllTypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypes::CopyFrom(const TestAllTypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypes::IsInitialized() const {

  return true;
}

void TestAllTypes::Swap(TestAllTypes* other) {
  if (other != this) {
    std::swap(optional_int32_, other->optional_int32_);
    std::swap(optional_int64_, other->optional_int64_);
    std::swap(optional_uint32_, other->optional_uint32_);
    std::swap(optional_uint64_, other->optional_uint64_);
    std::swap(optional_sint32_, other->optional_sint32_);
    std::swap(optional_sint64_, other->optional_sint64_);
    std::swap(optional_fixed32_, other->optional_fixed32_);
    std::swap(optional_fixed64_, other->optional_fixed64_);
    std::swap(optional_sfixed32_, other->optional_sfixed32_);
    std::swap(optional_sfixed64_, other->optional_sfixed64_);
    std::swap(optional_float_, other->optional_float_);
    std::swap(optional_double_, other->optional_double_);
    std::swap(optional_bool_, other->optional_bool_);
    std::swap(optional_string_, other->optional_string_);
    std::swap(optional_bytes_, other->optional_bytes_);
    std::swap(optionalgroup_, other->optionalgroup_);
    std::swap(optional_nested_message_, other->optional_nested_message_);
    std::swap(optional_foreign_message_, other->optional_foreign_message_);
    std::swap(optional_import_message_, other->optional_import_message_);
    std::swap(optional_nested_enum_, other->optional_nested_enum_);
    std::swap(optional_foreign_enum_, other->optional_foreign_enum_);
    std::swap(optional_import_enum_, other->optional_import_enum_);
    std::swap(optional_string_piece_, other->optional_string_piece_);
    std::swap(optional_cord_, other->optional_cord_);
    std::swap(optional_public_import_message_, other->optional_public_import_message_);
    std::swap(optional_lazy_message_, other->optional_lazy_message_);
    repeated_int32_.Swap(&other->repeated_int32_);
    repeated_int64_.Swap(&other->repeated_int64_);
    repeated_uint32_.Swap(&other->repeated_uint32_);
    repeated_uint64_.Swap(&other->repeated_uint64_);
    repeated_sint32_.Swap(&other->repeated_sint32_);
    repeated_sint64_.Swap(&other->repeated_sint64_);
    repeated_fixed32_.Swap(&other->repeated_fixed32_);
    repeated_fixed64_.Swap(&other->repeated_fixed64_);
    repeated_sfixed32_.Swap(&other->repeated_sfixed32_);
    repeated_sfixed64_.Swap(&other->repeated_sfixed64_);
    repeated_float_.Swap(&other->repeated_float_);
    repeated_double_.Swap(&other->repeated_double_);
    repeated_bool_.Swap(&other->repeated_bool_);
    repeated_string_.Swap(&other->repeated_string_);
    repeated_bytes_.Swap(&other->repeated_bytes_);
    repeatedgroup_.Swap(&other->repeatedgroup_);
    repeated_nested_message_.Swap(&other->repeated_nested_message_);
    repeated_foreign_message_.Swap(&other->repeated_foreign_message_);
    repeated_import_message_.Swap(&other->repeated_import_message_);
    repeated_nested_enum_.Swap(&other->repeated_nested_enum_);
    repeated_foreign_enum_.Swap(&other->repeated_foreign_enum_);
    repeated_import_enum_.Swap(&other->repeated_import_enum_);
    repeated_string_piece_.Swap(&other->repeated_string_piece_);
    repeated_cord_.Swap(&other->repeated_cord_);
    repeated_lazy_message_.Swap(&other->repeated_lazy_message_);
    std::swap(default_int32_, other->default_int32_);
    std::swap(default_int64_, other->default_int64_);
    std::swap(default_uint32_, other->default_uint32_);
    std::swap(default_uint64_, other->default_uint64_);
    std::swap(default_sint32_, other->default_sint32_);
    std::swap(default_sint64_, other->default_sint64_);
    std::swap(default_fixed32_, other->default_fixed32_);
    std::swap(default_fixed64_, other->default_fixed64_);
    std::swap(default_sfixed32_, other->default_sfixed32_);
    std::swap(default_sfixed64_, other->default_sfixed64_);
    std::swap(default_float_, other->default_float_);
    std::swap(default_double_, other->default_double_);
    std::swap(default_bool_, other->default_bool_);
    std::swap(default_string_, other->default_string_);
    std::swap(default_bytes_, other->default_bytes_);
    std::swap(default_nested_enum_, other->default_nested_enum_);
    std::swap(default_foreign_enum_, other->default_foreign_enum_);
    std::swap(default_import_enum_, other->default_import_enum_);
    std::swap(default_string_piece_, other->default_string_piece_);
    std::swap(default_cord_, other->default_cord_);
    std::swap(oneof_field_, other->oneof_field_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestAllTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllTypes_descriptor_;
  metadata.reflection = TestAllTypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NestedTestAllTypes::kChildFieldNumber;
const int NestedTestAllTypes::kPayloadFieldNumber;
#endif  // !_MSC_VER

NestedTestAllTypes::NestedTestAllTypes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.NestedTestAllTypes)
}

void NestedTestAllTypes::InitAsDefaultInstance() {
  child_ = const_cast< ::protobuf_unittest::NestedTestAllTypes*>(&::protobuf_unittest::NestedTestAllTypes::default_instance());
  payload_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
}

NestedTestAllTypes::NestedTestAllTypes(const NestedTestAllTypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.NestedTestAllTypes)
}

void NestedTestAllTypes::SharedCtor() {
  _cached_size_ = 0;
  child_ = NULL;
  payload_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NestedTestAllTypes::~NestedTestAllTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.NestedTestAllTypes)
  SharedDtor();
}

void NestedTestAllTypes::SharedDtor() {
  if (this != default_instance_) {
    delete child_;
    delete payload_;
  }
}

void NestedTestAllTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NestedTestAllTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NestedTestAllTypes_descriptor_;
}

const NestedTestAllTypes& NestedTestAllTypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

NestedTestAllTypes* NestedTestAllTypes::default_instance_ = NULL;

NestedTestAllTypes* NestedTestAllTypes::New() const {
  return new NestedTestAllTypes;
}

void NestedTestAllTypes::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_child()) {
      if (child_ != NULL) child_->::protobuf_unittest::NestedTestAllTypes::Clear();
    }
    if (has_payload()) {
      if (payload_ != NULL) payload_->::protobuf_unittest::TestAllTypes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NestedTestAllTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.NestedTestAllTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.NestedTestAllTypes child = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_payload;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes payload = 2;
      case 2: {
        if (tag == 18) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.NestedTestAllTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.NestedTestAllTypes)
  return false;
#undef DO_
}

void NestedTestAllTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.NestedTestAllTypes)
  // optional .protobuf_unittest.NestedTestAllTypes child = 1;
  if (has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->child(), output);
  }

  // optional .protobuf_unittest.TestAllTypes payload = 2;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->payload(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.NestedTestAllTypes)
}

::google::protobuf::uint8* NestedTestAllTypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.NestedTestAllTypes)
  // optional .protobuf_unittest.NestedTestAllTypes child = 1;
  if (has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->child(), target);
  }

  // optional .protobuf_unittest.TestAllTypes payload = 2;
  if (has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->payload(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.NestedTestAllTypes)
  return target;
}

int NestedTestAllTypes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.NestedTestAllTypes child = 1;
    if (has_child()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->child());
    }

    // optional .protobuf_unittest.TestAllTypes payload = 2;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->payload());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NestedTestAllTypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NestedTestAllTypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NestedTestAllTypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NestedTestAllTypes::MergeFrom(const NestedTestAllTypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_child()) {
      mutable_child()->::protobuf_unittest::NestedTestAllTypes::MergeFrom(from.child());
    }
    if (from.has_payload()) {
      mutable_payload()->::protobuf_unittest::TestAllTypes::MergeFrom(from.payload());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NestedTestAllTypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NestedTestAllTypes::CopyFrom(const NestedTestAllTypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NestedTestAllTypes::IsInitialized() const {

  return true;
}

void NestedTestAllTypes::Swap(NestedTestAllTypes* other) {
  if (other != this) {
    std::swap(child_, other->child_);
    std::swap(payload_, other->payload_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NestedTestAllTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NestedTestAllTypes_descriptor_;
  metadata.reflection = NestedTestAllTypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestDeprecatedFields::kDeprecatedInt32FieldNumber;
#endif  // !_MSC_VER

TestDeprecatedFields::TestDeprecatedFields()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDeprecatedFields)
}

void TestDeprecatedFields::InitAsDefaultInstance() {
}

TestDeprecatedFields::TestDeprecatedFields(const TestDeprecatedFields& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDeprecatedFields)
}

void TestDeprecatedFields::SharedCtor() {
  _cached_size_ = 0;
  deprecated_int32_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestDeprecatedFields::~TestDeprecatedFields() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDeprecatedFields)
  SharedDtor();
}

void TestDeprecatedFields::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestDeprecatedFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDeprecatedFields::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDeprecatedFields_descriptor_;
}

const TestDeprecatedFields& TestDeprecatedFields::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestDeprecatedFields* TestDeprecatedFields::default_instance_ = NULL;

TestDeprecatedFields* TestDeprecatedFields::New() const {
  return new TestDeprecatedFields;
}

void TestDeprecatedFields::Clear() {
  deprecated_int32_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestDeprecatedFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDeprecatedFields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 deprecated_int32 = 1 [deprecated = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deprecated_int32_)));
          set_has_deprecated_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDeprecatedFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDeprecatedFields)
  return false;
#undef DO_
}

void TestDeprecatedFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDeprecatedFields)
  // optional int32 deprecated_int32 = 1 [deprecated = true];
  if (has_deprecated_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deprecated_int32(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDeprecatedFields)
}

::google::protobuf::uint8* TestDeprecatedFields::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDeprecatedFields)
  // optional int32 deprecated_int32 = 1 [deprecated = true];
  if (has_deprecated_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deprecated_int32(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDeprecatedFields)
  return target;
}

int TestDeprecatedFields::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 deprecated_int32 = 1 [deprecated = true];
    if (has_deprecated_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deprecated_int32());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDeprecatedFields::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestDeprecatedFields* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestDeprecatedFields*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestDeprecatedFields::MergeFrom(const TestDeprecatedFields& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_deprecated_int32()) {
      set_deprecated_int32(from.deprecated_int32());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestDeprecatedFields::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDeprecatedFields::CopyFrom(const TestDeprecatedFields& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestDeprecatedFields::IsInitialized() const {

  return true;
}

void TestDeprecatedFields::Swap(TestDeprecatedFields* other) {
  if (other != this) {
    std::swap(deprecated_int32_, other->deprecated_int32_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestDeprecatedFields::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDeprecatedFields_descriptor_;
  metadata.reflection = TestDeprecatedFields_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ForeignMessage::kCFieldNumber;
#endif  // !_MSC_VER

ForeignMessage::ForeignMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.ForeignMessage)
}

void ForeignMessage::InitAsDefaultInstance() {
}

ForeignMessage::ForeignMessage(const ForeignMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.ForeignMessage)
}

void ForeignMessage::SharedCtor() {
  _cached_size_ = 0;
  c_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ForeignMessage::~ForeignMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.ForeignMessage)
  SharedDtor();
}

void ForeignMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ForeignMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForeignMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForeignMessage_descriptor_;
}

const ForeignMessage& ForeignMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

ForeignMessage* ForeignMessage::default_instance_ = NULL;

ForeignMessage* ForeignMessage::New() const {
  return new ForeignMessage;
}

void ForeignMessage::Clear() {
  c_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ForeignMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.ForeignMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 c = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
          set_has_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.ForeignMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.ForeignMessage)
  return false;
#undef DO_
}

void ForeignMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.ForeignMessage)
  // optional int32 c = 1;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.ForeignMessage)
}

::google::protobuf::uint8* ForeignMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.ForeignMessage)
  // optional int32 c = 1;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.ForeignMessage)
  return target;
}

int ForeignMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 c = 1;
    if (has_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->c());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForeignMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ForeignMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ForeignMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ForeignMessage::MergeFrom(const ForeignMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_c()) {
      set_c(from.c());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ForeignMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForeignMessage::CopyFrom(const ForeignMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForeignMessage::IsInitialized() const {

  return true;
}

void ForeignMessage::Swap(ForeignMessage* other) {
  if (other != this) {
    std::swap(c_, other->c_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ForeignMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ForeignMessage_descriptor_;
  metadata.reflection = ForeignMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TestAllExtensions::TestAllExtensions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestAllExtensions)
}

void TestAllExtensions::InitAsDefaultInstance() {
}

TestAllExtensions::TestAllExtensions(const TestAllExtensions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllExtensions)
}

void TestAllExtensions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestAllExtensions::~TestAllExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllExtensions)
  SharedDtor();
}

void TestAllExtensions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestAllExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestAllExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestAllExtensions_descriptor_;
}

const TestAllExtensions& TestAllExtensions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestAllExtensions* TestAllExtensions::default_instance_ = NULL;

TestAllExtensions* TestAllExtensions::New() const {
  return new TestAllExtensions;
}

void TestAllExtensions::Clear() {
  _extensions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestAllExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestAllExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, default_instance_,
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestAllExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestAllExtensions)
  return false;
#undef DO_
}

void TestAllExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestAllExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestAllExtensions)
}

::google::protobuf::uint8* TestAllExtensions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllExtensions)
  return target;
}

int TestAllExtensions::ByteSize() const {
  int total_size = 0;

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestAllExtensions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestAllExtensions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestAllExtensions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestAllExtensions::MergeFrom(const TestAllExtensions& from) {
  GOOGLE_CHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestAllExtensions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllExtensions::CopyFrom(const TestAllExtensions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestAllExtensions::Swap(TestAllExtensions* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestAllExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestAllExtensions_descriptor_;
  metadata.reflection = TestAllExtensions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OptionalGroup_extension::kAFieldNumber;
#endif  // !_MSC_VER

OptionalGroup_extension::OptionalGroup_extension()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OptionalGroup_extension)
}

void OptionalGroup_extension::InitAsDefaultInstance() {
}

OptionalGroup_extension::OptionalGroup_extension(const OptionalGroup_extension& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OptionalGroup_extension)
}

void OptionalGroup_extension::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OptionalGroup_extension::~OptionalGroup_extension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OptionalGroup_extension)
  SharedDtor();
}

void OptionalGroup_extension::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OptionalGroup_extension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptionalGroup_extension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OptionalGroup_extension_descriptor_;
}

const OptionalGroup_extension& OptionalGroup_extension::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

OptionalGroup_extension* OptionalGroup_extension::default_instance_ = NULL;

OptionalGroup_extension* OptionalGroup_extension::New() const {
  return new OptionalGroup_extension;
}

void OptionalGroup_extension::Clear() {
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OptionalGroup_extension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OptionalGroup_extension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 17;
      case 17: {
        if (tag == 136) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OptionalGroup_extension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OptionalGroup_extension)
  return false;
#undef DO_
}

void OptionalGroup_extension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OptionalGroup_extension)
  // optional int32 a = 17;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OptionalGroup_extension)
}

::google::protobuf::uint8* OptionalGroup_extension::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OptionalGroup_extension)
  // optional int32 a = 17;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OptionalGroup_extension)
  return target;
}

int OptionalGroup_extension::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 17;
    if (has_a()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionalGroup_extension::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OptionalGroup_extension* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OptionalGroup_extension*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OptionalGroup_extension::MergeFrom(const OptionalGroup_extension& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OptionalGroup_extension::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionalGroup_extension::CopyFrom(const OptionalGroup_extension& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionalGroup_extension::IsInitialized() const {

  return true;
}

void OptionalGroup_extension::Swap(OptionalGroup_extension* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OptionalGroup_extension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OptionalGroup_extension_descriptor_;
  metadata.reflection = OptionalGroup_extension_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RepeatedGroup_extension::kAFieldNumber;
#endif  // !_MSC_VER

RepeatedGroup_extension::RepeatedGroup_extension()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.RepeatedGroup_extension)
}

void RepeatedGroup_extension::InitAsDefaultInstance() {
}

RepeatedGroup_extension::RepeatedGroup_extension(const RepeatedGroup_extension& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RepeatedGroup_extension)
}

void RepeatedGroup_extension::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepeatedGroup_extension::~RepeatedGroup_extension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RepeatedGroup_extension)
  SharedDtor();
}

void RepeatedGroup_extension::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RepeatedGroup_extension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepeatedGroup_extension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepeatedGroup_extension_descriptor_;
}

const RepeatedGroup_extension& RepeatedGroup_extension::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

RepeatedGroup_extension* RepeatedGroup_extension::default_instance_ = NULL;

RepeatedGroup_extension* RepeatedGroup_extension::New() const {
  return new RepeatedGroup_extension;
}

void RepeatedGroup_extension::Clear() {
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RepeatedGroup_extension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.RepeatedGroup_extension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 47;
      case 47: {
        if (tag == 376) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.RepeatedGroup_extension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.RepeatedGroup_extension)
  return false;
#undef DO_
}

void RepeatedGroup_extension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.RepeatedGroup_extension)
  // optional int32 a = 47;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.RepeatedGroup_extension)
}

::google::protobuf::uint8* RepeatedGroup_extension::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RepeatedGroup_extension)
  // optional int32 a = 47;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RepeatedGroup_extension)
  return target;
}

int RepeatedGroup_extension::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 47;
    if (has_a()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepeatedGroup_extension::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RepeatedGroup_extension* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RepeatedGroup_extension*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RepeatedGroup_extension::MergeFrom(const RepeatedGroup_extension& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RepeatedGroup_extension::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedGroup_extension::CopyFrom(const RepeatedGroup_extension& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedGroup_extension::IsInitialized() const {

  return true;
}

void RepeatedGroup_extension::Swap(RepeatedGroup_extension* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RepeatedGroup_extension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepeatedGroup_extension_descriptor_;
  metadata.reflection = RepeatedGroup_extension_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

const ::std::string TestNestedExtension_test_default("test");
#ifndef _MSC_VER
const int TestNestedExtension::kTestFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  TestNestedExtension::test(kTestFieldNumber, TestNestedExtension_test_default);
const ::std::string TestNestedExtension_nested_string_extension_default("");
#ifndef _MSC_VER
const int TestNestedExtension::kNestedStringExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  TestNestedExtension::nested_string_extension(kNestedStringExtensionFieldNumber, TestNestedExtension_nested_string_extension_default);
TestNestedExtension::TestNestedExtension()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestNestedExtension)
}

void TestNestedExtension::InitAsDefaultInstance() {
}

TestNestedExtension::TestNestedExtension(const TestNestedExtension& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedExtension)
}

void TestNestedExtension::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestNestedExtension::~TestNestedExtension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedExtension)
  SharedDtor();
}

void TestNestedExtension::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestNestedExtension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedExtension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestNestedExtension_descriptor_;
}

const TestNestedExtension& TestNestedExtension::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestNestedExtension* TestNestedExtension::default_instance_ = NULL;

TestNestedExtension* TestNestedExtension::New() const {
  return new TestNestedExtension;
}

void TestNestedExtension::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestNestedExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestNestedExtension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestNestedExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestNestedExtension)
  return false;
#undef DO_
}

void TestNestedExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestNestedExtension)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestNestedExtension)
}

::google::protobuf::uint8* TestNestedExtension::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedExtension)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedExtension)
  return target;
}

int TestNestedExtension::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedExtension::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestNestedExtension* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestNestedExtension*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestNestedExtension::MergeFrom(const TestNestedExtension& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestNestedExtension::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedExtension::CopyFrom(const TestNestedExtension& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestNestedExtension::IsInitialized() const {

  return true;
}

void TestNestedExtension::Swap(TestNestedExtension* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestNestedExtension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestNestedExtension_descriptor_;
  metadata.reflection = TestNestedExtension_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestRequired::kAFieldNumber;
const int TestRequired::kDummy2FieldNumber;
const int TestRequired::kBFieldNumber;
const int TestRequired::kDummy4FieldNumber;
const int TestRequired::kDummy5FieldNumber;
const int TestRequired::kDummy6FieldNumber;
const int TestRequired::kDummy7FieldNumber;
const int TestRequired::kDummy8FieldNumber;
const int TestRequired::kDummy9FieldNumber;
const int TestRequired::kDummy10FieldNumber;
const int TestRequired::kDummy11FieldNumber;
const int TestRequired::kDummy12FieldNumber;
const int TestRequired::kDummy13FieldNumber;
const int TestRequired::kDummy14FieldNumber;
const int TestRequired::kDummy15FieldNumber;
const int TestRequired::kDummy16FieldNumber;
const int TestRequired::kDummy17FieldNumber;
const int TestRequired::kDummy18FieldNumber;
const int TestRequired::kDummy19FieldNumber;
const int TestRequired::kDummy20FieldNumber;
const int TestRequired::kDummy21FieldNumber;
const int TestRequired::kDummy22FieldNumber;
const int TestRequired::kDummy23FieldNumber;
const int TestRequired::kDummy24FieldNumber;
const int TestRequired::kDummy25FieldNumber;
const int TestRequired::kDummy26FieldNumber;
const int TestRequired::kDummy27FieldNumber;
const int TestRequired::kDummy28FieldNumber;
const int TestRequired::kDummy29FieldNumber;
const int TestRequired::kDummy30FieldNumber;
const int TestRequired::kDummy31FieldNumber;
const int TestRequired::kDummy32FieldNumber;
const int TestRequired::kCFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int TestRequired::kSingleFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestRequired >, 11, false >
  TestRequired::single(kSingleFieldNumber, ::protobuf_unittest::TestRequired::default_instance());
#ifndef _MSC_VER
const int TestRequired::kMultiFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestRequired >, 11, false >
  TestRequired::multi(kMultiFieldNumber, ::protobuf_unittest::TestRequired::default_instance());
TestRequired::TestRequired()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequired)
}

void TestRequired::InitAsDefaultInstance() {
}

TestRequired::TestRequired(const TestRequired& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequired)
}

void TestRequired::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  dummy2_ = 0;
  b_ = 0;
  dummy4_ = 0;
  dummy5_ = 0;
  dummy6_ = 0;
  dummy7_ = 0;
  dummy8_ = 0;
  dummy9_ = 0;
  dummy10_ = 0;
  dummy11_ = 0;
  dummy12_ = 0;
  dummy13_ = 0;
  dummy14_ = 0;
  dummy15_ = 0;
  dummy16_ = 0;
  dummy17_ = 0;
  dummy18_ = 0;
  dummy19_ = 0;
  dummy20_ = 0;
  dummy21_ = 0;
  dummy22_ = 0;
  dummy23_ = 0;
  dummy24_ = 0;
  dummy25_ = 0;
  dummy26_ = 0;
  dummy27_ = 0;
  dummy28_ = 0;
  dummy29_ = 0;
  dummy30_ = 0;
  dummy31_ = 0;
  dummy32_ = 0;
  c_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestRequired::~TestRequired() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequired)
  SharedDtor();
}

void TestRequired::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestRequired::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequired::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequired_descriptor_;
}

const TestRequired& TestRequired::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestRequired* TestRequired::default_instance_ = NULL;

TestRequired* TestRequired::New() const {
  return new TestRequired;
}

void TestRequired::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TestRequired*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(a_, dummy8_);
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(dummy9_, dummy16_);
  }
  if (_has_bits_[16 / 32] & 16711680) {
    ZR_(dummy17_, dummy24_);
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    ZR_(dummy25_, dummy32_);
  }
  c_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestRequired::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequired)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dummy2;
        break;
      }

      // optional int32 dummy2 = 2;
      case 2: {
        if (tag == 16) {
         parse_dummy2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy2_)));
          set_has_dummy2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_b;
        break;
      }

      // required int32 b = 3;
      case 3: {
        if (tag == 24) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
          set_has_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dummy4;
        break;
      }

      // optional int32 dummy4 = 4;
      case 4: {
        if (tag == 32) {
         parse_dummy4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy4_)));
          set_has_dummy4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dummy5;
        break;
      }

      // optional int32 dummy5 = 5;
      case 5: {
        if (tag == 40) {
         parse_dummy5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy5_)));
          set_has_dummy5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_dummy6;
        break;
      }

      // optional int32 dummy6 = 6;
      case 6: {
        if (tag == 48) {
         parse_dummy6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy6_)));
          set_has_dummy6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dummy7;
        break;
      }

      // optional int32 dummy7 = 7;
      case 7: {
        if (tag == 56) {
         parse_dummy7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy7_)));
          set_has_dummy7();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dummy8;
        break;
      }

      // optional int32 dummy8 = 8;
      case 8: {
        if (tag == 64) {
         parse_dummy8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy8_)));
          set_has_dummy8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_dummy9;
        break;
      }

      // optional int32 dummy9 = 9;
      case 9: {
        if (tag == 72) {
         parse_dummy9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy9_)));
          set_has_dummy9();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_dummy10;
        break;
      }

      // optional int32 dummy10 = 10;
      case 10: {
        if (tag == 80) {
         parse_dummy10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy10_)));
          set_has_dummy10();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_dummy11;
        break;
      }

      // optional int32 dummy11 = 11;
      case 11: {
        if (tag == 88) {
         parse_dummy11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy11_)));
          set_has_dummy11();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_dummy12;
        break;
      }

      // optional int32 dummy12 = 12;
      case 12: {
        if (tag == 96) {
         parse_dummy12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy12_)));
          set_has_dummy12();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_dummy13;
        break;
      }

      // optional int32 dummy13 = 13;
      case 13: {
        if (tag == 104) {
         parse_dummy13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy13_)));
          set_has_dummy13();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_dummy14;
        break;
      }

      // optional int32 dummy14 = 14;
      case 14: {
        if (tag == 112) {
         parse_dummy14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy14_)));
          set_has_dummy14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_dummy15;
        break;
      }

      // optional int32 dummy15 = 15;
      case 15: {
        if (tag == 120) {
         parse_dummy15:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy15_)));
          set_has_dummy15();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_dummy16;
        break;
      }

      // optional int32 dummy16 = 16;
      case 16: {
        if (tag == 128) {
         parse_dummy16:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy16_)));
          set_has_dummy16();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_dummy17;
        break;
      }

      // optional int32 dummy17 = 17;
      case 17: {
        if (tag == 136) {
         parse_dummy17:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy17_)));
          set_has_dummy17();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_dummy18;
        break;
      }

      // optional int32 dummy18 = 18;
      case 18: {
        if (tag == 144) {
         parse_dummy18:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy18_)));
          set_has_dummy18();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_dummy19;
        break;
      }

      // optional int32 dummy19 = 19;
      case 19: {
        if (tag == 152) {
         parse_dummy19:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy19_)));
          set_has_dummy19();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_dummy20;
        break;
      }

      // optional int32 dummy20 = 20;
      case 20: {
        if (tag == 160) {
         parse_dummy20:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy20_)));
          set_has_dummy20();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_dummy21;
        break;
      }

      // optional int32 dummy21 = 21;
      case 21: {
        if (tag == 168) {
         parse_dummy21:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy21_)));
          set_has_dummy21();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_dummy22;
        break;
      }

      // optional int32 dummy22 = 22;
      case 22: {
        if (tag == 176) {
         parse_dummy22:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy22_)));
          set_has_dummy22();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_dummy23;
        break;
      }

      // optional int32 dummy23 = 23;
      case 23: {
        if (tag == 184) {
         parse_dummy23:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy23_)));
          set_has_dummy23();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_dummy24;
        break;
      }

      // optional int32 dummy24 = 24;
      case 24: {
        if (tag == 192) {
         parse_dummy24:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy24_)));
          set_has_dummy24();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_dummy25;
        break;
      }

      // optional int32 dummy25 = 25;
      case 25: {
        if (tag == 200) {
         parse_dummy25:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy25_)));
          set_has_dummy25();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_dummy26;
        break;
      }

      // optional int32 dummy26 = 26;
      case 26: {
        if (tag == 208) {
         parse_dummy26:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy26_)));
          set_has_dummy26();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_dummy27;
        break;
      }

      // optional int32 dummy27 = 27;
      case 27: {
        if (tag == 216) {
         parse_dummy27:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy27_)));
          set_has_dummy27();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_dummy28;
        break;
      }

      // optional int32 dummy28 = 28;
      case 28: {
        if (tag == 224) {
         parse_dummy28:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy28_)));
          set_has_dummy28();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_dummy29;
        break;
      }

      // optional int32 dummy29 = 29;
      case 29: {
        if (tag == 232) {
         parse_dummy29:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy29_)));
          set_has_dummy29();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_dummy30;
        break;
      }

      // optional int32 dummy30 = 30;
      case 30: {
        if (tag == 240) {
         parse_dummy30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy30_)));
          set_has_dummy30();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_dummy31;
        break;
      }

      // optional int32 dummy31 = 31;
      case 31: {
        if (tag == 248) {
         parse_dummy31:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy31_)));
          set_has_dummy31();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_dummy32;
        break;
      }

      // optional int32 dummy32 = 32;
      case 32: {
        if (tag == 256) {
         parse_dummy32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy32_)));
          set_has_dummy32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_c;
        break;
      }

      // required int32 c = 33;
      case 33: {
        if (tag == 264) {
         parse_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
          set_has_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequired)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequired)
  return false;
#undef DO_
}

void TestRequired::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequired)
  // required int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 dummy2 = 2;
  if (has_dummy2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dummy2(), output);
  }

  // required int32 b = 3;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->b(), output);
  }

  // optional int32 dummy4 = 4;
  if (has_dummy4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dummy4(), output);
  }

  // optional int32 dummy5 = 5;
  if (has_dummy5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dummy5(), output);
  }

  // optional int32 dummy6 = 6;
  if (has_dummy6()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dummy6(), output);
  }

  // optional int32 dummy7 = 7;
  if (has_dummy7()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dummy7(), output);
  }

  // optional int32 dummy8 = 8;
  if (has_dummy8()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->dummy8(), output);
  }

  // optional int32 dummy9 = 9;
  if (has_dummy9()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dummy9(), output);
  }

  // optional int32 dummy10 = 10;
  if (has_dummy10()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->dummy10(), output);
  }

  // optional int32 dummy11 = 11;
  if (has_dummy11()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->dummy11(), output);
  }

  // optional int32 dummy12 = 12;
  if (has_dummy12()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->dummy12(), output);
  }

  // optional int32 dummy13 = 13;
  if (has_dummy13()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->dummy13(), output);
  }

  // optional int32 dummy14 = 14;
  if (has_dummy14()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->dummy14(), output);
  }

  // optional int32 dummy15 = 15;
  if (has_dummy15()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->dummy15(), output);
  }

  // optional int32 dummy16 = 16;
  if (has_dummy16()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->dummy16(), output);
  }

  // optional int32 dummy17 = 17;
  if (has_dummy17()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->dummy17(), output);
  }

  // optional int32 dummy18 = 18;
  if (has_dummy18()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->dummy18(), output);
  }

  // optional int32 dummy19 = 19;
  if (has_dummy19()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->dummy19(), output);
  }

  // optional int32 dummy20 = 20;
  if (has_dummy20()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->dummy20(), output);
  }

  // optional int32 dummy21 = 21;
  if (has_dummy21()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->dummy21(), output);
  }

  // optional int32 dummy22 = 22;
  if (has_dummy22()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->dummy22(), output);
  }

  // optional int32 dummy23 = 23;
  if (has_dummy23()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->dummy23(), output);
  }

  // optional int32 dummy24 = 24;
  if (has_dummy24()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->dummy24(), output);
  }

  // optional int32 dummy25 = 25;
  if (has_dummy25()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->dummy25(), output);
  }

  // optional int32 dummy26 = 26;
  if (has_dummy26()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->dummy26(), output);
  }

  // optional int32 dummy27 = 27;
  if (has_dummy27()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->dummy27(), output);
  }

  // optional int32 dummy28 = 28;
  if (has_dummy28()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->dummy28(), output);
  }

  // optional int32 dummy29 = 29;
  if (has_dummy29()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->dummy29(), output);
  }

  // optional int32 dummy30 = 30;
  if (has_dummy30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->dummy30(), output);
  }

  // optional int32 dummy31 = 31;
  if (has_dummy31()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->dummy31(), output);
  }

  // optional int32 dummy32 = 32;
  if (has_dummy32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->dummy32(), output);
  }

  // required int32 c = 33;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->c(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequired)
}

::google::protobuf::uint8* TestRequired::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequired)
  // required int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 dummy2 = 2;
  if (has_dummy2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dummy2(), target);
  }

  // required int32 b = 3;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->b(), target);
  }

  // optional int32 dummy4 = 4;
  if (has_dummy4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dummy4(), target);
  }

  // optional int32 dummy5 = 5;
  if (has_dummy5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dummy5(), target);
  }

  // optional int32 dummy6 = 6;
  if (has_dummy6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dummy6(), target);
  }

  // optional int32 dummy7 = 7;
  if (has_dummy7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dummy7(), target);
  }

  // optional int32 dummy8 = 8;
  if (has_dummy8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->dummy8(), target);
  }

  // optional int32 dummy9 = 9;
  if (has_dummy9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dummy9(), target);
  }

  // optional int32 dummy10 = 10;
  if (has_dummy10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->dummy10(), target);
  }

  // optional int32 dummy11 = 11;
  if (has_dummy11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->dummy11(), target);
  }

  // optional int32 dummy12 = 12;
  if (has_dummy12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->dummy12(), target);
  }

  // optional int32 dummy13 = 13;
  if (has_dummy13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->dummy13(), target);
  }

  // optional int32 dummy14 = 14;
  if (has_dummy14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->dummy14(), target);
  }

  // optional int32 dummy15 = 15;
  if (has_dummy15()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->dummy15(), target);
  }

  // optional int32 dummy16 = 16;
  if (has_dummy16()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->dummy16(), target);
  }

  // optional int32 dummy17 = 17;
  if (has_dummy17()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->dummy17(), target);
  }

  // optional int32 dummy18 = 18;
  if (has_dummy18()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->dummy18(), target);
  }

  // optional int32 dummy19 = 19;
  if (has_dummy19()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->dummy19(), target);
  }

  // optional int32 dummy20 = 20;
  if (has_dummy20()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->dummy20(), target);
  }

  // optional int32 dummy21 = 21;
  if (has_dummy21()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->dummy21(), target);
  }

  // optional int32 dummy22 = 22;
  if (has_dummy22()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->dummy22(), target);
  }

  // optional int32 dummy23 = 23;
  if (has_dummy23()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->dummy23(), target);
  }

  // optional int32 dummy24 = 24;
  if (has_dummy24()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->dummy24(), target);
  }

  // optional int32 dummy25 = 25;
  if (has_dummy25()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->dummy25(), target);
  }

  // optional int32 dummy26 = 26;
  if (has_dummy26()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->dummy26(), target);
  }

  // optional int32 dummy27 = 27;
  if (has_dummy27()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->dummy27(), target);
  }

  // optional int32 dummy28 = 28;
  if (has_dummy28()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->dummy28(), target);
  }

  // optional int32 dummy29 = 29;
  if (has_dummy29()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->dummy29(), target);
  }

  // optional int32 dummy30 = 30;
  if (has_dummy30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->dummy30(), target);
  }

  // optional int32 dummy31 = 31;
  if (has_dummy31()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->dummy31(), target);
  }

  // optional int32 dummy32 = 32;
  if (has_dummy32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->dummy32(), target);
  }

  // required int32 c = 33;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->c(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequired)
  return target;
}

int TestRequired::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional int32 dummy2 = 2;
    if (has_dummy2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy2());
    }

    // required int32 b = 3;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // optional int32 dummy4 = 4;
    if (has_dummy4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy4());
    }

    // optional int32 dummy5 = 5;
    if (has_dummy5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy5());
    }

    // optional int32 dummy6 = 6;
    if (has_dummy6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy6());
    }

    // optional int32 dummy7 = 7;
    if (has_dummy7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy7());
    }

    // optional int32 dummy8 = 8;
    if (has_dummy8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy8());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 dummy9 = 9;
    if (has_dummy9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy9());
    }

    // optional int32 dummy10 = 10;
    if (has_dummy10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy10());
    }

    // optional int32 dummy11 = 11;
    if (has_dummy11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy11());
    }

    // optional int32 dummy12 = 12;
    if (has_dummy12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy12());
    }

    // optional int32 dummy13 = 13;
    if (has_dummy13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy13());
    }

    // optional int32 dummy14 = 14;
    if (has_dummy14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy14());
    }

    // optional int32 dummy15 = 15;
    if (has_dummy15()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy15());
    }

    // optional int32 dummy16 = 16;
    if (has_dummy16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy16());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 dummy17 = 17;
    if (has_dummy17()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy17());
    }

    // optional int32 dummy18 = 18;
    if (has_dummy18()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy18());
    }

    // optional int32 dummy19 = 19;
    if (has_dummy19()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy19());
    }

    // optional int32 dummy20 = 20;
    if (has_dummy20()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy20());
    }

    // optional int32 dummy21 = 21;
    if (has_dummy21()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy21());
    }

    // optional int32 dummy22 = 22;
    if (has_dummy22()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy22());
    }

    // optional int32 dummy23 = 23;
    if (has_dummy23()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy23());
    }

    // optional int32 dummy24 = 24;
    if (has_dummy24()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy24());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 dummy25 = 25;
    if (has_dummy25()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy25());
    }

    // optional int32 dummy26 = 26;
    if (has_dummy26()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy26());
    }

    // optional int32 dummy27 = 27;
    if (has_dummy27()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy27());
    }

    // optional int32 dummy28 = 28;
    if (has_dummy28()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy28());
    }

    // optional int32 dummy29 = 29;
    if (has_dummy29()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy29());
    }

    // optional int32 dummy30 = 30;
    if (has_dummy30()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy30());
    }

    // optional int32 dummy31 = 31;
    if (has_dummy31()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy31());
    }

    // optional int32 dummy32 = 32;
    if (has_dummy32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy32());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required int32 c = 33;
    if (has_c()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->c());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequired::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestRequired* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestRequired*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestRequired::MergeFrom(const TestRequired& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_dummy2()) {
      set_dummy2(from.dummy2());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
    if (from.has_dummy4()) {
      set_dummy4(from.dummy4());
    }
    if (from.has_dummy5()) {
      set_dummy5(from.dummy5());
    }
    if (from.has_dummy6()) {
      set_dummy6(from.dummy6());
    }
    if (from.has_dummy7()) {
      set_dummy7(from.dummy7());
    }
    if (from.has_dummy8()) {
      set_dummy8(from.dummy8());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dummy9()) {
      set_dummy9(from.dummy9());
    }
    if (from.has_dummy10()) {
      set_dummy10(from.dummy10());
    }
    if (from.has_dummy11()) {
      set_dummy11(from.dummy11());
    }
    if (from.has_dummy12()) {
      set_dummy12(from.dummy12());
    }
    if (from.has_dummy13()) {
      set_dummy13(from.dummy13());
    }
    if (from.has_dummy14()) {
      set_dummy14(from.dummy14());
    }
    if (from.has_dummy15()) {
      set_dummy15(from.dummy15());
    }
    if (from.has_dummy16()) {
      set_dummy16(from.dummy16());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_dummy17()) {
      set_dummy17(from.dummy17());
    }
    if (from.has_dummy18()) {
      set_dummy18(from.dummy18());
    }
    if (from.has_dummy19()) {
      set_dummy19(from.dummy19());
    }
    if (from.has_dummy20()) {
      set_dummy20(from.dummy20());
    }
    if (from.has_dummy21()) {
      set_dummy21(from.dummy21());
    }
    if (from.has_dummy22()) {
      set_dummy22(from.dummy22());
    }
    if (from.has_dummy23()) {
      set_dummy23(from.dummy23());
    }
    if (from.has_dummy24()) {
      set_dummy24(from.dummy24());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_dummy25()) {
      set_dummy25(from.dummy25());
    }
    if (from.has_dummy26()) {
      set_dummy26(from.dummy26());
    }
    if (from.has_dummy27()) {
      set_dummy27(from.dummy27());
    }
    if (from.has_dummy28()) {
      set_dummy28(from.dummy28());
    }
    if (from.has_dummy29()) {
      set_dummy29(from.dummy29());
    }
    if (from.has_dummy30()) {
      set_dummy30(from.dummy30());
    }
    if (from.has_dummy31()) {
      set_dummy31(from.dummy31());
    }
    if (from.has_dummy32()) {
      set_dummy32(from.dummy32());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_c()) {
      set_c(from.c());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestRequired::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequired::CopyFrom(const TestRequired& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequired::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if ((_has_bits_[1] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestRequired::Swap(TestRequired* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(dummy2_, other->dummy2_);
    std::swap(b_, other->b_);
    std::swap(dummy4_, other->dummy4_);
    std::swap(dummy5_, other->dummy5_);
    std::swap(dummy6_, other->dummy6_);
    std::swap(dummy7_, other->dummy7_);
    std::swap(dummy8_, other->dummy8_);
    std::swap(dummy9_, other->dummy9_);
    std::swap(dummy10_, other->dummy10_);
    std::swap(dummy11_, other->dummy11_);
    std::swap(dummy12_, other->dummy12_);
    std::swap(dummy13_, other->dummy13_);
    std::swap(dummy14_, other->dummy14_);
    std::swap(dummy15_, other->dummy15_);
    std::swap(dummy16_, other->dummy16_);
    std::swap(dummy17_, other->dummy17_);
    std::swap(dummy18_, other->dummy18_);
    std::swap(dummy19_, other->dummy19_);
    std::swap(dummy20_, other->dummy20_);
    std::swap(dummy21_, other->dummy21_);
    std::swap(dummy22_, other->dummy22_);
    std::swap(dummy23_, other->dummy23_);
    std::swap(dummy24_, other->dummy24_);
    std::swap(dummy25_, other->dummy25_);
    std::swap(dummy26_, other->dummy26_);
    std::swap(dummy27_, other->dummy27_);
    std::swap(dummy28_, other->dummy28_);
    std::swap(dummy29_, other->dummy29_);
    std::swap(dummy30_, other->dummy30_);
    std::swap(dummy31_, other->dummy31_);
    std::swap(dummy32_, other->dummy32_);
    std::swap(c_, other->c_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestRequired::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequired_descriptor_;
  metadata.reflection = TestRequired_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestRequiredForeign::kOptionalMessageFieldNumber;
const int TestRequiredForeign::kRepeatedMessageFieldNumber;
const int TestRequiredForeign::kDummyFieldNumber;
#endif  // !_MSC_VER

TestRequiredForeign::TestRequiredForeign()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequiredForeign)
}

void TestRequiredForeign::InitAsDefaultInstance() {
  optional_message_ = const_cast< ::protobuf_unittest::TestRequired*>(&::protobuf_unittest::TestRequired::default_instance());
}

TestRequiredForeign::TestRequiredForeign(const TestRequiredForeign& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredForeign)
}

void TestRequiredForeign::SharedCtor() {
  _cached_size_ = 0;
  optional_message_ = NULL;
  dummy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestRequiredForeign::~TestRequiredForeign() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredForeign)
  SharedDtor();
}

void TestRequiredForeign::SharedDtor() {
  if (this != default_instance_) {
    delete optional_message_;
  }
}

void TestRequiredForeign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequiredForeign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequiredForeign_descriptor_;
}

const TestRequiredForeign& TestRequiredForeign::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestRequiredForeign* TestRequiredForeign::default_instance_ = NULL;

TestRequiredForeign* TestRequiredForeign::New() const {
  return new TestRequiredForeign;
}

void TestRequiredForeign::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_optional_message()) {
      if (optional_message_ != NULL) optional_message_->::protobuf_unittest::TestRequired::Clear();
    }
    dummy_ = 0;
  }
  repeated_message_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestRequiredForeign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequiredForeign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestRequired optional_message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repeated_message;
        break;
      }

      // repeated .protobuf_unittest.TestRequired repeated_message = 2;
      case 2: {
        if (tag == 18) {
         parse_repeated_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeated_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repeated_message;
        if (input->ExpectTag(24)) goto parse_dummy;
        break;
      }

      // optional int32 dummy = 3;
      case 3: {
        if (tag == 24) {
         parse_dummy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
          set_has_dummy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequiredForeign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequiredForeign)
  return false;
#undef DO_
}

void TestRequiredForeign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequiredForeign)
  // optional .protobuf_unittest.TestRequired optional_message = 1;
  if (has_optional_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->optional_message(), output);
  }

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  for (int i = 0; i < this->repeated_message_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->repeated_message(i), output);
  }

  // optional int32 dummy = 3;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dummy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequiredForeign)
}

::google::protobuf::uint8* TestRequiredForeign::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredForeign)
  // optional .protobuf_unittest.TestRequired optional_message = 1;
  if (has_optional_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->optional_message(), target);
  }

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  for (int i = 0; i < this->repeated_message_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->repeated_message(i), target);
  }

  // optional int32 dummy = 3;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dummy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredForeign)
  return target;
}

int TestRequiredForeign::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestRequired optional_message = 1;
    if (has_optional_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_message());
    }

    // optional int32 dummy = 3;
    if (has_dummy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dummy());
    }

  }
  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  total_size += 1 * this->repeated_message_size();
  for (int i = 0; i < this->repeated_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeated_message(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequiredForeign::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestRequiredForeign* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestRequiredForeign*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestRequiredForeign::MergeFrom(const TestRequiredForeign& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeated_message_.MergeFrom(from.repeated_message_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_message()) {
      mutable_optional_message()->::protobuf_unittest::TestRequired::MergeFrom(from.optional_message());
    }
    if (from.has_dummy()) {
      set_dummy(from.dummy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestRequiredForeign::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequiredForeign::CopyFrom(const TestRequiredForeign& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequiredForeign::IsInitialized() const {

  if (has_optional_message()) {
    if (!this->optional_message().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->repeated_message())) return false;
  return true;
}

void TestRequiredForeign::Swap(TestRequiredForeign* other) {
  if (other != this) {
    std::swap(optional_message_, other->optional_message_);
    repeated_message_.Swap(&other->repeated_message_);
    std::swap(dummy_, other->dummy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestRequiredForeign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequiredForeign_descriptor_;
  metadata.reflection = TestRequiredForeign_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestForeignNested::kForeignNestedFieldNumber;
#endif  // !_MSC_VER

TestForeignNested::TestForeignNested()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestForeignNested)
}

void TestForeignNested::InitAsDefaultInstance() {
  foreign_nested_ = const_cast< ::protobuf_unittest::TestAllTypes_NestedMessage*>(&::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
}

TestForeignNested::TestForeignNested(const TestForeignNested& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestForeignNested)
}

void TestForeignNested::SharedCtor() {
  _cached_size_ = 0;
  foreign_nested_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestForeignNested::~TestForeignNested() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestForeignNested)
  SharedDtor();
}

void TestForeignNested::SharedDtor() {
  if (this != default_instance_) {
    delete foreign_nested_;
  }
}

void TestForeignNested::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestForeignNested::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestForeignNested_descriptor_;
}

const TestForeignNested& TestForeignNested::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestForeignNested* TestForeignNested::default_instance_ = NULL;

TestForeignNested* TestForeignNested::New() const {
  return new TestForeignNested;
}

void TestForeignNested::Clear() {
  if (has_foreign_nested()) {
    if (foreign_nested_ != NULL) foreign_nested_->::protobuf_unittest::TestAllTypes_NestedMessage::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestForeignNested::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestForeignNested)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foreign_nested()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestForeignNested)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestForeignNested)
  return false;
#undef DO_
}

void TestForeignNested::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestForeignNested)
  // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  if (has_foreign_nested()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->foreign_nested(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestForeignNested)
}

::google::protobuf::uint8* TestForeignNested::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestForeignNested)
  // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  if (has_foreign_nested()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->foreign_nested(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestForeignNested)
  return target;
}

int TestForeignNested::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
    if (has_foreign_nested()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foreign_nested());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestForeignNested::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestForeignNested* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestForeignNested*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestForeignNested::MergeFrom(const TestForeignNested& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_foreign_nested()) {
      mutable_foreign_nested()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(from.foreign_nested());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestForeignNested::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestForeignNested::CopyFrom(const TestForeignNested& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestForeignNested::IsInitialized() const {

  return true;
}

void TestForeignNested::Swap(TestForeignNested* other) {
  if (other != this) {
    std::swap(foreign_nested_, other->foreign_nested_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestForeignNested::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestForeignNested_descriptor_;
  metadata.reflection = TestForeignNested_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TestEmptyMessage::TestEmptyMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEmptyMessage)
}

void TestEmptyMessage::InitAsDefaultInstance() {
}

TestEmptyMessage::TestEmptyMessage(const TestEmptyMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessage)
}

void TestEmptyMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestEmptyMessage::~TestEmptyMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessage)
  SharedDtor();
}

void TestEmptyMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestEmptyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEmptyMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEmptyMessage_descriptor_;
}

const TestEmptyMessage& TestEmptyMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestEmptyMessage* TestEmptyMessage::default_instance_ = NULL;

TestEmptyMessage* TestEmptyMessage::New() const {
  return new TestEmptyMessage;
}

void TestEmptyMessage::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestEmptyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEmptyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEmptyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEmptyMessage)
  return false;
#undef DO_
}

void TestEmptyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEmptyMessage)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEmptyMessage)
}

::google::protobuf::uint8* TestEmptyMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmptyMessage)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmptyMessage)
  return target;
}

int TestEmptyMessage::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEmptyMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestEmptyMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestEmptyMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestEmptyMessage::MergeFrom(const TestEmptyMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestEmptyMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEmptyMessage::CopyFrom(const TestEmptyMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestEmptyMessage::IsInitialized() const {

  return true;
}

void TestEmptyMessage::Swap(TestEmptyMessage* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestEmptyMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEmptyMessage_descriptor_;
  metadata.reflection = TestEmptyMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEmptyMessageWithExtensions)
}

void TestEmptyMessageWithExtensions::InitAsDefaultInstance() {
}

TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions(const TestEmptyMessageWithExtensions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessageWithExtensions)
}

void TestEmptyMessageWithExtensions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestEmptyMessageWithExtensions::~TestEmptyMessageWithExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessageWithExtensions)
  SharedDtor();
}

void TestEmptyMessageWithExtensions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestEmptyMessageWithExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEmptyMessageWithExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEmptyMessageWithExtensions_descriptor_;
}

const TestEmptyMessageWithExtensions& TestEmptyMessageWithExtensions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestEmptyMessageWithExtensions* TestEmptyMessageWithExtensions::default_instance_ = NULL;

TestEmptyMessageWithExtensions* TestEmptyMessageWithExtensions::New() const {
  return new TestEmptyMessageWithExtensions;
}

void TestEmptyMessageWithExtensions::Clear() {
  _extensions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestEmptyMessageWithExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, default_instance_,
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEmptyMessageWithExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEmptyMessageWithExtensions)
  return false;
#undef DO_
}

void TestEmptyMessageWithExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEmptyMessageWithExtensions)
}

::google::protobuf::uint8* TestEmptyMessageWithExtensions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmptyMessageWithExtensions)
  return target;
}

int TestEmptyMessageWithExtensions::ByteSize() const {
  int total_size = 0;

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEmptyMessageWithExtensions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestEmptyMessageWithExtensions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestEmptyMessageWithExtensions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestEmptyMessageWithExtensions::MergeFrom(const TestEmptyMessageWithExtensions& from) {
  GOOGLE_CHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestEmptyMessageWithExtensions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEmptyMessageWithExtensions::CopyFrom(const TestEmptyMessageWithExtensions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestEmptyMessageWithExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestEmptyMessageWithExtensions::Swap(TestEmptyMessageWithExtensions* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestEmptyMessageWithExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEmptyMessageWithExtensions_descriptor_;
  metadata.reflection = TestEmptyMessageWithExtensions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TestMultipleExtensionRanges::TestMultipleExtensionRanges()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMultipleExtensionRanges)
}

void TestMultipleExtensionRanges::InitAsDefaultInstance() {
}

TestMultipleExtensionRanges::TestMultipleExtensionRanges(const TestMultipleExtensionRanges& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMultipleExtensionRanges)
}

void TestMultipleExtensionRanges::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMultipleExtensionRanges::~TestMultipleExtensionRanges() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMultipleExtensionRanges)
  SharedDtor();
}

void TestMultipleExtensionRanges::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMultipleExtensionRanges::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMultipleExtensionRanges::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMultipleExtensionRanges_descriptor_;
}

const TestMultipleExtensionRanges& TestMultipleExtensionRanges::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestMultipleExtensionRanges* TestMultipleExtensionRanges::default_instance_ = NULL;

TestMultipleExtensionRanges* TestMultipleExtensionRanges::New() const {
  return new TestMultipleExtensionRanges;
}

void TestMultipleExtensionRanges::Clear() {
  _extensions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMultipleExtensionRanges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestMultipleExtensionRanges)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((336u <= tag && tag < 344u) ||
        (33144u <= tag && tag < 33952u) ||
        (524288u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, default_instance_,
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestMultipleExtensionRanges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestMultipleExtensionRanges)
  return false;
#undef DO_
}

void TestMultipleExtensionRanges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestMultipleExtensionRanges)
  // Extension range [42, 43)
  _extensions_.SerializeWithCachedSizes(
      42, 43, output);

  // Extension range [4143, 4244)
  _extensions_.SerializeWithCachedSizes(
      4143, 4244, output);

  // Extension range [65536, 536870912)
  _extensions_.SerializeWithCachedSizes(
      65536, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestMultipleExtensionRanges)
}

::google::protobuf::uint8* TestMultipleExtensionRanges::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMultipleExtensionRanges)
  // Extension range [42, 43)
  target = _extensions_.SerializeWithCachedSizesToArray(
      42, 43, target);

  // Extension range [4143, 4244)
  target = _extensions_.SerializeWithCachedSizesToArray(
      4143, 4244, target);

  // Extension range [65536, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      65536, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMultipleExtensionRanges)
  return target;
}

int TestMultipleExtensionRanges::ByteSize() const {
  int total_size = 0;

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMultipleExtensionRanges::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMultipleExtensionRanges* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMultipleExtensionRanges*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMultipleExtensionRanges::MergeFrom(const TestMultipleExtensionRanges& from) {
  GOOGLE_CHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMultipleExtensionRanges::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMultipleExtensionRanges::CopyFrom(const TestMultipleExtensionRanges& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMultipleExtensionRanges::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestMultipleExtensionRanges::Swap(TestMultipleExtensionRanges* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestMultipleExtensionRanges::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMultipleExtensionRanges_descriptor_;
  metadata.reflection = TestMultipleExtensionRanges_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestReallyLargeTagNumber::kAFieldNumber;
const int TestReallyLargeTagNumber::kBbFieldNumber;
#endif  // !_MSC_VER

TestReallyLargeTagNumber::TestReallyLargeTagNumber()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestReallyLargeTagNumber)
}

void TestReallyLargeTagNumber::InitAsDefaultInstance() {
}

TestReallyLargeTagNumber::TestReallyLargeTagNumber(const TestReallyLargeTagNumber& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestReallyLargeTagNumber)
}

void TestReallyLargeTagNumber::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  bb_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestReallyLargeTagNumber::~TestReallyLargeTagNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestReallyLargeTagNumber)
  SharedDtor();
}

void TestReallyLargeTagNumber::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestReallyLargeTagNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestReallyLargeTagNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestReallyLargeTagNumber_descriptor_;
}

const TestReallyLargeTagNumber& TestReallyLargeTagNumber::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestReallyLargeTagNumber* TestReallyLargeTagNumber::default_instance_ = NULL;

TestReallyLargeTagNumber* TestReallyLargeTagNumber::New() const {
  return new TestReallyLargeTagNumber;
}

void TestReallyLargeTagNumber::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TestReallyLargeTagNumber*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(a_, bb_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestReallyLargeTagNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestReallyLargeTagNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(2147483640);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2147483640)) goto parse_bb;
        break;
      }

      // optional int32 bb = 268435455;
      case 268435455: {
        if (tag == 2147483640) {
         parse_bb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bb_)));
          set_has_bb();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestReallyLargeTagNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestReallyLargeTagNumber)
  return false;
#undef DO_
}

void TestReallyLargeTagNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestReallyLargeTagNumber)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 bb = 268435455;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(268435455, this->bb(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestReallyLargeTagNumber)
}

::google::protobuf::uint8* TestReallyLargeTagNumber::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestReallyLargeTagNumber)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 bb = 268435455;
  if (has_bb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(268435455, this->bb(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestReallyLargeTagNumber)
  return target;
}

int TestReallyLargeTagNumber::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional int32 bb = 268435455;
    if (has_bb()) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bb());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestReallyLargeTagNumber::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestReallyLargeTagNumber* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestReallyLargeTagNumber*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestReallyLargeTagNumber::MergeFrom(const TestReallyLargeTagNumber& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_bb()) {
      set_bb(from.bb());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestReallyLargeTagNumber::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestReallyLargeTagNumber::CopyFrom(const TestReallyLargeTagNumber& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestReallyLargeTagNumber::IsInitialized() const {

  return true;
}

void TestReallyLargeTagNumber::Swap(TestReallyLargeTagNumber* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(bb_, other->bb_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestReallyLargeTagNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestReallyLargeTagNumber_descriptor_;
  metadata.reflection = TestReallyLargeTagNumber_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestRecursiveMessage::kAFieldNumber;
const int TestRecursiveMessage::kIFieldNumber;
#endif  // !_MSC_VER

TestRecursiveMessage::TestRecursiveMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRecursiveMessage)
}

void TestRecursiveMessage::InitAsDefaultInstance() {
  a_ = const_cast< ::protobuf_unittest::TestRecursiveMessage*>(&::protobuf_unittest::TestRecursiveMessage::default_instance());
}

TestRecursiveMessage::TestRecursiveMessage(const TestRecursiveMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRecursiveMessage)
}

void TestRecursiveMessage::SharedCtor() {
  _cached_size_ = 0;
  a_ = NULL;
  i_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestRecursiveMessage::~TestRecursiveMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRecursiveMessage)
  SharedDtor();
}

void TestRecursiveMessage::SharedDtor() {
  if (this != default_instance_) {
    delete a_;
  }
}

void TestRecursiveMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRecursiveMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRecursiveMessage_descriptor_;
}

const TestRecursiveMessage& TestRecursiveMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestRecursiveMessage* TestRecursiveMessage::default_instance_ = NULL;

TestRecursiveMessage* TestRecursiveMessage::New() const {
  return new TestRecursiveMessage;
}

void TestRecursiveMessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_a()) {
      if (a_ != NULL) a_->::protobuf_unittest::TestRecursiveMessage::Clear();
    }
    i_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestRecursiveMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRecursiveMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestRecursiveMessage a = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_i;
        break;
      }

      // optional int32 i = 2;
      case 2: {
        if (tag == 16) {
         parse_i:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i_)));
          set_has_i();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRecursiveMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRecursiveMessage)
  return false;
#undef DO_
}

void TestRecursiveMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRecursiveMessage)
  // optional .protobuf_unittest.TestRecursiveMessage a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->a(), output);
  }

  // optional int32 i = 2;
  if (has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->i(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRecursiveMessage)
}

::google::protobuf::uint8* TestRecursiveMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRecursiveMessage)
  // optional .protobuf_unittest.TestRecursiveMessage a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->a(), target);
  }

  // optional int32 i = 2;
  if (has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->i(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRecursiveMessage)
  return target;
}

int TestRecursiveMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestRecursiveMessage a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->a());
    }

    // optional int32 i = 2;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRecursiveMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestRecursiveMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestRecursiveMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestRecursiveMessage::MergeFrom(const TestRecursiveMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      mutable_a()->::protobuf_unittest::TestRecursiveMessage::MergeFrom(from.a());
    }
    if (from.has_i()) {
      set_i(from.i());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestRecursiveMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRecursiveMessage::CopyFrom(const TestRecursiveMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRecursiveMessage::IsInitialized() const {

  return true;
}

void TestRecursiveMessage::Swap(TestRecursiveMessage* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(i_, other->i_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestRecursiveMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRecursiveMessage_descriptor_;
  metadata.reflection = TestRecursiveMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMutualRecursionA::kBbFieldNumber;
#endif  // !_MSC_VER

TestMutualRecursionA::TestMutualRecursionA()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMutualRecursionA)
}

void TestMutualRecursionA::InitAsDefaultInstance() {
  bb_ = const_cast< ::protobuf_unittest::TestMutualRecursionB*>(&::protobuf_unittest::TestMutualRecursionB::default_instance());
}

TestMutualRecursionA::TestMutualRecursionA(const TestMutualRecursionA& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionA)
}

void TestMutualRecursionA::SharedCtor() {
  _cached_size_ = 0;
  bb_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMutualRecursionA::~TestMutualRecursionA() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionA)
  SharedDtor();
}

void TestMutualRecursionA::SharedDtor() {
  if (this != default_instance_) {
    delete bb_;
  }
}

void TestMutualRecursionA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMutualRecursionA::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMutualRecursionA_descriptor_;
}

const TestMutualRecursionA& TestMutualRecursionA::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestMutualRecursionA* TestMutualRecursionA::default_instance_ = NULL;

TestMutualRecursionA* TestMutualRecursionA::New() const {
  return new TestMutualRecursionA;
}

void TestMutualRecursionA::Clear() {
  if (has_bb()) {
    if (bb_ != NULL) bb_->::protobuf_unittest::TestMutualRecursionB::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMutualRecursionA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestMutualRecursionA)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestMutualRecursionA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestMutualRecursionA)
  return false;
#undef DO_
}

void TestMutualRecursionA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestMutualRecursionA)
  // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
  if (has_bb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bb(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestMutualRecursionA)
}

::google::protobuf::uint8* TestMutualRecursionA::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionA)
  // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
  if (has_bb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bb(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionA)
  return target;
}

int TestMutualRecursionA::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
    if (has_bb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bb());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMutualRecursionA::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMutualRecursionA* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMutualRecursionA*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMutualRecursionA::MergeFrom(const TestMutualRecursionA& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bb()) {
      mutable_bb()->::protobuf_unittest::TestMutualRecursionB::MergeFrom(from.bb());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMutualRecursionA::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMutualRecursionA::CopyFrom(const TestMutualRecursionA& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMutualRecursionA::IsInitialized() const {

  return true;
}

void TestMutualRecursionA::Swap(TestMutualRecursionA* other) {
  if (other != this) {
    std::swap(bb_, other->bb_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMutualRecursionA::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMutualRecursionA_descriptor_;
  metadata.reflection = TestMutualRecursionA_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMutualRecursionB::kAFieldNumber;
const int TestMutualRecursionB::kOptionalInt32FieldNumber;
#endif  // !_MSC_VER

TestMutualRecursionB::TestMutualRecursionB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMutualRecursionB)
}

void TestMutualRecursionB::InitAsDefaultInstance() {
  a_ = const_cast< ::protobuf_unittest::TestMutualRecursionA*>(&::protobuf_unittest::TestMutualRecursionA::default_instance());
}

TestMutualRecursionB::TestMutualRecursionB(const TestMutualRecursionB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionB)
}

void TestMutualRecursionB::SharedCtor() {
  _cached_size_ = 0;
  a_ = NULL;
  optional_int32_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMutualRecursionB::~TestMutualRecursionB() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionB)
  SharedDtor();
}

void TestMutualRecursionB::SharedDtor() {
  if (this != default_instance_) {
    delete a_;
  }
}

void TestMutualRecursionB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMutualRecursionB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMutualRecursionB_descriptor_;
}

const TestMutualRecursionB& TestMutualRecursionB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestMutualRecursionB* TestMutualRecursionB::default_instance_ = NULL;

TestMutualRecursionB* TestMutualRecursionB::New() const {
  return new TestMutualRecursionB;
}

void TestMutualRecursionB::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_a()) {
      if (a_ != NULL) a_->::protobuf_unittest::TestMutualRecursionA::Clear();
    }
    optional_int32_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMutualRecursionB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestMutualRecursionB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestMutualRecursionA a = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_optional_int32;
        break;
      }

      // optional int32 optional_int32 = 2;
      case 2: {
        if (tag == 16) {
         parse_optional_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optional_int32_)));
          set_has_optional_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestMutualRecursionB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestMutualRecursionB)
  return false;
#undef DO_
}

void TestMutualRecursionB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestMutualRecursionB)
  // optional .protobuf_unittest.TestMutualRecursionA a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->a(), output);
  }

  // optional int32 optional_int32 = 2;
  if (has_optional_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->optional_int32(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestMutualRecursionB)
}

::google::protobuf::uint8* TestMutualRecursionB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionB)
  // optional .protobuf_unittest.TestMutualRecursionA a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->a(), target);
  }

  // optional int32 optional_int32 = 2;
  if (has_optional_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->optional_int32(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionB)
  return target;
}

int TestMutualRecursionB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestMutualRecursionA a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->a());
    }

    // optional int32 optional_int32 = 2;
    if (has_optional_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optional_int32());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMutualRecursionB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMutualRecursionB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMutualRecursionB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMutualRecursionB::MergeFrom(const TestMutualRecursionB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      mutable_a()->::protobuf_unittest::TestMutualRecursionA::MergeFrom(from.a());
    }
    if (from.has_optional_int32()) {
      set_optional_int32(from.optional_int32());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMutualRecursionB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMutualRecursionB::CopyFrom(const TestMutualRecursionB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMutualRecursionB::IsInitialized() const {

  return true;
}

void TestMutualRecursionB::Swap(TestMutualRecursionB* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(optional_int32_, other->optional_int32_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMutualRecursionB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMutualRecursionB_descriptor_;
  metadata.reflection = TestMutualRecursionB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestDupFieldNumber_Foo::kAFieldNumber;
#endif  // !_MSC_VER

TestDupFieldNumber_Foo::TestDupFieldNumber_Foo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDupFieldNumber.Foo)
}

void TestDupFieldNumber_Foo::InitAsDefaultInstance() {
}

TestDupFieldNumber_Foo::TestDupFieldNumber_Foo(const TestDupFieldNumber_Foo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber.Foo)
}

void TestDupFieldNumber_Foo::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestDupFieldNumber_Foo::~TestDupFieldNumber_Foo() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber.Foo)
  SharedDtor();
}

void TestDupFieldNumber_Foo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestDupFieldNumber_Foo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDupFieldNumber_Foo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDupFieldNumber_Foo_descriptor_;
}

const TestDupFieldNumber_Foo& TestDupFieldNumber_Foo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestDupFieldNumber_Foo* TestDupFieldNumber_Foo::default_instance_ = NULL;

TestDupFieldNumber_Foo* TestDupFieldNumber_Foo::New() const {
  return new TestDupFieldNumber_Foo;
}

void TestDupFieldNumber_Foo::Clear() {
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestDupFieldNumber_Foo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDupFieldNumber.Foo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDupFieldNumber.Foo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDupFieldNumber.Foo)
  return false;
#undef DO_
}

void TestDupFieldNumber_Foo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDupFieldNumber.Foo)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDupFieldNumber.Foo)
}

::google::protobuf::uint8* TestDupFieldNumber_Foo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber.Foo)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber.Foo)
  return target;
}

int TestDupFieldNumber_Foo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDupFieldNumber_Foo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestDupFieldNumber_Foo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestDupFieldNumber_Foo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestDupFieldNumber_Foo::MergeFrom(const TestDupFieldNumber_Foo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestDupFieldNumber_Foo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDupFieldNumber_Foo::CopyFrom(const TestDupFieldNumber_Foo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestDupFieldNumber_Foo::IsInitialized() const {

  return true;
}

void TestDupFieldNumber_Foo::Swap(TestDupFieldNumber_Foo* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestDupFieldNumber_Foo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDupFieldNumber_Foo_descriptor_;
  metadata.reflection = TestDupFieldNumber_Foo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestDupFieldNumber_Bar::kAFieldNumber;
#endif  // !_MSC_VER

TestDupFieldNumber_Bar::TestDupFieldNumber_Bar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDupFieldNumber.Bar)
}

void TestDupFieldNumber_Bar::InitAsDefaultInstance() {
}

TestDupFieldNumber_Bar::TestDupFieldNumber_Bar(const TestDupFieldNumber_Bar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber.Bar)
}

void TestDupFieldNumber_Bar::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestDupFieldNumber_Bar::~TestDupFieldNumber_Bar() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber.Bar)
  SharedDtor();
}

void TestDupFieldNumber_Bar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestDupFieldNumber_Bar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDupFieldNumber_Bar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDupFieldNumber_Bar_descriptor_;
}

const TestDupFieldNumber_Bar& TestDupFieldNumber_Bar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestDupFieldNumber_Bar* TestDupFieldNumber_Bar::default_instance_ = NULL;

TestDupFieldNumber_Bar* TestDupFieldNumber_Bar::New() const {
  return new TestDupFieldNumber_Bar;
}

void TestDupFieldNumber_Bar::Clear() {
  a_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestDupFieldNumber_Bar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDupFieldNumber.Bar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDupFieldNumber.Bar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDupFieldNumber.Bar)
  return false;
#undef DO_
}

void TestDupFieldNumber_Bar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDupFieldNumber.Bar)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDupFieldNumber.Bar)
}

::google::protobuf::uint8* TestDupFieldNumber_Bar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber.Bar)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber.Bar)
  return target;
}

int TestDupFieldNumber_Bar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDupFieldNumber_Bar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestDupFieldNumber_Bar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestDupFieldNumber_Bar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestDupFieldNumber_Bar::MergeFrom(const TestDupFieldNumber_Bar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestDupFieldNumber_Bar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDupFieldNumber_Bar::CopyFrom(const TestDupFieldNumber_Bar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestDupFieldNumber_Bar::IsInitialized() const {

  return true;
}

void TestDupFieldNumber_Bar::Swap(TestDupFieldNumber_Bar* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestDupFieldNumber_Bar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDupFieldNumber_Bar_descriptor_;
  metadata.reflection = TestDupFieldNumber_Bar_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestDupFieldNumber::kAFieldNumber;
const int TestDupFieldNumber::kFooFieldNumber;
const int TestDupFieldNumber::kBarFieldNumber;
#endif  // !_MSC_VER

TestDupFieldNumber::TestDupFieldNumber()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDupFieldNumber)
}

void TestDupFieldNumber::InitAsDefaultInstance() {
  foo_ = const_cast< ::protobuf_unittest::TestDupFieldNumber_Foo*>(&::protobuf_unittest::TestDupFieldNumber_Foo::default_instance());
  bar_ = const_cast< ::protobuf_unittest::TestDupFieldNumber_Bar*>(&::protobuf_unittest::TestDupFieldNumber_Bar::default_instance());
}

TestDupFieldNumber::TestDupFieldNumber(const TestDupFieldNumber& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber)
}

void TestDupFieldNumber::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  foo_ = NULL;
  bar_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestDupFieldNumber::~TestDupFieldNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber)
  SharedDtor();
}

void TestDupFieldNumber::SharedDtor() {
  if (this != default_instance_) {
    delete foo_;
    delete bar_;
  }
}

void TestDupFieldNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDupFieldNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDupFieldNumber_descriptor_;
}

const TestDupFieldNumber& TestDupFieldNumber::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestDupFieldNumber* TestDupFieldNumber::default_instance_ = NULL;

TestDupFieldNumber* TestDupFieldNumber::New() const {
  return new TestDupFieldNumber;
}

void TestDupFieldNumber::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    a_ = 0;
    if (has_foo()) {
      if (foo_ != NULL) foo_->::protobuf_unittest::TestDupFieldNumber_Foo::Clear();
    }
    if (has_bar()) {
      if (bar_ != NULL) bar_->::protobuf_unittest::TestDupFieldNumber_Bar::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestDupFieldNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDupFieldNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(19)) goto parse_foo;
        break;
      }

      // optional group Foo = 2 {
      case 2: {
        if (tag == 19) {
         parse_foo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                2, input, mutable_foo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(27)) goto parse_bar;
        break;
      }

      // optional group Bar = 3 {
      case 3: {
        if (tag == 27) {
         parse_bar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                3, input, mutable_bar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDupFieldNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDupFieldNumber)
  return false;
#undef DO_
}

void TestDupFieldNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDupFieldNumber)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional group Foo = 2 {
  if (has_foo()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      2, this->foo(), output);
  }

  // optional group Bar = 3 {
  if (has_bar()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      3, this->bar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDupFieldNumber)
}

::google::protobuf::uint8* TestDupFieldNumber::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional group Foo = 2 {
  if (has_foo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        2, this->foo(), target);
  }

  // optional group Bar = 3 {
  if (has_bar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        3, this->bar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber)
  return target;
}

int TestDupFieldNumber::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional group Foo = 2 {
    if (has_foo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->foo());
    }

    // optional group Bar = 3 {
    if (has_bar()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->bar());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDupFieldNumber::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestDupFieldNumber* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestDupFieldNumber*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestDupFieldNumber::MergeFrom(const TestDupFieldNumber& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_foo()) {
      mutable_foo()->::protobuf_unittest::TestDupFieldNumber_Foo::MergeFrom(from.foo());
    }
    if (from.has_bar()) {
      mutable_bar()->::protobuf_unittest::TestDupFieldNumber_Bar::MergeFrom(from.bar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestDupFieldNumber::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDupFieldNumber::CopyFrom(const TestDupFieldNumber& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestDupFieldNumber::IsInitialized() const {

  return true;
}

void TestDupFieldNumber::Swap(TestDupFieldNumber* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(foo_, other->foo_);
    std::swap(bar_, other->bar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestDupFieldNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDupFieldNumber_descriptor_;
  metadata.reflection = TestDupFieldNumber_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestEagerMessage::kSubMessageFieldNumber;
#endif  // !_MSC_VER

TestEagerMessage::TestEagerMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEagerMessage)
}

void TestEagerMessage::InitAsDefaultInstance() {
  sub_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
}

TestEagerMessage::TestEagerMessage(const TestEagerMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEagerMessage)
}

void TestEagerMessage::SharedCtor() {
  _cached_size_ = 0;
  sub_message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestEagerMessage::~TestEagerMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEagerMessage)
  SharedDtor();
}

void TestEagerMessage::SharedDtor() {
  if (this != default_instance_) {
    delete sub_message_;
  }
}

void TestEagerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEagerMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEagerMessage_descriptor_;
}

const TestEagerMessage& TestEagerMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestEagerMessage* TestEagerMessage::default_instance_ = NULL;

TestEagerMessage* TestEagerMessage::New() const {
  return new TestEagerMessage;
}

void TestEagerMessage::Clear() {
  if (has_sub_message()) {
    if (sub_message_ != NULL) sub_message_->::protobuf_unittest::TestAllTypes::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestEagerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEagerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEagerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEagerMessage)
  return false;
#undef DO_
}

void TestEagerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEagerMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
  if (has_sub_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sub_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEagerMessage)
}

::google::protobuf::uint8* TestEagerMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEagerMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
  if (has_sub_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sub_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEagerMessage)
  return target;
}

int TestEagerMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
    if (has_sub_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEagerMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestEagerMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestEagerMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestEagerMessage::MergeFrom(const TestEagerMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_message()) {
      mutable_sub_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.sub_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestEagerMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEagerMessage::CopyFrom(const TestEagerMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestEagerMessage::IsInitialized() const {

  return true;
}

void TestEagerMessage::Swap(TestEagerMessage* other) {
  if (other != this) {
    std::swap(sub_message_, other->sub_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestEagerMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEagerMessage_descriptor_;
  metadata.reflection = TestEagerMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestLazyMessage::kSubMessageFieldNumber;
#endif  // !_MSC_VER

TestLazyMessage::TestLazyMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestLazyMessage)
}

void TestLazyMessage::InitAsDefaultInstance() {
  sub_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
}

TestLazyMessage::TestLazyMessage(const TestLazyMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestLazyMessage)
}

void TestLazyMessage::SharedCtor() {
  _cached_size_ = 0;
  sub_message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestLazyMessage::~TestLazyMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestLazyMessage)
  SharedDtor();
}

void TestLazyMessage::SharedDtor() {
  if (this != default_instance_) {
    delete sub_message_;
  }
}

void TestLazyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestLazyMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestLazyMessage_descriptor_;
}

const TestLazyMessage& TestLazyMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestLazyMessage* TestLazyMessage::default_instance_ = NULL;

TestLazyMessage* TestLazyMessage::New() const {
  return new TestLazyMessage;
}

void TestLazyMessage::Clear() {
  if (has_sub_message()) {
    if (sub_message_ != NULL) sub_message_->::protobuf_unittest::TestAllTypes::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestLazyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestLazyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestLazyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestLazyMessage)
  return false;
#undef DO_
}

void TestLazyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestLazyMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
  if (has_sub_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sub_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestLazyMessage)
}

::google::protobuf::uint8* TestLazyMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestLazyMessage)
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
  if (has_sub_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sub_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestLazyMessage)
  return target;
}

int TestLazyMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
    if (has_sub_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestLazyMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestLazyMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestLazyMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestLazyMessage::MergeFrom(const TestLazyMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_message()) {
      mutable_sub_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.sub_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestLazyMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestLazyMessage::CopyFrom(const TestLazyMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestLazyMessage::IsInitialized() const {

  return true;
}

void TestLazyMessage::Swap(TestLazyMessage* other) {
  if (other != this) {
    std::swap(sub_message_, other->sub_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestLazyMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestLazyMessage_descriptor_;
  metadata.reflection = TestLazyMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestNestedMessageHasBits_NestedMessage::kNestedmessageRepeatedInt32FieldNumber;
const int TestNestedMessageHasBits_NestedMessage::kNestedmessageRepeatedForeignmessageFieldNumber;
#endif  // !_MSC_VER

TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}

void TestNestedMessageHasBits_NestedMessage::InitAsDefaultInstance() {
}

TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage(const TestNestedMessageHasBits_NestedMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}

void TestNestedMessageHasBits_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestNestedMessageHasBits_NestedMessage::~TestNestedMessageHasBits_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  SharedDtor();
}

void TestNestedMessageHasBits_NestedMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestNestedMessageHasBits_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedMessageHasBits_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestNestedMessageHasBits_NestedMessage_descriptor_;
}

const TestNestedMessageHasBits_NestedMessage& TestNestedMessageHasBits_NestedMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits_NestedMessage::default_instance_ = NULL;

TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits_NestedMessage::New() const {
  return new TestNestedMessageHasBits_NestedMessage;
}

void TestNestedMessageHasBits_NestedMessage::Clear() {
  nestedmessage_repeated_int32_.Clear();
  nestedmessage_repeated_foreignmessage_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestNestedMessageHasBits_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 nestedmessage_repeated_int32 = 1;
      case 1: {
        if (tag == 8) {
         parse_nestedmessage_repeated_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_nestedmessage_repeated_int32())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nestedmessage_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_nestedmessage_repeated_int32;
        if (input->ExpectTag(18)) goto parse_nestedmessage_repeated_foreignmessage;
        break;
      }

      // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
      case 2: {
        if (tag == 18) {
         parse_nestedmessage_repeated_foreignmessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nestedmessage_repeated_foreignmessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nestedmessage_repeated_foreignmessage;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  return false;
#undef DO_
}

void TestNestedMessageHasBits_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  // repeated int32 nestedmessage_repeated_int32 = 1;
  for (int i = 0; i < this->nestedmessage_repeated_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->nestedmessage_repeated_int32(i), output);
  }

  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  for (int i = 0; i < this->nestedmessage_repeated_foreignmessage_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->nestedmessage_repeated_foreignmessage(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}

::google::protobuf::uint8* TestNestedMessageHasBits_NestedMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  // repeated int32 nestedmessage_repeated_int32 = 1;
  for (int i = 0; i < this->nestedmessage_repeated_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->nestedmessage_repeated_int32(i), target);
  }

  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  for (int i = 0; i < this->nestedmessage_repeated_foreignmessage_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->nestedmessage_repeated_foreignmessage(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  return target;
}

int TestNestedMessageHasBits_NestedMessage::ByteSize() const {
  int total_size = 0;

  // repeated int32 nestedmessage_repeated_int32 = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->nestedmessage_repeated_int32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->nestedmessage_repeated_int32(i));
    }
    total_size += 1 * this->nestedmessage_repeated_int32_size() + data_size;
  }

  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  total_size += 1 * this->nestedmessage_repeated_foreignmessage_size();
  for (int i = 0; i < this->nestedmessage_repeated_foreignmessage_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nestedmessage_repeated_foreignmessage(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedMessageHasBits_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestNestedMessageHasBits_NestedMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestNestedMessageHasBits_NestedMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestNestedMessageHasBits_NestedMessage::MergeFrom(const TestNestedMessageHasBits_NestedMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  nestedmessage_repeated_int32_.MergeFrom(from.nestedmessage_repeated_int32_);
  nestedmessage_repeated_foreignmessage_.MergeFrom(from.nestedmessage_repeated_foreignmessage_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestNestedMessageHasBits_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedMessageHasBits_NestedMessage::CopyFrom(const TestNestedMessageHasBits_NestedMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestNestedMessageHasBits_NestedMessage::IsInitialized() const {

  return true;
}

void TestNestedMessageHasBits_NestedMessage::Swap(TestNestedMessageHasBits_NestedMessage* other) {
  if (other != this) {
    nestedmessage_repeated_int32_.Swap(&other->nestedmessage_repeated_int32_);
    nestedmessage_repeated_foreignmessage_.Swap(&other->nestedmessage_repeated_foreignmessage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestNestedMessageHasBits_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestNestedMessageHasBits_NestedMessage_descriptor_;
  metadata.reflection = TestNestedMessageHasBits_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestNestedMessageHasBits::kOptionalNestedMessageFieldNumber;
#endif  // !_MSC_VER

TestNestedMessageHasBits::TestNestedMessageHasBits()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestNestedMessageHasBits)
}

void TestNestedMessageHasBits::InitAsDefaultInstance() {
  optional_nested_message_ = const_cast< ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage*>(&::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::default_instance());
}

TestNestedMessageHasBits::TestNestedMessageHasBits(const TestNestedMessageHasBits& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedMessageHasBits)
}

void TestNestedMessageHasBits::SharedCtor() {
  _cached_size_ = 0;
  optional_nested_message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestNestedMessageHasBits::~TestNestedMessageHasBits() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedMessageHasBits)
  SharedDtor();
}

void TestNestedMessageHasBits::SharedDtor() {
  if (this != default_instance_) {
    delete optional_nested_message_;
  }
}

void TestNestedMessageHasBits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedMessageHasBits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestNestedMessageHasBits_descriptor_;
}

const TestNestedMessageHasBits& TestNestedMessageHasBits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestNestedMessageHasBits* TestNestedMessageHasBits::default_instance_ = NULL;

TestNestedMessageHasBits* TestNestedMessageHasBits::New() const {
  return new TestNestedMessageHasBits;
}

void TestNestedMessageHasBits::Clear() {
  if (has_optional_nested_message()) {
    if (optional_nested_message_ != NULL) optional_nested_message_->::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestNestedMessageHasBits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestNestedMessageHasBits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestNestedMessageHasBits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestNestedMessageHasBits)
  return false;
#undef DO_
}

void TestNestedMessageHasBits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestNestedMessageHasBits)
  // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  if (has_optional_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->optional_nested_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestNestedMessageHasBits)
}

::google::protobuf::uint8* TestNestedMessageHasBits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedMessageHasBits)
  // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  if (has_optional_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->optional_nested_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedMessageHasBits)
  return target;
}

int TestNestedMessageHasBits::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
    if (has_optional_nested_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_nested_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedMessageHasBits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestNestedMessageHasBits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestNestedMessageHasBits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestNestedMessageHasBits::MergeFrom(const TestNestedMessageHasBits& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_nested_message()) {
      mutable_optional_nested_message()->::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::MergeFrom(from.optional_nested_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestNestedMessageHasBits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedMessageHasBits::CopyFrom(const TestNestedMessageHasBits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestNestedMessageHasBits::IsInitialized() const {

  return true;
}

void TestNestedMessageHasBits::Swap(TestNestedMessageHasBits* other) {
  if (other != this) {
    std::swap(optional_nested_message_, other->optional_nested_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestNestedMessageHasBits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestNestedMessageHasBits_descriptor_;
  metadata.reflection = TestNestedMessageHasBits_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestCamelCaseFieldNames::kPrimitiveFieldFieldNumber;
const int TestCamelCaseFieldNames::kStringFieldFieldNumber;
const int TestCamelCaseFieldNames::kEnumFieldFieldNumber;
const int TestCamelCaseFieldNames::kMessageFieldFieldNumber;
const int TestCamelCaseFieldNames::kStringPieceFieldFieldNumber;
const int TestCamelCaseFieldNames::kCordFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedPrimitiveFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedStringFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedEnumFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedMessageFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedStringPieceFieldFieldNumber;
const int TestCamelCaseFieldNames::kRepeatedCordFieldFieldNumber;
#endif  // !_MSC_VER

TestCamelCaseFieldNames::TestCamelCaseFieldNames()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestCamelCaseFieldNames)
}

void TestCamelCaseFieldNames::InitAsDefaultInstance() {
  messagefield_ = const_cast< ::protobuf_unittest::ForeignMessage*>(&::protobuf_unittest::ForeignMessage::default_instance());
}

TestCamelCaseFieldNames::TestCamelCaseFieldNames(const TestCamelCaseFieldNames& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestCamelCaseFieldNames)
}

void TestCamelCaseFieldNames::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  primitivefield_ = 0;
  stringfield_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enumfield_ = 4;
  messagefield_ = NULL;
  stringpiecefield_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cordfield_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestCamelCaseFieldNames::~TestCamelCaseFieldNames() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestCamelCaseFieldNames)
  SharedDtor();
}

void TestCamelCaseFieldNames::SharedDtor() {
  if (stringfield_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stringfield_;
  }
  if (stringpiecefield_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stringpiecefield_;
  }
  if (cordfield_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cordfield_;
  }
  if (this != default_instance_) {
    delete messagefield_;
  }
}

void TestCamelCaseFieldNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestCamelCaseFieldNames::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestCamelCaseFieldNames_descriptor_;
}

const TestCamelCaseFieldNames& TestCamelCaseFieldNames::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestCamelCaseFieldNames* TestCamelCaseFieldNames::default_instance_ = NULL;

TestCamelCaseFieldNames* TestCamelCaseFieldNames::New() const {
  return new TestCamelCaseFieldNames;
}

void TestCamelCaseFieldNames::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    primitivefield_ = 0;
    if (has_stringfield()) {
      if (stringfield_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stringfield_->clear();
      }
    }
    enumfield_ = 4;
    if (has_messagefield()) {
      if (messagefield_ != NULL) messagefield_->::protobuf_unittest::ForeignMessage::Clear();
    }
    if (has_stringpiecefield()) {
      if (stringpiecefield_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stringpiecefield_->clear();
      }
    }
    if (has_cordfield()) {
      if (cordfield_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cordfield_->clear();
      }
    }
  }
  repeatedprimitivefield_.Clear();
  repeatedstringfield_.Clear();
  repeatedenumfield_.Clear();
  repeatedmessagefield_.Clear();
  repeatedstringpiecefield_.Clear();
  repeatedcordfield_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestCamelCaseFieldNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestCamelCaseFieldNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 PrimitiveField = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &primitivefield_)));
          set_has_primitivefield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StringField;
        break;
      }

      // optional string StringField = 2;
      case 2: {
        if (tag == 18) {
         parse_StringField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stringfield().data(), this->stringfield().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stringfield");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EnumField;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum EnumField = 3;
      case 3: {
        if (tag == 24) {
         parse_EnumField:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_enumfield(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_MessageField;
        break;
      }

      // optional .protobuf_unittest.ForeignMessage MessageField = 4;
      case 4: {
        if (tag == 34) {
         parse_MessageField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messagefield()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_StringPieceField;
        break;
      }

      // optional string StringPieceField = 5 [ctype = STRING_PIECE];
      case 5: {
        if (tag == 42) {
         parse_StringPieceField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringpiecefield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stringpiecefield().data(), this->stringpiecefield().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stringpiecefield");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_CordField;
        break;
      }

      // optional string CordField = 6 [ctype = CORD];
      case 6: {
        if (tag == 50) {
         parse_CordField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cordfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cordfield().data(), this->cordfield().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cordfield");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RepeatedPrimitiveField;
        break;
      }

      // repeated int32 RepeatedPrimitiveField = 7;
      case 7: {
        if (tag == 56) {
         parse_RepeatedPrimitiveField:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_repeatedprimitivefield())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeatedprimitivefield())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RepeatedPrimitiveField;
        if (input->ExpectTag(66)) goto parse_RepeatedStringField;
        break;
      }

      // repeated string RepeatedStringField = 8;
      case 8: {
        if (tag == 66) {
         parse_RepeatedStringField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeatedstringfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeatedstringfield(this->repeatedstringfield_size() - 1).data(),
            this->repeatedstringfield(this->repeatedstringfield_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeatedstringfield");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_RepeatedStringField;
        if (input->ExpectTag(72)) goto parse_RepeatedEnumField;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
      case 9: {
        if (tag == 72) {
         parse_RepeatedEnumField:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_repeatedenumfield(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::protobuf_unittest::ForeignEnum_IsValid,
                 this->mutable_repeatedenumfield())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_RepeatedEnumField;
        if (input->ExpectTag(82)) goto parse_RepeatedMessageField;
        break;
      }

      // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
      case 10: {
        if (tag == 82) {
         parse_RepeatedMessageField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeatedmessagefield()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_RepeatedMessageField;
        if (input->ExpectTag(90)) goto parse_RepeatedStringPieceField;
        break;
      }

      // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
      case 11: {
        if (tag == 90) {
         parse_RepeatedStringPieceField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeatedstringpiecefield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeatedstringpiecefield(this->repeatedstringpiecefield_size() - 1).data(),
            this->repeatedstringpiecefield(this->repeatedstringpiecefield_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeatedstringpiecefield");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_RepeatedStringPieceField;
        if (input->ExpectTag(98)) goto parse_RepeatedCordField;
        break;
      }

      // repeated string RepeatedCordField = 12 [ctype = CORD];
      case 12: {
        if (tag == 98) {
         parse_RepeatedCordField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeatedcordfield()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeatedcordfield(this->repeatedcordfield_size() - 1).data(),
            this->repeatedcordfield(this->repeatedcordfield_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeatedcordfield");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_RepeatedCordField;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestCamelCaseFieldNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestCamelCaseFieldNames)
  return false;
#undef DO_
}

void TestCamelCaseFieldNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestCamelCaseFieldNames)
  // optional int32 PrimitiveField = 1;
  if (has_primitivefield()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->primitivefield(), output);
  }

  // optional string StringField = 2;
  if (has_stringfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringfield().data(), this->stringfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stringfield");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stringfield(), output);
  }

  // optional .protobuf_unittest.ForeignEnum EnumField = 3;
  if (has_enumfield()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->enumfield(), output);
  }

  // optional .protobuf_unittest.ForeignMessage MessageField = 4;
  if (has_messagefield()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->messagefield(), output);
  }

  // optional string StringPieceField = 5 [ctype = STRING_PIECE];
  if (has_stringpiecefield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringpiecefield().data(), this->stringpiecefield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stringpiecefield");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stringpiecefield(), output);
  }

  // optional string CordField = 6 [ctype = CORD];
  if (has_cordfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cordfield().data(), this->cordfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cordfield");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cordfield(), output);
  }

  // repeated int32 RepeatedPrimitiveField = 7;
  for (int i = 0; i < this->repeatedprimitivefield_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->repeatedprimitivefield(i), output);
  }

  // repeated string RepeatedStringField = 8;
  for (int i = 0; i < this->repeatedstringfield_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeatedstringfield(i).data(), this->repeatedstringfield(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeatedstringfield");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->repeatedstringfield(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  for (int i = 0; i < this->repeatedenumfield_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->repeatedenumfield(i), output);
  }

  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  for (int i = 0; i < this->repeatedmessagefield_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->repeatedmessagefield(i), output);
  }

  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeatedstringpiecefield_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeatedstringpiecefield(i).data(), this->repeatedstringpiecefield(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeatedstringpiecefield");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->repeatedstringpiecefield(i), output);
  }

  // repeated string RepeatedCordField = 12 [ctype = CORD];
  for (int i = 0; i < this->repeatedcordfield_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeatedcordfield(i).data(), this->repeatedcordfield(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeatedcordfield");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->repeatedcordfield(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestCamelCaseFieldNames)
}

::google::protobuf::uint8* TestCamelCaseFieldNames::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestCamelCaseFieldNames)
  // optional int32 PrimitiveField = 1;
  if (has_primitivefield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->primitivefield(), target);
  }

  // optional string StringField = 2;
  if (has_stringfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringfield().data(), this->stringfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stringfield");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stringfield(), target);
  }

  // optional .protobuf_unittest.ForeignEnum EnumField = 3;
  if (has_enumfield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->enumfield(), target);
  }

  // optional .protobuf_unittest.ForeignMessage MessageField = 4;
  if (has_messagefield()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->messagefield(), target);
  }

  // optional string StringPieceField = 5 [ctype = STRING_PIECE];
  if (has_stringpiecefield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringpiecefield().data(), this->stringpiecefield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stringpiecefield");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stringpiecefield(), target);
  }

  // optional string CordField = 6 [ctype = CORD];
  if (has_cordfield()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cordfield().data(), this->cordfield().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cordfield");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cordfield(), target);
  }

  // repeated int32 RepeatedPrimitiveField = 7;
  for (int i = 0; i < this->repeatedprimitivefield_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->repeatedprimitivefield(i), target);
  }

  // repeated string RepeatedStringField = 8;
  for (int i = 0; i < this->repeatedstringfield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedstringfield(i).data(), this->repeatedstringfield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeatedstringfield");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->repeatedstringfield(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  for (int i = 0; i < this->repeatedenumfield_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->repeatedenumfield(i), target);
  }

  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  for (int i = 0; i < this->repeatedmessagefield_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->repeatedmessagefield(i), target);
  }

  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  for (int i = 0; i < this->repeatedstringpiecefield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedstringpiecefield(i).data(), this->repeatedstringpiecefield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeatedstringpiecefield");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->repeatedstringpiecefield(i), target);
  }

  // repeated string RepeatedCordField = 12 [ctype = CORD];
  for (int i = 0; i < this->repeatedcordfield_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeatedcordfield(i).data(), this->repeatedcordfield(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeatedcordfield");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->repeatedcordfield(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestCamelCaseFieldNames)
  return target;
}

int TestCamelCaseFieldNames::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 PrimitiveField = 1;
    if (has_primitivefield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->primitivefield());
    }

    // optional string StringField = 2;
    if (has_stringfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringfield());
    }

    // optional .protobuf_unittest.ForeignEnum EnumField = 3;
    if (has_enumfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enumfield());
    }

    // optional .protobuf_unittest.ForeignMessage MessageField = 4;
    if (has_messagefield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messagefield());
    }

    // optional string StringPieceField = 5 [ctype = STRING_PIECE];
    if (has_stringpiecefield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringpiecefield());
    }

    // optional string CordField = 6 [ctype = CORD];
    if (has_cordfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cordfield());
    }

  }
  // repeated int32 RepeatedPrimitiveField = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeatedprimitivefield_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->repeatedprimitivefield(i));
    }
    total_size += 1 * this->repeatedprimitivefield_size() + data_size;
  }

  // repeated string RepeatedStringField = 8;
  total_size += 1 * this->repeatedstringfield_size();
  for (int i = 0; i < this->repeatedstringfield_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeatedstringfield(i));
  }

  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeatedenumfield_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeatedenumfield(i));
    }
    total_size += 1 * this->repeatedenumfield_size() + data_size;
  }

  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  total_size += 1 * this->repeatedmessagefield_size();
  for (int i = 0; i < this->repeatedmessagefield_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeatedmessagefield(i));
  }

  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  total_size += 1 * this->repeatedstringpiecefield_size();
  for (int i = 0; i < this->repeatedstringpiecefield_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeatedstringpiecefield(i));
  }

  // repeated string RepeatedCordField = 12 [ctype = CORD];
  total_size += 1 * this->repeatedcordfield_size();
  for (int i = 0; i < this->repeatedcordfield_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeatedcordfield(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestCamelCaseFieldNames::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestCamelCaseFieldNames* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestCamelCaseFieldNames*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestCamelCaseFieldNames::MergeFrom(const TestCamelCaseFieldNames& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeatedprimitivefield_.MergeFrom(from.repeatedprimitivefield_);
  repeatedstringfield_.MergeFrom(from.repeatedstringfield_);
  repeatedenumfield_.MergeFrom(from.repeatedenumfield_);
  repeatedmessagefield_.MergeFrom(from.repeatedmessagefield_);
  repeatedstringpiecefield_.MergeFrom(from.repeatedstringpiecefield_);
  repeatedcordfield_.MergeFrom(from.repeatedcordfield_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_primitivefield()) {
      set_primitivefield(from.primitivefield());
    }
    if (from.has_stringfield()) {
      set_stringfield(from.stringfield());
    }
    if (from.has_enumfield()) {
      set_enumfield(from.enumfield());
    }
    if (from.has_messagefield()) {
      mutable_messagefield()->::protobuf_unittest::ForeignMessage::MergeFrom(from.messagefield());
    }
    if (from.has_stringpiecefield()) {
      set_stringpiecefield(from.stringpiecefield());
    }
    if (from.has_cordfield()) {
      set_cordfield(from.cordfield());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestCamelCaseFieldNames::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCamelCaseFieldNames::CopyFrom(const TestCamelCaseFieldNames& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestCamelCaseFieldNames::IsInitialized() const {

  return true;
}

void TestCamelCaseFieldNames::Swap(TestCamelCaseFieldNames* other) {
  if (other != this) {
    std::swap(primitivefield_, other->primitivefield_);
    std::swap(stringfield_, other->stringfield_);
    std::swap(enumfield_, other->enumfield_);
    std::swap(messagefield_, other->messagefield_);
    std::swap(stringpiecefield_, other->stringpiecefield_);
    std::swap(cordfield_, other->cordfield_);
    repeatedprimitivefield_.Swap(&other->repeatedprimitivefield_);
    repeatedstringfield_.Swap(&other->repeatedstringfield_);
    repeatedenumfield_.Swap(&other->repeatedenumfield_);
    repeatedmessagefield_.Swap(&other->repeatedmessagefield_);
    repeatedstringpiecefield_.Swap(&other->repeatedstringpiecefield_);
    repeatedcordfield_.Swap(&other->repeatedcordfield_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestCamelCaseFieldNames::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestCamelCaseFieldNames_descriptor_;
  metadata.reflection = TestCamelCaseFieldNames_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldOrderings::kMyStringFieldNumber;
const int TestFieldOrderings::kMyIntFieldNumber;
const int TestFieldOrderings::kMyFloatFieldNumber;
#endif  // !_MSC_VER

TestFieldOrderings::TestFieldOrderings()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestFieldOrderings)
}

void TestFieldOrderings::InitAsDefaultInstance() {
}

TestFieldOrderings::TestFieldOrderings(const TestFieldOrderings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestFieldOrderings)
}

void TestFieldOrderings::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  my_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_int_ = GOOGLE_LONGLONG(0);
  my_float_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldOrderings::~TestFieldOrderings() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestFieldOrderings)
  SharedDtor();
}

void TestFieldOrderings::SharedDtor() {
  if (my_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete my_string_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldOrderings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldOrderings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldOrderings_descriptor_;
}

const TestFieldOrderings& TestFieldOrderings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestFieldOrderings* TestFieldOrderings::default_instance_ = NULL;

TestFieldOrderings* TestFieldOrderings::New() const {
  return new TestFieldOrderings;
}

void TestFieldOrderings::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TestFieldOrderings*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(my_int_, my_float_);
    if (has_my_string()) {
      if (my_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        my_string_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldOrderings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestFieldOrderings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 my_int = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &my_int_)));
          set_has_my_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_my_string;
        break;
      }

      // optional string my_string = 11;
      case 11: {
        if (tag == 90) {
         parse_my_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_my_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->my_string().data(), this->my_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "my_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(813)) goto parse_my_float;
        break;
      }

      // optional float my_float = 101;
      case 101: {
        if (tag == 813) {
         parse_my_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &my_float_)));
          set_has_my_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((16u <= tag && tag < 88u) ||
            (96u <= tag && tag < 808u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestFieldOrderings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestFieldOrderings)
  return false;
#undef DO_
}

void TestFieldOrderings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestFieldOrderings)
  // optional int64 my_int = 1;
  if (has_my_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->my_int(), output);
  }

  // Extension range [2, 11)
  _extensions_.SerializeWithCachedSizes(
      2, 11, output);

  // optional string my_string = 11;
  if (has_my_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->my_string(), output);
  }

  // Extension range [12, 101)
  _extensions_.SerializeWithCachedSizes(
      12, 101, output);

  // optional float my_float = 101;
  if (has_my_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(101, this->my_float(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestFieldOrderings)
}

::google::protobuf::uint8* TestFieldOrderings::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestFieldOrderings)
  // optional int64 my_int = 1;
  if (has_my_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->my_int(), target);
  }

  // Extension range [2, 11)
  target = _extensions_.SerializeWithCachedSizesToArray(
      2, 11, target);

  // optional string my_string = 11;
  if (has_my_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->my_string(), target);
  }

  // Extension range [12, 101)
  target = _extensions_.SerializeWithCachedSizesToArray(
      12, 101, target);

  // optional float my_float = 101;
  if (has_my_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(101, this->my_float(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestFieldOrderings)
  return target;
}

int TestFieldOrderings::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string my_string = 11;
    if (has_my_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->my_string());
    }

    // optional int64 my_int = 1;
    if (has_my_int()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->my_int());
    }

    // optional float my_float = 101;
    if (has_my_float()) {
      total_size += 2 + 4;
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldOrderings::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldOrderings* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldOrderings*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldOrderings::MergeFrom(const TestFieldOrderings& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_my_string()) {
      set_my_string(from.my_string());
    }
    if (from.has_my_int()) {
      set_my_int(from.my_int());
    }
    if (from.has_my_float()) {
      set_my_float(from.my_float());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldOrderings::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldOrderings::CopyFrom(const TestFieldOrderings& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldOrderings::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestFieldOrderings::Swap(TestFieldOrderings* other) {
  if (other != this) {
    std::swap(my_string_, other->my_string_);
    std::swap(my_int_, other->my_int_);
    std::swap(my_float_, other->my_float_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestFieldOrderings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldOrderings_descriptor_;
  metadata.reflection = TestFieldOrderings_reflection_;
  return metadata;
}


// ===================================================================

::std::string* TestExtremeDefaultValues::_default_escaped_bytes_ = NULL;
::std::string* TestExtremeDefaultValues::_default_utf8_string_ = NULL;
::std::string* TestExtremeDefaultValues::_default_cpp_trigraph_ = NULL;
::std::string* TestExtremeDefaultValues::_default_string_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_bytes_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_string_piece_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_cord_with_zero_ = NULL;
::std::string* TestExtremeDefaultValues::_default_replacement_string_ = NULL;
#ifndef _MSC_VER
const int TestExtremeDefaultValues::kEscapedBytesFieldNumber;
const int TestExtremeDefaultValues::kLargeUint32FieldNumber;
const int TestExtremeDefaultValues::kLargeUint64FieldNumber;
const int TestExtremeDefaultValues::kSmallInt32FieldNumber;
const int TestExtremeDefaultValues::kSmallInt64FieldNumber;
const int TestExtremeDefaultValues::kReallySmallInt32FieldNumber;
const int TestExtremeDefaultValues::kReallySmallInt64FieldNumber;
const int TestExtremeDefaultValues::kUtf8StringFieldNumber;
const int TestExtremeDefaultValues::kZeroFloatFieldNumber;
const int TestExtremeDefaultValues::kOneFloatFieldNumber;
const int TestExtremeDefaultValues::kSmallFloatFieldNumber;
const int TestExtremeDefaultValues::kNegativeOneFloatFieldNumber;
const int TestExtremeDefaultValues::kNegativeFloatFieldNumber;
const int TestExtremeDefaultValues::kLargeFloatFieldNumber;
const int TestExtremeDefaultValues::kSmallNegativeFloatFieldNumber;
const int TestExtremeDefaultValues::kInfDoubleFieldNumber;
const int TestExtremeDefaultValues::kNegInfDoubleFieldNumber;
const int TestExtremeDefaultValues::kNanDoubleFieldNumber;
const int TestExtremeDefaultValues::kInfFloatFieldNumber;
const int TestExtremeDefaultValues::kNegInfFloatFieldNumber;
const int TestExtremeDefaultValues::kNanFloatFieldNumber;
const int TestExtremeDefaultValues::kCppTrigraphFieldNumber;
const int TestExtremeDefaultValues::kStringWithZeroFieldNumber;
const int TestExtremeDefaultValues::kBytesWithZeroFieldNumber;
const int TestExtremeDefaultValues::kStringPieceWithZeroFieldNumber;
const int TestExtremeDefaultValues::kCordWithZeroFieldNumber;
const int TestExtremeDefaultValues::kReplacementStringFieldNumber;
#endif  // !_MSC_VER

TestExtremeDefaultValues::TestExtremeDefaultValues()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestExtremeDefaultValues)
}

void TestExtremeDefaultValues::InitAsDefaultInstance() {
}

TestExtremeDefaultValues::TestExtremeDefaultValues(const TestExtremeDefaultValues& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtremeDefaultValues)
}

void TestExtremeDefaultValues::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  escaped_bytes_ = const_cast< ::std::string*>(_default_escaped_bytes_);
  large_uint32_ = 4294967295u;
  large_uint64_ = GOOGLE_ULONGLONG(18446744073709551615);
  small_int32_ = -2147483647;
  small_int64_ = GOOGLE_LONGLONG(-9223372036854775807);
  really_small_int32_ = (~0x7fffffff);
  really_small_int64_ = GOOGLE_LONGLONG(~0x7fffffffffffffff);
  utf8_string_ = const_cast< ::std::string*>(_default_utf8_string_);
  zero_float_ = 0;
  one_float_ = 1;
  small_float_ = 1.5f;
  negative_one_float_ = -1;
  negative_float_ = -1.5f;
  large_float_ = 2e+08f;
  small_negative_float_ = -8e-28f;
  inf_double_ = ::google::protobuf::internal::Infinity();
  neg_inf_double_ = -::google::protobuf::internal::Infinity();
  nan_double_ = ::google::protobuf::internal::NaN();
  inf_float_ = static_cast<float>(::google::protobuf::internal::Infinity());
  neg_inf_float_ = static_cast<float>(-::google::protobuf::internal::Infinity());
  nan_float_ = static_cast<float>(::google::protobuf::internal::NaN());
  cpp_trigraph_ = const_cast< ::std::string*>(_default_cpp_trigraph_);
  string_with_zero_ = const_cast< ::std::string*>(_default_string_with_zero_);
  bytes_with_zero_ = const_cast< ::std::string*>(_default_bytes_with_zero_);
  string_piece_with_zero_ = const_cast< ::std::string*>(_default_string_piece_with_zero_);
  cord_with_zero_ = const_cast< ::std::string*>(_default_cord_with_zero_);
  replacement_string_ = const_cast< ::std::string*>(_default_replacement_string_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestExtremeDefaultValues::~TestExtremeDefaultValues() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtremeDefaultValues)
  SharedDtor();
}

void TestExtremeDefaultValues::SharedDtor() {
  if (escaped_bytes_ != _default_escaped_bytes_) {
    delete escaped_bytes_;
  }
  if (utf8_string_ != _default_utf8_string_) {
    delete utf8_string_;
  }
  if (cpp_trigraph_ != _default_cpp_trigraph_) {
    delete cpp_trigraph_;
  }
  if (string_with_zero_ != _default_string_with_zero_) {
    delete string_with_zero_;
  }
  if (bytes_with_zero_ != _default_bytes_with_zero_) {
    delete bytes_with_zero_;
  }
  if (string_piece_with_zero_ != _default_string_piece_with_zero_) {
    delete string_piece_with_zero_;
  }
  if (cord_with_zero_ != _default_cord_with_zero_) {
    delete cord_with_zero_;
  }
  if (replacement_string_ != _default_replacement_string_) {
    delete replacement_string_;
  }
  if (this != default_instance_) {
  }
}

void TestExtremeDefaultValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestExtremeDefaultValues::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestExtremeDefaultValues_descriptor_;
}

const TestExtremeDefaultValues& TestExtremeDefaultValues::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestExtremeDefaultValues* TestExtremeDefaultValues::default_instance_ = NULL;

TestExtremeDefaultValues* TestExtremeDefaultValues::New() const {
  return new TestExtremeDefaultValues;
}

void TestExtremeDefaultValues::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_escaped_bytes()) {
      if (escaped_bytes_ != _default_escaped_bytes_) {
        escaped_bytes_->assign(*_default_escaped_bytes_);
      }
    }
    large_uint32_ = 4294967295u;
    large_uint64_ = GOOGLE_ULONGLONG(18446744073709551615);
    small_int32_ = -2147483647;
    small_int64_ = GOOGLE_LONGLONG(-9223372036854775807);
    really_small_int32_ = (~0x7fffffff);
    really_small_int64_ = GOOGLE_LONGLONG(~0x7fffffffffffffff);
    if (has_utf8_string()) {
      if (utf8_string_ != _default_utf8_string_) {
        utf8_string_->assign(*_default_utf8_string_);
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    zero_float_ = 0;
    one_float_ = 1;
    small_float_ = 1.5f;
    negative_one_float_ = -1;
    negative_float_ = -1.5f;
    large_float_ = 2e+08f;
    small_negative_float_ = -8e-28f;
    inf_double_ = ::google::protobuf::internal::Infinity();
  }
  if (_has_bits_[16 / 32] & 16711680) {
    neg_inf_double_ = -::google::protobuf::internal::Infinity();
    nan_double_ = ::google::protobuf::internal::NaN();
    inf_float_ = static_cast<float>(::google::protobuf::internal::Infinity());
    neg_inf_float_ = static_cast<float>(-::google::protobuf::internal::Infinity());
    nan_float_ = static_cast<float>(::google::protobuf::internal::NaN());
    if (has_cpp_trigraph()) {
      if (cpp_trigraph_ != _default_cpp_trigraph_) {
        cpp_trigraph_->assign(*_default_cpp_trigraph_);
      }
    }
    if (has_string_with_zero()) {
      if (string_with_zero_ != _default_string_with_zero_) {
        string_with_zero_->assign(*_default_string_with_zero_);
      }
    }
    if (has_bytes_with_zero()) {
      if (bytes_with_zero_ != _default_bytes_with_zero_) {
        bytes_with_zero_->assign(*_default_bytes_with_zero_);
      }
    }
  }
  if (_has_bits_[24 / 32] & 117440512) {
    if (has_string_piece_with_zero()) {
      if (string_piece_with_zero_ != _default_string_piece_with_zero_) {
        string_piece_with_zero_->assign(*_default_string_piece_with_zero_);
      }
    }
    if (has_cord_with_zero()) {
      if (cord_with_zero_ != _default_cord_with_zero_) {
        cord_with_zero_->assign(*_default_cord_with_zero_);
      }
    }
    if (has_replacement_string()) {
      if (replacement_string_ != _default_replacement_string_) {
        replacement_string_->assign(*_default_replacement_string_);
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestExtremeDefaultValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestExtremeDefaultValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_escaped_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_large_uint32;
        break;
      }

      // optional uint32 large_uint32 = 2 [default = 4294967295];
      case 2: {
        if (tag == 16) {
         parse_large_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &large_uint32_)));
          set_has_large_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_large_uint64;
        break;
      }

      // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
      case 3: {
        if (tag == 24) {
         parse_large_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &large_uint64_)));
          set_has_large_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_small_int32;
        break;
      }

      // optional int32 small_int32 = 4 [default = -2147483647];
      case 4: {
        if (tag == 32) {
         parse_small_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &small_int32_)));
          set_has_small_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_small_int64;
        break;
      }

      // optional int64 small_int64 = 5 [default = -9223372036854775807];
      case 5: {
        if (tag == 40) {
         parse_small_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &small_int64_)));
          set_has_small_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_utf8_string;
        break;
      }

      // optional string utf8_string = 6 [default = "\341\210\264"];
      case 6: {
        if (tag == 50) {
         parse_utf8_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_utf8_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->utf8_string().data(), this->utf8_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "utf8_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_zero_float;
        break;
      }

      // optional float zero_float = 7 [default = 0];
      case 7: {
        if (tag == 61) {
         parse_zero_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zero_float_)));
          set_has_zero_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_one_float;
        break;
      }

      // optional float one_float = 8 [default = 1];
      case 8: {
        if (tag == 69) {
         parse_one_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &one_float_)));
          set_has_one_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_small_float;
        break;
      }

      // optional float small_float = 9 [default = 1.5];
      case 9: {
        if (tag == 77) {
         parse_small_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &small_float_)));
          set_has_small_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_negative_one_float;
        break;
      }

      // optional float negative_one_float = 10 [default = -1];
      case 10: {
        if (tag == 85) {
         parse_negative_one_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &negative_one_float_)));
          set_has_negative_one_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_negative_float;
        break;
      }

      // optional float negative_float = 11 [default = -1.5];
      case 11: {
        if (tag == 93) {
         parse_negative_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &negative_float_)));
          set_has_negative_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_large_float;
        break;
      }

      // optional float large_float = 12 [default = 2e+08];
      case 12: {
        if (tag == 101) {
         parse_large_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &large_float_)));
          set_has_large_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(109)) goto parse_small_negative_float;
        break;
      }

      // optional float small_negative_float = 13 [default = -8e-28];
      case 13: {
        if (tag == 109) {
         parse_small_negative_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &small_negative_float_)));
          set_has_small_negative_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_inf_double;
        break;
      }

      // optional double inf_double = 14 [default = inf];
      case 14: {
        if (tag == 113) {
         parse_inf_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &inf_double_)));
          set_has_inf_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_neg_inf_double;
        break;
      }

      // optional double neg_inf_double = 15 [default = -inf];
      case 15: {
        if (tag == 121) {
         parse_neg_inf_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &neg_inf_double_)));
          set_has_neg_inf_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_nan_double;
        break;
      }

      // optional double nan_double = 16 [default = nan];
      case 16: {
        if (tag == 129) {
         parse_nan_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nan_double_)));
          set_has_nan_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(141)) goto parse_inf_float;
        break;
      }

      // optional float inf_float = 17 [default = inf];
      case 17: {
        if (tag == 141) {
         parse_inf_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &inf_float_)));
          set_has_inf_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(149)) goto parse_neg_inf_float;
        break;
      }

      // optional float neg_inf_float = 18 [default = -inf];
      case 18: {
        if (tag == 149) {
         parse_neg_inf_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &neg_inf_float_)));
          set_has_neg_inf_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(157)) goto parse_nan_float;
        break;
      }

      // optional float nan_float = 19 [default = nan];
      case 19: {
        if (tag == 157) {
         parse_nan_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nan_float_)));
          set_has_nan_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_cpp_trigraph;
        break;
      }

      // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
      case 20: {
        if (tag == 162) {
         parse_cpp_trigraph:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpp_trigraph()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cpp_trigraph().data(), this->cpp_trigraph().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cpp_trigraph");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_really_small_int32;
        break;
      }

      // optional int32 really_small_int32 = 21 [default = -2147483648];
      case 21: {
        if (tag == 168) {
         parse_really_small_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &really_small_int32_)));
          set_has_really_small_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_really_small_int64;
        break;
      }

      // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
      case 22: {
        if (tag == 176) {
         parse_really_small_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &really_small_int64_)));
          set_has_really_small_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_string_with_zero;
        break;
      }

      // optional string string_with_zero = 23 [default = "hel\000lo"];
      case 23: {
        if (tag == 186) {
         parse_string_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_with_zero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_with_zero().data(), this->string_with_zero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_with_zero");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_bytes_with_zero;
        break;
      }

      // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
      case 24: {
        if (tag == 194) {
         parse_bytes_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_with_zero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_string_piece_with_zero;
        break;
      }

      // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
      case 25: {
        if (tag == 202) {
         parse_string_piece_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_piece_with_zero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_piece_with_zero().data(), this->string_piece_with_zero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_piece_with_zero");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_cord_with_zero;
        break;
      }

      // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
      case 26: {
        if (tag == 210) {
         parse_cord_with_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cord_with_zero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cord_with_zero().data(), this->cord_with_zero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cord_with_zero");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_replacement_string;
        break;
      }

      // optional string replacement_string = 27 [default = "${unknown}"];
      case 27: {
        if (tag == 218) {
         parse_replacement_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_replacement_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->replacement_string().data(), this->replacement_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "replacement_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestExtremeDefaultValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestExtremeDefaultValues)
  return false;
#undef DO_
}

void TestExtremeDefaultValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestExtremeDefaultValues)
  // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
  if (has_escaped_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->escaped_bytes(), output);
  }

  // optional uint32 large_uint32 = 2 [default = 4294967295];
  if (has_large_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->large_uint32(), output);
  }

  // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
  if (has_large_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->large_uint64(), output);
  }

  // optional int32 small_int32 = 4 [default = -2147483647];
  if (has_small_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->small_int32(), output);
  }

  // optional int64 small_int64 = 5 [default = -9223372036854775807];
  if (has_small_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->small_int64(), output);
  }

  // optional string utf8_string = 6 [default = "\341\210\264"];
  if (has_utf8_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->utf8_string().data(), this->utf8_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "utf8_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->utf8_string(), output);
  }

  // optional float zero_float = 7 [default = 0];
  if (has_zero_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->zero_float(), output);
  }

  // optional float one_float = 8 [default = 1];
  if (has_one_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->one_float(), output);
  }

  // optional float small_float = 9 [default = 1.5];
  if (has_small_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->small_float(), output);
  }

  // optional float negative_one_float = 10 [default = -1];
  if (has_negative_one_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->negative_one_float(), output);
  }

  // optional float negative_float = 11 [default = -1.5];
  if (has_negative_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->negative_float(), output);
  }

  // optional float large_float = 12 [default = 2e+08];
  if (has_large_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->large_float(), output);
  }

  // optional float small_negative_float = 13 [default = -8e-28];
  if (has_small_negative_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->small_negative_float(), output);
  }

  // optional double inf_double = 14 [default = inf];
  if (has_inf_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->inf_double(), output);
  }

  // optional double neg_inf_double = 15 [default = -inf];
  if (has_neg_inf_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->neg_inf_double(), output);
  }

  // optional double nan_double = 16 [default = nan];
  if (has_nan_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->nan_double(), output);
  }

  // optional float inf_float = 17 [default = inf];
  if (has_inf_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->inf_float(), output);
  }

  // optional float neg_inf_float = 18 [default = -inf];
  if (has_neg_inf_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->neg_inf_float(), output);
  }

  // optional float nan_float = 19 [default = nan];
  if (has_nan_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->nan_float(), output);
  }

  // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
  if (has_cpp_trigraph()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cpp_trigraph().data(), this->cpp_trigraph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cpp_trigraph");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->cpp_trigraph(), output);
  }

  // optional int32 really_small_int32 = 21 [default = -2147483648];
  if (has_really_small_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->really_small_int32(), output);
  }

  // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
  if (has_really_small_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->really_small_int64(), output);
  }

  // optional string string_with_zero = 23 [default = "hel\000lo"];
  if (has_string_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_with_zero().data(), this->string_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_with_zero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->string_with_zero(), output);
  }

  // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
  if (has_bytes_with_zero()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      24, this->bytes_with_zero(), output);
  }

  // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
  if (has_string_piece_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_piece_with_zero().data(), this->string_piece_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_piece_with_zero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->string_piece_with_zero(), output);
  }

  // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
  if (has_cord_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cord_with_zero().data(), this->cord_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cord_with_zero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->cord_with_zero(), output);
  }

  // optional string replacement_string = 27 [default = "${unknown}"];
  if (has_replacement_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replacement_string().data(), this->replacement_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "replacement_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->replacement_string(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestExtremeDefaultValues)
}

::google::protobuf::uint8* TestExtremeDefaultValues::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtremeDefaultValues)
  // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
  if (has_escaped_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->escaped_bytes(), target);
  }

  // optional uint32 large_uint32 = 2 [default = 4294967295];
  if (has_large_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->large_uint32(), target);
  }

  // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
  if (has_large_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->large_uint64(), target);
  }

  // optional int32 small_int32 = 4 [default = -2147483647];
  if (has_small_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->small_int32(), target);
  }

  // optional int64 small_int64 = 5 [default = -9223372036854775807];
  if (has_small_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->small_int64(), target);
  }

  // optional string utf8_string = 6 [default = "\341\210\264"];
  if (has_utf8_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->utf8_string().data(), this->utf8_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "utf8_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->utf8_string(), target);
  }

  // optional float zero_float = 7 [default = 0];
  if (has_zero_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->zero_float(), target);
  }

  // optional float one_float = 8 [default = 1];
  if (has_one_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->one_float(), target);
  }

  // optional float small_float = 9 [default = 1.5];
  if (has_small_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->small_float(), target);
  }

  // optional float negative_one_float = 10 [default = -1];
  if (has_negative_one_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->negative_one_float(), target);
  }

  // optional float negative_float = 11 [default = -1.5];
  if (has_negative_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->negative_float(), target);
  }

  // optional float large_float = 12 [default = 2e+08];
  if (has_large_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->large_float(), target);
  }

  // optional float small_negative_float = 13 [default = -8e-28];
  if (has_small_negative_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->small_negative_float(), target);
  }

  // optional double inf_double = 14 [default = inf];
  if (has_inf_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->inf_double(), target);
  }

  // optional double neg_inf_double = 15 [default = -inf];
  if (has_neg_inf_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->neg_inf_double(), target);
  }

  // optional double nan_double = 16 [default = nan];
  if (has_nan_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->nan_double(), target);
  }

  // optional float inf_float = 17 [default = inf];
  if (has_inf_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->inf_float(), target);
  }

  // optional float neg_inf_float = 18 [default = -inf];
  if (has_neg_inf_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->neg_inf_float(), target);
  }

  // optional float nan_float = 19 [default = nan];
  if (has_nan_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->nan_float(), target);
  }

  // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
  if (has_cpp_trigraph()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cpp_trigraph().data(), this->cpp_trigraph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cpp_trigraph");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->cpp_trigraph(), target);
  }

  // optional int32 really_small_int32 = 21 [default = -2147483648];
  if (has_really_small_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->really_small_int32(), target);
  }

  // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
  if (has_really_small_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->really_small_int64(), target);
  }

  // optional string string_with_zero = 23 [default = "hel\000lo"];
  if (has_string_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_with_zero().data(), this->string_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_with_zero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->string_with_zero(), target);
  }

  // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
  if (has_bytes_with_zero()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->bytes_with_zero(), target);
  }

  // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
  if (has_string_piece_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_piece_with_zero().data(), this->string_piece_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_piece_with_zero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->string_piece_with_zero(), target);
  }

  // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
  if (has_cord_with_zero()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cord_with_zero().data(), this->cord_with_zero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cord_with_zero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->cord_with_zero(), target);
  }

  // optional string replacement_string = 27 [default = "${unknown}"];
  if (has_replacement_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replacement_string().data(), this->replacement_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "replacement_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->replacement_string(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtremeDefaultValues)
  return target;
}

int TestExtremeDefaultValues::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
    if (has_escaped_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->escaped_bytes());
    }

    // optional uint32 large_uint32 = 2 [default = 4294967295];
    if (has_large_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->large_uint32());
    }

    // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
    if (has_large_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->large_uint64());
    }

    // optional int32 small_int32 = 4 [default = -2147483647];
    if (has_small_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->small_int32());
    }

    // optional int64 small_int64 = 5 [default = -9223372036854775807];
    if (has_small_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->small_int64());
    }

    // optional int32 really_small_int32 = 21 [default = -2147483648];
    if (has_really_small_int32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->really_small_int32());
    }

    // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
    if (has_really_small_int64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->really_small_int64());
    }

    // optional string utf8_string = 6 [default = "\341\210\264"];
    if (has_utf8_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->utf8_string());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional float zero_float = 7 [default = 0];
    if (has_zero_float()) {
      total_size += 1 + 4;
    }

    // optional float one_float = 8 [default = 1];
    if (has_one_float()) {
      total_size += 1 + 4;
    }

    // optional float small_float = 9 [default = 1.5];
    if (has_small_float()) {
      total_size += 1 + 4;
    }

    // optional float negative_one_float = 10 [default = -1];
    if (has_negative_one_float()) {
      total_size += 1 + 4;
    }

    // optional float negative_float = 11 [default = -1.5];
    if (has_negative_float()) {
      total_size += 1 + 4;
    }

    // optional float large_float = 12 [default = 2e+08];
    if (has_large_float()) {
      total_size += 1 + 4;
    }

    // optional float small_negative_float = 13 [default = -8e-28];
    if (has_small_negative_float()) {
      total_size += 1 + 4;
    }

    // optional double inf_double = 14 [default = inf];
    if (has_inf_double()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional double neg_inf_double = 15 [default = -inf];
    if (has_neg_inf_double()) {
      total_size += 1 + 8;
    }

    // optional double nan_double = 16 [default = nan];
    if (has_nan_double()) {
      total_size += 2 + 8;
    }

    // optional float inf_float = 17 [default = inf];
    if (has_inf_float()) {
      total_size += 2 + 4;
    }

    // optional float neg_inf_float = 18 [default = -inf];
    if (has_neg_inf_float()) {
      total_size += 2 + 4;
    }

    // optional float nan_float = 19 [default = nan];
    if (has_nan_float()) {
      total_size += 2 + 4;
    }

    // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
    if (has_cpp_trigraph()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cpp_trigraph());
    }

    // optional string string_with_zero = 23 [default = "hel\000lo"];
    if (has_string_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_with_zero());
    }

    // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
    if (has_bytes_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_with_zero());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
    if (has_string_piece_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_piece_with_zero());
    }

    // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
    if (has_cord_with_zero()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cord_with_zero());
    }

    // optional string replacement_string = 27 [default = "${unknown}"];
    if (has_replacement_string()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->replacement_string());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestExtremeDefaultValues::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestExtremeDefaultValues* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestExtremeDefaultValues*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestExtremeDefaultValues::MergeFrom(const TestExtremeDefaultValues& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escaped_bytes()) {
      set_escaped_bytes(from.escaped_bytes());
    }
    if (from.has_large_uint32()) {
      set_large_uint32(from.large_uint32());
    }
    if (from.has_large_uint64()) {
      set_large_uint64(from.large_uint64());
    }
    if (from.has_small_int32()) {
      set_small_int32(from.small_int32());
    }
    if (from.has_small_int64()) {
      set_small_int64(from.small_int64());
    }
    if (from.has_really_small_int32()) {
      set_really_small_int32(from.really_small_int32());
    }
    if (from.has_really_small_int64()) {
      set_really_small_int64(from.really_small_int64());
    }
    if (from.has_utf8_string()) {
      set_utf8_string(from.utf8_string());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_zero_float()) {
      set_zero_float(from.zero_float());
    }
    if (from.has_one_float()) {
      set_one_float(from.one_float());
    }
    if (from.has_small_float()) {
      set_small_float(from.small_float());
    }
    if (from.has_negative_one_float()) {
      set_negative_one_float(from.negative_one_float());
    }
    if (from.has_negative_float()) {
      set_negative_float(from.negative_float());
    }
    if (from.has_large_float()) {
      set_large_float(from.large_float());
    }
    if (from.has_small_negative_float()) {
      set_small_negative_float(from.small_negative_float());
    }
    if (from.has_inf_double()) {
      set_inf_double(from.inf_double());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_neg_inf_double()) {
      set_neg_inf_double(from.neg_inf_double());
    }
    if (from.has_nan_double()) {
      set_nan_double(from.nan_double());
    }
    if (from.has_inf_float()) {
      set_inf_float(from.inf_float());
    }
    if (from.has_neg_inf_float()) {
      set_neg_inf_float(from.neg_inf_float());
    }
    if (from.has_nan_float()) {
      set_nan_float(from.nan_float());
    }
    if (from.has_cpp_trigraph()) {
      set_cpp_trigraph(from.cpp_trigraph());
    }
    if (from.has_string_with_zero()) {
      set_string_with_zero(from.string_with_zero());
    }
    if (from.has_bytes_with_zero()) {
      set_bytes_with_zero(from.bytes_with_zero());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_string_piece_with_zero()) {
      set_string_piece_with_zero(from.string_piece_with_zero());
    }
    if (from.has_cord_with_zero()) {
      set_cord_with_zero(from.cord_with_zero());
    }
    if (from.has_replacement_string()) {
      set_replacement_string(from.replacement_string());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestExtremeDefaultValues::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestExtremeDefaultValues::CopyFrom(const TestExtremeDefaultValues& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestExtremeDefaultValues::IsInitialized() const {

  return true;
}

void TestExtremeDefaultValues::Swap(TestExtremeDefaultValues* other) {
  if (other != this) {
    std::swap(escaped_bytes_, other->escaped_bytes_);
    std::swap(large_uint32_, other->large_uint32_);
    std::swap(large_uint64_, other->large_uint64_);
    std::swap(small_int32_, other->small_int32_);
    std::swap(small_int64_, other->small_int64_);
    std::swap(really_small_int32_, other->really_small_int32_);
    std::swap(really_small_int64_, other->really_small_int64_);
    std::swap(utf8_string_, other->utf8_string_);
    std::swap(zero_float_, other->zero_float_);
    std::swap(one_float_, other->one_float_);
    std::swap(small_float_, other->small_float_);
    std::swap(negative_one_float_, other->negative_one_float_);
    std::swap(negative_float_, other->negative_float_);
    std::swap(large_float_, other->large_float_);
    std::swap(small_negative_float_, other->small_negative_float_);
    std::swap(inf_double_, other->inf_double_);
    std::swap(neg_inf_double_, other->neg_inf_double_);
    std::swap(nan_double_, other->nan_double_);
    std::swap(inf_float_, other->inf_float_);
    std::swap(neg_inf_float_, other->neg_inf_float_);
    std::swap(nan_float_, other->nan_float_);
    std::swap(cpp_trigraph_, other->cpp_trigraph_);
    std::swap(string_with_zero_, other->string_with_zero_);
    std::swap(bytes_with_zero_, other->bytes_with_zero_);
    std::swap(string_piece_with_zero_, other->string_piece_with_zero_);
    std::swap(cord_with_zero_, other->cord_with_zero_);
    std::swap(replacement_string_, other->replacement_string_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestExtremeDefaultValues::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestExtremeDefaultValues_descriptor_;
  metadata.reflection = TestExtremeDefaultValues_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SparseEnumMessage::kSparseEnumFieldNumber;
#endif  // !_MSC_VER

SparseEnumMessage::SparseEnumMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.SparseEnumMessage)
}

void SparseEnumMessage::InitAsDefaultInstance() {
}

SparseEnumMessage::SparseEnumMessage(const SparseEnumMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.SparseEnumMessage)
}

void SparseEnumMessage::SharedCtor() {
  _cached_size_ = 0;
  sparse_enum_ = 123;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SparseEnumMessage::~SparseEnumMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.SparseEnumMessage)
  SharedDtor();
}

void SparseEnumMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SparseEnumMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SparseEnumMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SparseEnumMessage_descriptor_;
}

const SparseEnumMessage& SparseEnumMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

SparseEnumMessage* SparseEnumMessage::default_instance_ = NULL;

SparseEnumMessage* SparseEnumMessage::New() const {
  return new SparseEnumMessage;
}

void SparseEnumMessage::Clear() {
  sparse_enum_ = 123;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SparseEnumMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.SparseEnumMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestSparseEnum_IsValid(value)) {
            set_sparse_enum(static_cast< ::protobuf_unittest::TestSparseEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.SparseEnumMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.SparseEnumMessage)
  return false;
#undef DO_
}

void SparseEnumMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.SparseEnumMessage)
  // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
  if (has_sparse_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sparse_enum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.SparseEnumMessage)
}

::google::protobuf::uint8* SparseEnumMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.SparseEnumMessage)
  // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
  if (has_sparse_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sparse_enum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.SparseEnumMessage)
  return target;
}

int SparseEnumMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
    if (has_sparse_enum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sparse_enum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SparseEnumMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SparseEnumMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SparseEnumMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SparseEnumMessage::MergeFrom(const SparseEnumMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sparse_enum()) {
      set_sparse_enum(from.sparse_enum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SparseEnumMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparseEnumMessage::CopyFrom(const SparseEnumMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparseEnumMessage::IsInitialized() const {

  return true;
}

void SparseEnumMessage::Swap(SparseEnumMessage* other) {
  if (other != this) {
    std::swap(sparse_enum_, other->sparse_enum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SparseEnumMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SparseEnumMessage_descriptor_;
  metadata.reflection = SparseEnumMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OneString::kDataFieldNumber;
#endif  // !_MSC_VER

OneString::OneString()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OneString)
}

void OneString::InitAsDefaultInstance() {
}

OneString::OneString(const OneString& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OneString)
}

void OneString::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OneString::~OneString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OneString)
  SharedDtor();
}

void OneString::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void OneString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneString::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneString_descriptor_;
}

const OneString& OneString::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

OneString* OneString::default_instance_ = NULL;

OneString* OneString::New() const {
  return new OneString;
}

void OneString::Clear() {
  if (has_data()) {
    if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      data_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OneString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OneString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OneString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OneString)
  return false;
#undef DO_
}

void OneString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OneString)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OneString)
}

::google::protobuf::uint8* OneString::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OneString)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OneString)
  return target;
}

int OneString::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneString::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OneString* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OneString*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OneString::MergeFrom(const OneString& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OneString::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneString::CopyFrom(const OneString& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneString::IsInitialized() const {

  return true;
}

void OneString::Swap(OneString* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OneString::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneString_descriptor_;
  metadata.reflection = OneString_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoreString::kDataFieldNumber;
#endif  // !_MSC_VER

MoreString::MoreString()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.MoreString)
}

void MoreString::InitAsDefaultInstance() {
}

MoreString::MoreString(const MoreString& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MoreString)
}

void MoreString::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoreString::~MoreString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MoreString)
  SharedDtor();
}

void MoreString::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MoreString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoreString::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoreString_descriptor_;
}

const MoreString& MoreString::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

MoreString* MoreString::default_instance_ = NULL;

MoreString* MoreString::New() const {
  return new MoreString;
}

void MoreString::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoreString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.MoreString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data(this->data_size() - 1).data(),
            this->data(this->data_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.MoreString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.MoreString)
  return false;
#undef DO_
}

void MoreString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.MoreString)
  // repeated string data = 1;
  for (int i = 0; i < this->data_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->data(i).data(), this->data(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "data");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.MoreString)
}

::google::protobuf::uint8* MoreString::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MoreString)
  // repeated string data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data(i).data(), this->data(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MoreString)
  return target;
}

int MoreString::ByteSize() const {
  int total_size = 0;

  // repeated string data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoreString::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoreString* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoreString*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoreString::MergeFrom(const MoreString& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoreString::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoreString::CopyFrom(const MoreString& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoreString::IsInitialized() const {

  return true;
}

void MoreString::Swap(MoreString* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoreString::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoreString_descriptor_;
  metadata.reflection = MoreString_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OneBytes::kDataFieldNumber;
#endif  // !_MSC_VER

OneBytes::OneBytes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OneBytes)
}

void OneBytes::InitAsDefaultInstance() {
}

OneBytes::OneBytes(const OneBytes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OneBytes)
}

void OneBytes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OneBytes::~OneBytes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OneBytes)
  SharedDtor();
}

void OneBytes::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void OneBytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneBytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneBytes_descriptor_;
}

const OneBytes& OneBytes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

OneBytes* OneBytes::default_instance_ = NULL;

OneBytes* OneBytes::New() const {
  return new OneBytes;
}

void OneBytes::Clear() {
  if (has_data()) {
    if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      data_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OneBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OneBytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OneBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OneBytes)
  return false;
#undef DO_
}

void OneBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OneBytes)
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OneBytes)
}

::google::protobuf::uint8* OneBytes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OneBytes)
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OneBytes)
  return target;
}

int OneBytes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneBytes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OneBytes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OneBytes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OneBytes::MergeFrom(const OneBytes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OneBytes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneBytes::CopyFrom(const OneBytes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneBytes::IsInitialized() const {

  return true;
}

void OneBytes::Swap(OneBytes* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OneBytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneBytes_descriptor_;
  metadata.reflection = OneBytes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoreBytes::kDataFieldNumber;
#endif  // !_MSC_VER

MoreBytes::MoreBytes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.MoreBytes)
}

void MoreBytes::InitAsDefaultInstance() {
}

MoreBytes::MoreBytes(const MoreBytes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MoreBytes)
}

void MoreBytes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoreBytes::~MoreBytes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MoreBytes)
  SharedDtor();
}

void MoreBytes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MoreBytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoreBytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoreBytes_descriptor_;
}

const MoreBytes& MoreBytes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

MoreBytes* MoreBytes::default_instance_ = NULL;

MoreBytes* MoreBytes::New() const {
  return new MoreBytes;
}

void MoreBytes::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoreBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.MoreBytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.MoreBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.MoreBytes)
  return false;
#undef DO_
}

void MoreBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.MoreBytes)
  // repeated bytes data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.MoreBytes)
}

::google::protobuf::uint8* MoreBytes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MoreBytes)
  // repeated bytes data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MoreBytes)
  return target;
}

int MoreBytes::ByteSize() const {
  int total_size = 0;

  // repeated bytes data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoreBytes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoreBytes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoreBytes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoreBytes::MergeFrom(const MoreBytes& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoreBytes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoreBytes::CopyFrom(const MoreBytes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoreBytes::IsInitialized() const {

  return true;
}

void MoreBytes::Swap(MoreBytes* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoreBytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoreBytes_descriptor_;
  metadata.reflection = MoreBytes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Int32Message::kDataFieldNumber;
#endif  // !_MSC_VER

Int32Message::Int32Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Int32Message)
}

void Int32Message::InitAsDefaultInstance() {
}

Int32Message::Int32Message(const Int32Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int32Message)
}

void Int32Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Int32Message::~Int32Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int32Message)
  SharedDtor();
}

void Int32Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Int32Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int32Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Int32Message_descriptor_;
}

const Int32Message& Int32Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

Int32Message* Int32Message::default_instance_ = NULL;

Int32Message* Int32Message::New() const {
  return new Int32Message;
}

void Int32Message::Clear() {
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Int32Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Int32Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Int32Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Int32Message)
  return false;
#undef DO_
}

void Int32Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Int32Message)
  // optional int32 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Int32Message)
}

::google::protobuf::uint8* Int32Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int32Message)
  // optional int32 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int32Message)
  return target;
}

int Int32Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int32Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Int32Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Int32Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Int32Message::MergeFrom(const Int32Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Int32Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int32Message::CopyFrom(const Int32Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int32Message::IsInitialized() const {

  return true;
}

void Int32Message::Swap(Int32Message* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Int32Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Int32Message_descriptor_;
  metadata.reflection = Int32Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Uint32Message::kDataFieldNumber;
#endif  // !_MSC_VER

Uint32Message::Uint32Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Uint32Message)
}

void Uint32Message::InitAsDefaultInstance() {
}

Uint32Message::Uint32Message(const Uint32Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Uint32Message)
}

void Uint32Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Uint32Message::~Uint32Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Uint32Message)
  SharedDtor();
}

void Uint32Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Uint32Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint32Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Uint32Message_descriptor_;
}

const Uint32Message& Uint32Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

Uint32Message* Uint32Message::default_instance_ = NULL;

Uint32Message* Uint32Message::New() const {
  return new Uint32Message;
}

void Uint32Message::Clear() {
  data_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Uint32Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Uint32Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Uint32Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Uint32Message)
  return false;
#undef DO_
}

void Uint32Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Uint32Message)
  // optional uint32 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Uint32Message)
}

::google::protobuf::uint8* Uint32Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Uint32Message)
  // optional uint32 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Uint32Message)
  return target;
}

int Uint32Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint32Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Uint32Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Uint32Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Uint32Message::MergeFrom(const Uint32Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Uint32Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32Message::CopyFrom(const Uint32Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint32Message::IsInitialized() const {

  return true;
}

void Uint32Message::Swap(Uint32Message* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Uint32Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Uint32Message_descriptor_;
  metadata.reflection = Uint32Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Int64Message::kDataFieldNumber;
#endif  // !_MSC_VER

Int64Message::Int64Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Int64Message)
}

void Int64Message::InitAsDefaultInstance() {
}

Int64Message::Int64Message(const Int64Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int64Message)
}

void Int64Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Int64Message::~Int64Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int64Message)
  SharedDtor();
}

void Int64Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Int64Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int64Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Int64Message_descriptor_;
}

const Int64Message& Int64Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

Int64Message* Int64Message::default_instance_ = NULL;

Int64Message* Int64Message::New() const {
  return new Int64Message;
}

void Int64Message::Clear() {
  data_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Int64Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Int64Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Int64Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Int64Message)
  return false;
#undef DO_
}

void Int64Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Int64Message)
  // optional int64 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Int64Message)
}

::google::protobuf::uint8* Int64Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int64Message)
  // optional int64 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int64Message)
  return target;
}

int Int64Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int64Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Int64Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Int64Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Int64Message::MergeFrom(const Int64Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Int64Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64Message::CopyFrom(const Int64Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64Message::IsInitialized() const {

  return true;
}

void Int64Message::Swap(Int64Message* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Int64Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Int64Message_descriptor_;
  metadata.reflection = Int64Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Uint64Message::kDataFieldNumber;
#endif  // !_MSC_VER

Uint64Message::Uint64Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.Uint64Message)
}

void Uint64Message::InitAsDefaultInstance() {
}

Uint64Message::Uint64Message(const Uint64Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Uint64Message)
}

void Uint64Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Uint64Message::~Uint64Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Uint64Message)
  SharedDtor();
}

void Uint64Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Uint64Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint64Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Uint64Message_descriptor_;
}

const Uint64Message& Uint64Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

Uint64Message* Uint64Message::default_instance_ = NULL;

Uint64Message* Uint64Message::New() const {
  return new Uint64Message;
}

void Uint64Message::Clear() {
  data_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Uint64Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.Uint64Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.Uint64Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.Uint64Message)
  return false;
#undef DO_
}

void Uint64Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.Uint64Message)
  // optional uint64 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.Uint64Message)
}

::google::protobuf::uint8* Uint64Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Uint64Message)
  // optional uint64 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Uint64Message)
  return target;
}

int Uint64Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint64Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Uint64Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Uint64Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Uint64Message::MergeFrom(const Uint64Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Uint64Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint64Message::CopyFrom(const Uint64Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint64Message::IsInitialized() const {

  return true;
}

void Uint64Message::Swap(Uint64Message* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Uint64Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Uint64Message_descriptor_;
  metadata.reflection = Uint64Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BoolMessage::kDataFieldNumber;
#endif  // !_MSC_VER

BoolMessage::BoolMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.BoolMessage)
}

void BoolMessage::InitAsDefaultInstance() {
}

BoolMessage::BoolMessage(const BoolMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BoolMessage)
}

void BoolMessage::SharedCtor() {
  _cached_size_ = 0;
  data_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BoolMessage::~BoolMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BoolMessage)
  SharedDtor();
}

void BoolMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BoolMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoolMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BoolMessage_descriptor_;
}

const BoolMessage& BoolMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

BoolMessage* BoolMessage::default_instance_ = NULL;

BoolMessage* BoolMessage::New() const {
  return new BoolMessage;
}

void BoolMessage::Clear() {
  data_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BoolMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.BoolMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.BoolMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.BoolMessage)
  return false;
#undef DO_
}

void BoolMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.BoolMessage)
  // optional bool data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.BoolMessage)
}

::google::protobuf::uint8* BoolMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BoolMessage)
  // optional bool data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BoolMessage)
  return target;
}

int BoolMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool data = 1;
    if (has_data()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoolMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BoolMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BoolMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BoolMessage::MergeFrom(const BoolMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BoolMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoolMessage::CopyFrom(const BoolMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolMessage::IsInitialized() const {

  return true;
}

void BoolMessage::Swap(BoolMessage* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BoolMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BoolMessage_descriptor_;
  metadata.reflection = BoolMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestOneof_FooGroup::kAFieldNumber;
const int TestOneof_FooGroup::kBFieldNumber;
#endif  // !_MSC_VER

TestOneof_FooGroup::TestOneof_FooGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof.FooGroup)
}

void TestOneof_FooGroup::InitAsDefaultInstance() {
}

TestOneof_FooGroup::TestOneof_FooGroup(const TestOneof_FooGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof.FooGroup)
}

void TestOneof_FooGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = 0;
  b_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestOneof_FooGroup::~TestOneof_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof.FooGroup)
  SharedDtor();
}

void TestOneof_FooGroup::SharedDtor() {
  if (b_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete b_;
  }
  if (this != default_instance_) {
  }
}

void TestOneof_FooGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof_FooGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof_FooGroup_descriptor_;
}

const TestOneof_FooGroup& TestOneof_FooGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestOneof_FooGroup* TestOneof_FooGroup::default_instance_ = NULL;

TestOneof_FooGroup* TestOneof_FooGroup::New() const {
  return new TestOneof_FooGroup;
}

void TestOneof_FooGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    a_ = 0;
    if (has_b()) {
      if (b_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        b_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestOneof_FooGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof.FooGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 5;
      case 5: {
        if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_b;
        break;
      }

      // optional string b = 6;
      case 6: {
        if (tag == 50) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof.FooGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof.FooGroup)
  return false;
#undef DO_
}

void TestOneof_FooGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->a(), output);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->b(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof.FooGroup)
}

::google::protobuf::uint8* TestOneof_FooGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->a(), target);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->b(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof.FooGroup)
  return target;
}

int TestOneof_FooGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 5;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional string b = 6;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->b());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof_FooGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestOneof_FooGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestOneof_FooGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestOneof_FooGroup::MergeFrom(const TestOneof_FooGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestOneof_FooGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof_FooGroup::CopyFrom(const TestOneof_FooGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOneof_FooGroup::IsInitialized() const {

  return true;
}

void TestOneof_FooGroup::Swap(TestOneof_FooGroup* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(b_, other->b_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestOneof_FooGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof_FooGroup_descriptor_;
  metadata.reflection = TestOneof_FooGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestOneof::kFooIntFieldNumber;
const int TestOneof::kFooStringFieldNumber;
const int TestOneof::kFooMessageFieldNumber;
const int TestOneof::kFoogroupFieldNumber;
#endif  // !_MSC_VER

TestOneof::TestOneof()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof)
}

void TestOneof::InitAsDefaultInstance() {
  TestOneof_default_oneof_instance_->foo_int_ = 0;
  TestOneof_default_oneof_instance_->foo_string_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestOneof_default_oneof_instance_->foo_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
  TestOneof_default_oneof_instance_->foogroup_ = const_cast< ::protobuf_unittest::TestOneof_FooGroup*>(&::protobuf_unittest::TestOneof_FooGroup::default_instance());
}

TestOneof::TestOneof(const TestOneof& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof)
}

void TestOneof::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_foo();
}

TestOneof::~TestOneof() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof)
  SharedDtor();
}

void TestOneof::SharedDtor() {
  if (has_foo()) {
    clear_foo();
  }
  if (this != default_instance_) {
  }
}

void TestOneof::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof_descriptor_;
}

const TestOneof& TestOneof::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestOneof* TestOneof::default_instance_ = NULL;

TestOneof* TestOneof::New() const {
  return new TestOneof;
}

void TestOneof::clear_foo() {
  switch(foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      delete foo_.foo_string_;
      break;
    }
    case kFooMessage: {
      delete foo_.foo_message_;
      break;
    }
    case kFoogroup: {
      delete foo_.foogroup_;
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOO_NOT_SET;
}


void TestOneof::Clear() {
  clear_foo();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestOneof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          clear_foo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_.foo_int_)));
          set_has_foo_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_foo_string;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
         parse_foo_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "foo_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_foo_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes foo_message = 3;
      case 3: {
        if (tag == 26) {
         parse_foo_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(35)) goto parse_foogroup;
        break;
      }

      // optional group FooGroup = 4 {
      case 4: {
        if (tag == 35) {
         parse_foogroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                4, input, mutable_foogroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof)
  return false;
#undef DO_
}

void TestOneof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->foo_string(), output);
  }

  // optional .protobuf_unittest.TestAllTypes foo_message = 3;
  if (has_foo_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->foo_message(), output);
  }

  // optional group FooGroup = 4 {
  if (has_foogroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      4, this->foogroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof)
}

::google::protobuf::uint8* TestOneof::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->foo_string(), target);
  }

  // optional .protobuf_unittest.TestAllTypes foo_message = 3;
  if (has_foo_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->foo_message(), target);
  }

  // optional group FooGroup = 4 {
  if (has_foogroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        4, this->foogroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof)
  return target;
}

int TestOneof::ByteSize() const {
  int total_size = 0;

  switch (foo_case()) {
    // optional int32 foo_int = 1;
    case kFooInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
      break;
    }
    // optional string foo_string = 2;
    case kFooString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
      break;
    }
    // optional .protobuf_unittest.TestAllTypes foo_message = 3;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foo_message());
      break;
    }
    // optional group FooGroup = 4 {
    case kFoogroup: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->foogroup());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestOneof* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestOneof*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestOneof::MergeFrom(const TestOneof& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.foo_case()) {
    case kFooInt: {
      set_foo_int(from.foo_int());
      break;
    }
    case kFooString: {
      set_foo_string(from.foo_string());
      break;
    }
    case kFooMessage: {
      mutable_foo_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.foo_message());
      break;
    }
    case kFoogroup: {
      mutable_foogroup()->::protobuf_unittest::TestOneof_FooGroup::MergeFrom(from.foogroup());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestOneof::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof::CopyFrom(const TestOneof& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOneof::IsInitialized() const {

  return true;
}

void TestOneof::Swap(TestOneof* other) {
  if (other != this) {
    std::swap(foo_, other->foo_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestOneof::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof_descriptor_;
  metadata.reflection = TestOneof_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestOneofBackwardsCompatible_FooGroup::kAFieldNumber;
const int TestOneofBackwardsCompatible_FooGroup::kBFieldNumber;
#endif  // !_MSC_VER

TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}

void TestOneofBackwardsCompatible_FooGroup::InitAsDefaultInstance() {
}

TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup(const TestOneofBackwardsCompatible_FooGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}

void TestOneofBackwardsCompatible_FooGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = 0;
  b_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestOneofBackwardsCompatible_FooGroup::~TestOneofBackwardsCompatible_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  SharedDtor();
}

void TestOneofBackwardsCompatible_FooGroup::SharedDtor() {
  if (b_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete b_;
  }
  if (this != default_instance_) {
  }
}

void TestOneofBackwardsCompatible_FooGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible_FooGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneofBackwardsCompatible_FooGroup_descriptor_;
}

const TestOneofBackwardsCompatible_FooGroup& TestOneofBackwardsCompatible_FooGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible_FooGroup::default_instance_ = NULL;

TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible_FooGroup::New() const {
  return new TestOneofBackwardsCompatible_FooGroup;
}

void TestOneofBackwardsCompatible_FooGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    a_ = 0;
    if (has_b()) {
      if (b_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        b_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestOneofBackwardsCompatible_FooGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 5;
      case 5: {
        if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_b;
        break;
      }

      // optional string b = 6;
      case 6: {
        if (tag == 50) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  return false;
#undef DO_
}

void TestOneofBackwardsCompatible_FooGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->a(), output);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->b(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}

::google::protobuf::uint8* TestOneofBackwardsCompatible_FooGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  // optional int32 a = 5;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->a(), target);
  }

  // optional string b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->b(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  return target;
}

int TestOneofBackwardsCompatible_FooGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 5;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional string b = 6;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->b());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneofBackwardsCompatible_FooGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestOneofBackwardsCompatible_FooGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestOneofBackwardsCompatible_FooGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestOneofBackwardsCompatible_FooGroup::MergeFrom(const TestOneofBackwardsCompatible_FooGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestOneofBackwardsCompatible_FooGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneofBackwardsCompatible_FooGroup::CopyFrom(const TestOneofBackwardsCompatible_FooGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOneofBackwardsCompatible_FooGroup::IsInitialized() const {

  return true;
}

void TestOneofBackwardsCompatible_FooGroup::Swap(TestOneofBackwardsCompatible_FooGroup* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(b_, other->b_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestOneofBackwardsCompatible_FooGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneofBackwardsCompatible_FooGroup_descriptor_;
  metadata.reflection = TestOneofBackwardsCompatible_FooGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestOneofBackwardsCompatible::kFooIntFieldNumber;
const int TestOneofBackwardsCompatible::kFooStringFieldNumber;
const int TestOneofBackwardsCompatible::kFooMessageFieldNumber;
const int TestOneofBackwardsCompatible::kFoogroupFieldNumber;
#endif  // !_MSC_VER

TestOneofBackwardsCompatible::TestOneofBackwardsCompatible()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneofBackwardsCompatible)
}

void TestOneofBackwardsCompatible::InitAsDefaultInstance() {
  foo_message_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
  foogroup_ = const_cast< ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup*>(&::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::default_instance());
}

TestOneofBackwardsCompatible::TestOneofBackwardsCompatible(const TestOneofBackwardsCompatible& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneofBackwardsCompatible)
}

void TestOneofBackwardsCompatible::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  foo_int_ = 0;
  foo_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  foo_message_ = NULL;
  foogroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestOneofBackwardsCompatible::~TestOneofBackwardsCompatible() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneofBackwardsCompatible)
  SharedDtor();
}

void TestOneofBackwardsCompatible::SharedDtor() {
  if (foo_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete foo_string_;
  }
  if (this != default_instance_) {
    delete foo_message_;
    delete foogroup_;
  }
}

void TestOneofBackwardsCompatible::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneofBackwardsCompatible::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneofBackwardsCompatible_descriptor_;
}

const TestOneofBackwardsCompatible& TestOneofBackwardsCompatible::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestOneofBackwardsCompatible* TestOneofBackwardsCompatible::default_instance_ = NULL;

TestOneofBackwardsCompatible* TestOneofBackwardsCompatible::New() const {
  return new TestOneofBackwardsCompatible;
}

void TestOneofBackwardsCompatible::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    foo_int_ = 0;
    if (has_foo_string()) {
      if (foo_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        foo_string_->clear();
      }
    }
    if (has_foo_message()) {
      if (foo_message_ != NULL) foo_message_->::protobuf_unittest::TestAllTypes::Clear();
    }
    if (has_foogroup()) {
      if (foogroup_ != NULL) foogroup_->::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestOneofBackwardsCompatible::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneofBackwardsCompatible)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_int_)));
          set_has_foo_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_foo_string;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
         parse_foo_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "foo_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_foo_message;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes foo_message = 3;
      case 3: {
        if (tag == 26) {
         parse_foo_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(35)) goto parse_foogroup;
        break;
      }

      // optional group FooGroup = 4 {
      case 4: {
        if (tag == 35) {
         parse_foogroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                4, input, mutable_foogroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneofBackwardsCompatible)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneofBackwardsCompatible)
  return false;
#undef DO_
}

void TestOneofBackwardsCompatible::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneofBackwardsCompatible)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->foo_string(), output);
  }

  // optional .protobuf_unittest.TestAllTypes foo_message = 3;
  if (has_foo_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->foo_message(), output);
  }

  // optional group FooGroup = 4 {
  if (has_foogroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      4, this->foogroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneofBackwardsCompatible)
}

::google::protobuf::uint8* TestOneofBackwardsCompatible::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneofBackwardsCompatible)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->foo_string(), target);
  }

  // optional .protobuf_unittest.TestAllTypes foo_message = 3;
  if (has_foo_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->foo_message(), target);
  }

  // optional group FooGroup = 4 {
  if (has_foogroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        4, this->foogroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneofBackwardsCompatible)
  return target;
}

int TestOneofBackwardsCompatible::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 foo_int = 1;
    if (has_foo_int()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
    }

    // optional string foo_string = 2;
    if (has_foo_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
    }

    // optional .protobuf_unittest.TestAllTypes foo_message = 3;
    if (has_foo_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foo_message());
    }

    // optional group FooGroup = 4 {
    if (has_foogroup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->foogroup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneofBackwardsCompatible::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestOneofBackwardsCompatible* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestOneofBackwardsCompatible*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestOneofBackwardsCompatible::MergeFrom(const TestOneofBackwardsCompatible& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_foo_int()) {
      set_foo_int(from.foo_int());
    }
    if (from.has_foo_string()) {
      set_foo_string(from.foo_string());
    }
    if (from.has_foo_message()) {
      mutable_foo_message()->::protobuf_unittest::TestAllTypes::MergeFrom(from.foo_message());
    }
    if (from.has_foogroup()) {
      mutable_foogroup()->::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::MergeFrom(from.foogroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestOneofBackwardsCompatible::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneofBackwardsCompatible::CopyFrom(const TestOneofBackwardsCompatible& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOneofBackwardsCompatible::IsInitialized() const {

  return true;
}

void TestOneofBackwardsCompatible::Swap(TestOneofBackwardsCompatible* other) {
  if (other != this) {
    std::swap(foo_int_, other->foo_int_);
    std::swap(foo_string_, other->foo_string_);
    std::swap(foo_message_, other->foo_message_);
    std::swap(foogroup_, other->foogroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestOneofBackwardsCompatible::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneofBackwardsCompatible_descriptor_;
  metadata.reflection = TestOneofBackwardsCompatible_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* TestOneof2_NestedEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_NestedEnum_descriptor_;
}
bool TestOneof2_NestedEnum_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TestOneof2_NestedEnum TestOneof2::FOO;
const TestOneof2_NestedEnum TestOneof2::BAR;
const TestOneof2_NestedEnum TestOneof2::BAZ;
const TestOneof2_NestedEnum TestOneof2::NestedEnum_MIN;
const TestOneof2_NestedEnum TestOneof2::NestedEnum_MAX;
const int TestOneof2::NestedEnum_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TestOneof2_FooGroup::kAFieldNumber;
const int TestOneof2_FooGroup::kBFieldNumber;
#endif  // !_MSC_VER

TestOneof2_FooGroup::TestOneof2_FooGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof2.FooGroup)
}

void TestOneof2_FooGroup::InitAsDefaultInstance() {
}

TestOneof2_FooGroup::TestOneof2_FooGroup(const TestOneof2_FooGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2.FooGroup)
}

void TestOneof2_FooGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = 0;
  b_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestOneof2_FooGroup::~TestOneof2_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2.FooGroup)
  SharedDtor();
}

void TestOneof2_FooGroup::SharedDtor() {
  if (b_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete b_;
  }
  if (this != default_instance_) {
  }
}

void TestOneof2_FooGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof2_FooGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_FooGroup_descriptor_;
}

const TestOneof2_FooGroup& TestOneof2_FooGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestOneof2_FooGroup* TestOneof2_FooGroup::default_instance_ = NULL;

TestOneof2_FooGroup* TestOneof2_FooGroup::New() const {
  return new TestOneof2_FooGroup;
}

void TestOneof2_FooGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    a_ = 0;
    if (has_b()) {
      if (b_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        b_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestOneof2_FooGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof2.FooGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 9;
      case 9: {
        if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_b;
        break;
      }

      // optional string b = 10;
      case 10: {
        if (tag == 82) {
         parse_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b().data(), this->b().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "b");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof2.FooGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof2.FooGroup)
  return false;
#undef DO_
}

void TestOneof2_FooGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof2.FooGroup)
  // optional int32 a = 9;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->a(), output);
  }

  // optional string b = 10;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->b(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof2.FooGroup)
}

::google::protobuf::uint8* TestOneof2_FooGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2.FooGroup)
  // optional int32 a = 9;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->a(), target);
  }

  // optional string b = 10;
  if (has_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b().data(), this->b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->b(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2.FooGroup)
  return target;
}

int TestOneof2_FooGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 a = 9;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional string b = 10;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->b());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof2_FooGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestOneof2_FooGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestOneof2_FooGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestOneof2_FooGroup::MergeFrom(const TestOneof2_FooGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestOneof2_FooGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof2_FooGroup::CopyFrom(const TestOneof2_FooGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOneof2_FooGroup::IsInitialized() const {

  return true;
}

void TestOneof2_FooGroup::Swap(TestOneof2_FooGroup* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(b_, other->b_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestOneof2_FooGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof2_FooGroup_descriptor_;
  metadata.reflection = TestOneof2_FooGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestOneof2_NestedMessage::kQuxIntFieldNumber;
const int TestOneof2_NestedMessage::kCorgeIntFieldNumber;
#endif  // !_MSC_VER

TestOneof2_NestedMessage::TestOneof2_NestedMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof2.NestedMessage)
}

void TestOneof2_NestedMessage::InitAsDefaultInstance() {
}

TestOneof2_NestedMessage::TestOneof2_NestedMessage(const TestOneof2_NestedMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2.NestedMessage)
}

void TestOneof2_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  qux_int_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestOneof2_NestedMessage::~TestOneof2_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2.NestedMessage)
  SharedDtor();
}

void TestOneof2_NestedMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestOneof2_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof2_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_NestedMessage_descriptor_;
}

const TestOneof2_NestedMessage& TestOneof2_NestedMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestOneof2_NestedMessage* TestOneof2_NestedMessage::default_instance_ = NULL;

TestOneof2_NestedMessage* TestOneof2_NestedMessage::New() const {
  return new TestOneof2_NestedMessage;
}

void TestOneof2_NestedMessage::Clear() {
  qux_int_ = GOOGLE_LONGLONG(0);
  corge_int_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestOneof2_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof2.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 qux_int = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qux_int_)));
          set_has_qux_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_corge_int;
        break;
      }

      // repeated int32 corge_int = 2;
      case 2: {
        if (tag == 16) {
         parse_corge_int:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_corge_int())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_corge_int())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_corge_int;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof2.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof2.NestedMessage)
  return false;
#undef DO_
}

void TestOneof2_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof2.NestedMessage)
  // optional int64 qux_int = 1;
  if (has_qux_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->qux_int(), output);
  }

  // repeated int32 corge_int = 2;
  for (int i = 0; i < this->corge_int_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->corge_int(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof2.NestedMessage)
}

::google::protobuf::uint8* TestOneof2_NestedMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2.NestedMessage)
  // optional int64 qux_int = 1;
  if (has_qux_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->qux_int(), target);
  }

  // repeated int32 corge_int = 2;
  for (int i = 0; i < this->corge_int_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->corge_int(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2.NestedMessage)
  return target;
}

int TestOneof2_NestedMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 qux_int = 1;
    if (has_qux_int()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->qux_int());
    }

  }
  // repeated int32 corge_int = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->corge_int_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->corge_int(i));
    }
    total_size += 1 * this->corge_int_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof2_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestOneof2_NestedMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestOneof2_NestedMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestOneof2_NestedMessage::MergeFrom(const TestOneof2_NestedMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  corge_int_.MergeFrom(from.corge_int_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qux_int()) {
      set_qux_int(from.qux_int());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestOneof2_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof2_NestedMessage::CopyFrom(const TestOneof2_NestedMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOneof2_NestedMessage::IsInitialized() const {

  return true;
}

void TestOneof2_NestedMessage::Swap(TestOneof2_NestedMessage* other) {
  if (other != this) {
    std::swap(qux_int_, other->qux_int_);
    corge_int_.Swap(&other->corge_int_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestOneof2_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof2_NestedMessage_descriptor_;
  metadata.reflection = TestOneof2_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

::std::string* TestOneof2::_default_bar_string_ = NULL;
::std::string* TestOneof2::_default_bar_cord_ = NULL;
::std::string* TestOneof2::_default_bar_string_piece_ = NULL;
::std::string* TestOneof2::_default_bar_bytes_ = NULL;
::std::string* TestOneof2::_default_baz_string_ = NULL;
#ifndef _MSC_VER
const int TestOneof2::kFooIntFieldNumber;
const int TestOneof2::kFooStringFieldNumber;
const int TestOneof2::kFooCordFieldNumber;
const int TestOneof2::kFooStringPieceFieldNumber;
const int TestOneof2::kFooBytesFieldNumber;
const int TestOneof2::kFooEnumFieldNumber;
const int TestOneof2::kFooMessageFieldNumber;
const int TestOneof2::kFoogroupFieldNumber;
const int TestOneof2::kFooLazyMessageFieldNumber;
const int TestOneof2::kBarIntFieldNumber;
const int TestOneof2::kBarStringFieldNumber;
const int TestOneof2::kBarCordFieldNumber;
const int TestOneof2::kBarStringPieceFieldNumber;
const int TestOneof2::kBarBytesFieldNumber;
const int TestOneof2::kBarEnumFieldNumber;
const int TestOneof2::kBazIntFieldNumber;
const int TestOneof2::kBazStringFieldNumber;
#endif  // !_MSC_VER

TestOneof2::TestOneof2()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestOneof2)
}

void TestOneof2::InitAsDefaultInstance() {
  TestOneof2_default_oneof_instance_->foo_int_ = 0;
  TestOneof2_default_oneof_instance_->foo_string_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestOneof2_default_oneof_instance_->foo_cord_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestOneof2_default_oneof_instance_->foo_string_piece_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestOneof2_default_oneof_instance_->foo_bytes_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestOneof2_default_oneof_instance_->foo_enum_ = 1;
  TestOneof2_default_oneof_instance_->foo_message_ = const_cast< ::protobuf_unittest::TestOneof2_NestedMessage*>(&::protobuf_unittest::TestOneof2_NestedMessage::default_instance());
  TestOneof2_default_oneof_instance_->foogroup_ = const_cast< ::protobuf_unittest::TestOneof2_FooGroup*>(&::protobuf_unittest::TestOneof2_FooGroup::default_instance());
  TestOneof2_default_oneof_instance_->foo_lazy_message_ = const_cast< ::protobuf_unittest::TestOneof2_NestedMessage*>(&::protobuf_unittest::TestOneof2_NestedMessage::default_instance());
  TestOneof2_default_oneof_instance_->bar_int_ = 5;
  TestOneof2_default_oneof_instance_->bar_string_ = TestOneof2::_default_bar_string_;
  TestOneof2_default_oneof_instance_->bar_cord_ = TestOneof2::_default_bar_cord_;
  TestOneof2_default_oneof_instance_->bar_string_piece_ = TestOneof2::_default_bar_string_piece_;
  TestOneof2_default_oneof_instance_->bar_bytes_ = TestOneof2::_default_bar_bytes_;
  TestOneof2_default_oneof_instance_->bar_enum_ = 2;
}

TestOneof2::TestOneof2(const TestOneof2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2)
}

void TestOneof2::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  baz_int_ = 0;
  baz_string_ = const_cast< ::std::string*>(_default_baz_string_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_foo();
  clear_has_bar();
}

TestOneof2::~TestOneof2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2)
  SharedDtor();
}

void TestOneof2::SharedDtor() {
  if (baz_string_ != _default_baz_string_) {
    delete baz_string_;
  }
  if (has_foo()) {
    clear_foo();
  }
  if (has_bar()) {
    clear_bar();
  }
  if (this != default_instance_) {
  }
}

void TestOneof2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOneof2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestOneof2_descriptor_;
}

const TestOneof2& TestOneof2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestOneof2* TestOneof2::default_instance_ = NULL;

TestOneof2* TestOneof2::New() const {
  return new TestOneof2;
}

void TestOneof2::clear_foo() {
  switch(foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      delete foo_.foo_string_;
      break;
    }
    case kFooCord: {
      delete foo_.foo_cord_;
      break;
    }
    case kFooStringPiece: {
      delete foo_.foo_string_piece_;
      break;
    }
    case kFooBytes: {
      delete foo_.foo_bytes_;
      break;
    }
    case kFooEnum: {
      // No need to clear
      break;
    }
    case kFooMessage: {
      delete foo_.foo_message_;
      break;
    }
    case kFoogroup: {
      delete foo_.foogroup_;
      break;
    }
    case kFooLazyMessage: {
      delete foo_.foo_lazy_message_;
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOO_NOT_SET;
}

void TestOneof2::clear_bar() {
  switch(bar_case()) {
    case kBarInt: {
      // No need to clear
      break;
    }
    case kBarString: {
      delete bar_.bar_string_;
      break;
    }
    case kBarCord: {
      delete bar_.bar_cord_;
      break;
    }
    case kBarStringPiece: {
      delete bar_.bar_string_piece_;
      break;
    }
    case kBarBytes: {
      delete bar_.bar_bytes_;
      break;
    }
    case kBarEnum: {
      // No need to clear
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = BAR_NOT_SET;
}


void TestOneof2::Clear() {
  baz_int_ = 0;
  if (has_baz_string()) {
    if (baz_string_ != _default_baz_string_) {
      baz_string_->assign(*_default_baz_string_);
    }
  }
  clear_foo();
  clear_bar();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestOneof2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestOneof2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          clear_foo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_.foo_int_)));
          set_has_foo_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_foo_string;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
         parse_foo_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "foo_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_foo_cord;
        break;
      }

      // optional string foo_cord = 3 [ctype = CORD];
      case 3: {
        if (tag == 26) {
         parse_foo_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_cord().data(), this->foo_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "foo_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_foo_string_piece;
        break;
      }

      // optional string foo_string_piece = 4 [ctype = STRING_PIECE];
      case 4: {
        if (tag == 34) {
         parse_foo_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string_piece().data(), this->foo_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "foo_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_foo_bytes;
        break;
      }

      // optional bytes foo_bytes = 5;
      case 5: {
        if (tag == 42) {
         parse_foo_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_foo_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_foo_enum;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
      case 6: {
        if (tag == 48) {
         parse_foo_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestOneof2_NestedEnum_IsValid(value)) {
            set_foo_enum(static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_foo_message;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
      case 7: {
        if (tag == 58) {
         parse_foo_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(67)) goto parse_foogroup;
        break;
      }

      // optional group FooGroup = 8 {
      case 8: {
        if (tag == 67) {
         parse_foogroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                8, input, mutable_foogroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_foo_lazy_message;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
      case 11: {
        if (tag == 90) {
         parse_foo_lazy_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_lazy_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_bar_int;
        break;
      }

      // optional int32 bar_int = 12 [default = 5];
      case 12: {
        if (tag == 96) {
         parse_bar_int:
          clear_bar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bar_.bar_int_)));
          set_has_bar_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_bar_string;
        break;
      }

      // optional string bar_string = 13 [default = "STRING"];
      case 13: {
        if (tag == 106) {
         parse_bar_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bar_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bar_string().data(), this->bar_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bar_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_bar_cord;
        break;
      }

      // optional string bar_cord = 14 [default = "CORD", ctype = CORD];
      case 14: {
        if (tag == 114) {
         parse_bar_cord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bar_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bar_cord().data(), this->bar_cord().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bar_cord");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_bar_string_piece;
        break;
      }

      // optional string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
      case 15: {
        if (tag == 122) {
         parse_bar_string_piece:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bar_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bar_string_piece().data(), this->bar_string_piece().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bar_string_piece");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_bar_bytes;
        break;
      }

      // optional bytes bar_bytes = 16 [default = "BYTES"];
      case 16: {
        if (tag == 130) {
         parse_bar_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bar_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_bar_enum;
        break;
      }

      // optional .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
      case 17: {
        if (tag == 136) {
         parse_bar_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestOneof2_NestedEnum_IsValid(value)) {
            set_bar_enum(static_cast< ::protobuf_unittest::TestOneof2_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(17, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_baz_int;
        break;
      }

      // optional int32 baz_int = 18;
      case 18: {
        if (tag == 144) {
         parse_baz_int:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baz_int_)));
          set_has_baz_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_baz_string;
        break;
      }

      // optional string baz_string = 19 [default = "BAZ"];
      case 19: {
        if (tag == 154) {
         parse_baz_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_baz_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->baz_string().data(), this->baz_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "baz_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestOneof2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestOneof2)
  return false;
#undef DO_
}

void TestOneof2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestOneof2)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->foo_string(), output);
  }

  // optional string foo_cord = 3 [ctype = CORD];
  if (has_foo_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_cord().data(), this->foo_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->foo_cord(), output);
  }

  // optional string foo_string_piece = 4 [ctype = STRING_PIECE];
  if (has_foo_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string_piece().data(), this->foo_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->foo_string_piece(), output);
  }

  // optional bytes foo_bytes = 5;
  if (has_foo_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->foo_bytes(), output);
  }

  // optional .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
  if (has_foo_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->foo_enum(), output);
  }

  // optional .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
  if (has_foo_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->foo_message(), output);
  }

  // optional group FooGroup = 8 {
  if (has_foogroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      8, this->foogroup(), output);
  }

  // optional .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
  if (has_foo_lazy_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->foo_lazy_message(), output);
  }

  // optional int32 bar_int = 12 [default = 5];
  if (has_bar_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->bar_int(), output);
  }

  // optional string bar_string = 13 [default = "STRING"];
  if (has_bar_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bar_string().data(), this->bar_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bar_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->bar_string(), output);
  }

  // optional string bar_cord = 14 [default = "CORD", ctype = CORD];
  if (has_bar_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bar_cord().data(), this->bar_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bar_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->bar_cord(), output);
  }

  // optional string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
  if (has_bar_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bar_string_piece().data(), this->bar_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bar_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->bar_string_piece(), output);
  }

  // optional bytes bar_bytes = 16 [default = "BYTES"];
  if (has_bar_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->bar_bytes(), output);
  }

  // optional .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
  if (has_bar_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->bar_enum(), output);
  }

  // optional int32 baz_int = 18;
  if (has_baz_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->baz_int(), output);
  }

  // optional string baz_string = 19 [default = "BAZ"];
  if (has_baz_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->baz_string().data(), this->baz_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "baz_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->baz_string(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestOneof2)
}

::google::protobuf::uint8* TestOneof2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->foo_string(), target);
  }

  // optional string foo_cord = 3 [ctype = CORD];
  if (has_foo_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_cord().data(), this->foo_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->foo_cord(), target);
  }

  // optional string foo_string_piece = 4 [ctype = STRING_PIECE];
  if (has_foo_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string_piece().data(), this->foo_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->foo_string_piece(), target);
  }

  // optional bytes foo_bytes = 5;
  if (has_foo_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->foo_bytes(), target);
  }

  // optional .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
  if (has_foo_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->foo_enum(), target);
  }

  // optional .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
  if (has_foo_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->foo_message(), target);
  }

  // optional group FooGroup = 8 {
  if (has_foogroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        8, this->foogroup(), target);
  }

  // optional .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
  if (has_foo_lazy_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->foo_lazy_message(), target);
  }

  // optional int32 bar_int = 12 [default = 5];
  if (has_bar_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->bar_int(), target);
  }

  // optional string bar_string = 13 [default = "STRING"];
  if (has_bar_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bar_string().data(), this->bar_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bar_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->bar_string(), target);
  }

  // optional string bar_cord = 14 [default = "CORD", ctype = CORD];
  if (has_bar_cord()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bar_cord().data(), this->bar_cord().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bar_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->bar_cord(), target);
  }

  // optional string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
  if (has_bar_string_piece()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bar_string_piece().data(), this->bar_string_piece().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bar_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->bar_string_piece(), target);
  }

  // optional bytes bar_bytes = 16 [default = "BYTES"];
  if (has_bar_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->bar_bytes(), target);
  }

  // optional .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
  if (has_bar_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->bar_enum(), target);
  }

  // optional int32 baz_int = 18;
  if (has_baz_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->baz_int(), target);
  }

  // optional string baz_string = 19 [default = "BAZ"];
  if (has_baz_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->baz_string().data(), this->baz_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "baz_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->baz_string(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2)
  return target;
}

int TestOneof2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[15 / 32] & (0xffu << (15 % 32))) {
    // optional int32 baz_int = 18;
    if (has_baz_int()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->baz_int());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string baz_string = 19 [default = "BAZ"];
    if (has_baz_string()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->baz_string());
    }

  }
  switch (foo_case()) {
    // optional int32 foo_int = 1;
    case kFooInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
      break;
    }
    // optional string foo_string = 2;
    case kFooString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
      break;
    }
    // optional string foo_cord = 3 [ctype = CORD];
    case kFooCord: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_cord());
      break;
    }
    // optional string foo_string_piece = 4 [ctype = STRING_PIECE];
    case kFooStringPiece: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string_piece());
      break;
    }
    // optional bytes foo_bytes = 5;
    case kFooBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->foo_bytes());
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
    case kFooEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->foo_enum());
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foo_message());
      break;
    }
    // optional group FooGroup = 8 {
    case kFoogroup: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->foogroup());
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
    case kFooLazyMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foo_lazy_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  switch (bar_case()) {
    // optional int32 bar_int = 12 [default = 5];
    case kBarInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bar_int());
      break;
    }
    // optional string bar_string = 13 [default = "STRING"];
    case kBarString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bar_string());
      break;
    }
    // optional string bar_cord = 14 [default = "CORD", ctype = CORD];
    case kBarCord: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bar_cord());
      break;
    }
    // optional string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
    case kBarStringPiece: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bar_string_piece());
      break;
    }
    // optional bytes bar_bytes = 16 [default = "BYTES"];
    case kBarBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bar_bytes());
      break;
    }
    // optional .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
    case kBarEnum: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bar_enum());
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOneof2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestOneof2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestOneof2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestOneof2::MergeFrom(const TestOneof2& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.foo_case()) {
    case kFooInt: {
      set_foo_int(from.foo_int());
      break;
    }
    case kFooString: {
      set_foo_string(from.foo_string());
      break;
    }
    case kFooCord: {
      set_foo_cord(from.foo_cord());
      break;
    }
    case kFooStringPiece: {
      set_foo_string_piece(from.foo_string_piece());
      break;
    }
    case kFooBytes: {
      set_foo_bytes(from.foo_bytes());
      break;
    }
    case kFooEnum: {
      set_foo_enum(from.foo_enum());
      break;
    }
    case kFooMessage: {
      mutable_foo_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(from.foo_message());
      break;
    }
    case kFoogroup: {
      mutable_foogroup()->::protobuf_unittest::TestOneof2_FooGroup::MergeFrom(from.foogroup());
      break;
    }
    case kFooLazyMessage: {
      mutable_foo_lazy_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(from.foo_lazy_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  switch (from.bar_case()) {
    case kBarInt: {
      set_bar_int(from.bar_int());
      break;
    }
    case kBarString: {
      set_bar_string(from.bar_string());
      break;
    }
    case kBarCord: {
      set_bar_cord(from.bar_cord());
      break;
    }
    case kBarStringPiece: {
      set_bar_string_piece(from.bar_string_piece());
      break;
    }
    case kBarBytes: {
      set_bar_bytes(from.bar_bytes());
      break;
    }
    case kBarEnum: {
      set_bar_enum(from.bar_enum());
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[15 / 32] & (0xffu << (15 % 32))) {
    if (from.has_baz_int()) {
      set_baz_int(from.baz_int());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_baz_string()) {
      set_baz_string(from.baz_string());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestOneof2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOneof2::CopyFrom(const TestOneof2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOneof2::IsInitialized() const {

  return true;
}

void TestOneof2::Swap(TestOneof2* other) {
  if (other != this) {
    std::swap(baz_int_, other->baz_int_);
    std::swap(baz_string_, other->baz_string_);
    std::swap(foo_, other->foo_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(bar_, other->bar_);
    std::swap(_oneof_case_[1], other->_oneof_case_[1]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestOneof2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestOneof2_descriptor_;
  metadata.reflection = TestOneof2_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestRequiredOneof_NestedMessage::kRequiredDoubleFieldNumber;
#endif  // !_MSC_VER

TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
}

void TestRequiredOneof_NestedMessage::InitAsDefaultInstance() {
}

TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage(const TestRequiredOneof_NestedMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
}

void TestRequiredOneof_NestedMessage::SharedCtor() {
  _cached_size_ = 0;
  required_double_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestRequiredOneof_NestedMessage::~TestRequiredOneof_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
  SharedDtor();
}

void TestRequiredOneof_NestedMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestRequiredOneof_NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequiredOneof_NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequiredOneof_NestedMessage_descriptor_;
}

const TestRequiredOneof_NestedMessage& TestRequiredOneof_NestedMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestRequiredOneof_NestedMessage* TestRequiredOneof_NestedMessage::default_instance_ = NULL;

TestRequiredOneof_NestedMessage* TestRequiredOneof_NestedMessage::New() const {
  return new TestRequiredOneof_NestedMessage;
}

void TestRequiredOneof_NestedMessage::Clear() {
  required_double_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestRequiredOneof_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double required_double = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &required_double_)));
          set_has_required_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequiredOneof.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequiredOneof.NestedMessage)
  return false;
#undef DO_
}

void TestRequiredOneof_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  // required double required_double = 1;
  if (has_required_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->required_double(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequiredOneof.NestedMessage)
}

::google::protobuf::uint8* TestRequiredOneof_NestedMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  // required double required_double = 1;
  if (has_required_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->required_double(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredOneof.NestedMessage)
  return target;
}

int TestRequiredOneof_NestedMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double required_double = 1;
    if (has_required_double()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequiredOneof_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestRequiredOneof_NestedMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestRequiredOneof_NestedMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestRequiredOneof_NestedMessage::MergeFrom(const TestRequiredOneof_NestedMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_required_double()) {
      set_required_double(from.required_double());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestRequiredOneof_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequiredOneof_NestedMessage::CopyFrom(const TestRequiredOneof_NestedMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequiredOneof_NestedMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestRequiredOneof_NestedMessage::Swap(TestRequiredOneof_NestedMessage* other) {
  if (other != this) {
    std::swap(required_double_, other->required_double_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestRequiredOneof_NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequiredOneof_NestedMessage_descriptor_;
  metadata.reflection = TestRequiredOneof_NestedMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestRequiredOneof::kFooIntFieldNumber;
const int TestRequiredOneof::kFooStringFieldNumber;
const int TestRequiredOneof::kFooMessageFieldNumber;
#endif  // !_MSC_VER

TestRequiredOneof::TestRequiredOneof()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRequiredOneof)
}

void TestRequiredOneof::InitAsDefaultInstance() {
  TestRequiredOneof_default_oneof_instance_->foo_int_ = 0;
  TestRequiredOneof_default_oneof_instance_->foo_string_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestRequiredOneof_default_oneof_instance_->foo_message_ = const_cast< ::protobuf_unittest::TestRequiredOneof_NestedMessage*>(&::protobuf_unittest::TestRequiredOneof_NestedMessage::default_instance());
}

TestRequiredOneof::TestRequiredOneof(const TestRequiredOneof& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredOneof)
}

void TestRequiredOneof::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_foo();
}

TestRequiredOneof::~TestRequiredOneof() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredOneof)
  SharedDtor();
}

void TestRequiredOneof::SharedDtor() {
  if (has_foo()) {
    clear_foo();
  }
  if (this != default_instance_) {
  }
}

void TestRequiredOneof::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequiredOneof::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequiredOneof_descriptor_;
}

const TestRequiredOneof& TestRequiredOneof::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestRequiredOneof* TestRequiredOneof::default_instance_ = NULL;

TestRequiredOneof* TestRequiredOneof::New() const {
  return new TestRequiredOneof;
}

void TestRequiredOneof::clear_foo() {
  switch(foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      delete foo_.foo_string_;
      break;
    }
    case kFooMessage: {
      delete foo_.foo_message_;
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOO_NOT_SET;
}


void TestRequiredOneof::Clear() {
  clear_foo();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestRequiredOneof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRequiredOneof)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 foo_int = 1;
      case 1: {
        if (tag == 8) {
          clear_foo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &foo_.foo_int_)));
          set_has_foo_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_foo_string;
        break;
      }

      // optional string foo_string = 2;
      case 2: {
        if (tag == 18) {
         parse_foo_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->foo_string().data(), this->foo_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "foo_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_foo_message;
        break;
      }

      // optional .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
      case 3: {
        if (tag == 26) {
         parse_foo_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRequiredOneof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRequiredOneof)
  return false;
#undef DO_
}

void TestRequiredOneof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRequiredOneof)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->foo_int(), output);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->foo_string(), output);
  }

  // optional .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
  if (has_foo_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->foo_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRequiredOneof)
}

::google::protobuf::uint8* TestRequiredOneof::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredOneof)
  // optional int32 foo_int = 1;
  if (has_foo_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->foo_int(), target);
  }

  // optional string foo_string = 2;
  if (has_foo_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->foo_string().data(), this->foo_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "foo_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->foo_string(), target);
  }

  // optional .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
  if (has_foo_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->foo_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredOneof)
  return target;
}

int TestRequiredOneof::ByteSize() const {
  int total_size = 0;

  switch (foo_case()) {
    // optional int32 foo_int = 1;
    case kFooInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->foo_int());
      break;
    }
    // optional string foo_string = 2;
    case kFooString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->foo_string());
      break;
    }
    // optional .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foo_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequiredOneof::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestRequiredOneof* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestRequiredOneof*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestRequiredOneof::MergeFrom(const TestRequiredOneof& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.foo_case()) {
    case kFooInt: {
      set_foo_int(from.foo_int());
      break;
    }
    case kFooString: {
      set_foo_string(from.foo_string());
      break;
    }
    case kFooMessage: {
      mutable_foo_message()->::protobuf_unittest::TestRequiredOneof_NestedMessage::MergeFrom(from.foo_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestRequiredOneof::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequiredOneof::CopyFrom(const TestRequiredOneof& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequiredOneof::IsInitialized() const {

  if (has_foo_message()) {
    if (!this->foo_message().IsInitialized()) return false;
  }
  return true;
}

void TestRequiredOneof::Swap(TestRequiredOneof* other) {
  if (other != this) {
    std::swap(foo_, other->foo_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestRequiredOneof::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequiredOneof_descriptor_;
  metadata.reflection = TestRequiredOneof_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestPackedTypes::kPackedInt32FieldNumber;
const int TestPackedTypes::kPackedInt64FieldNumber;
const int TestPackedTypes::kPackedUint32FieldNumber;
const int TestPackedTypes::kPackedUint64FieldNumber;
const int TestPackedTypes::kPackedSint32FieldNumber;
const int TestPackedTypes::kPackedSint64FieldNumber;
const int TestPackedTypes::kPackedFixed32FieldNumber;
const int TestPackedTypes::kPackedFixed64FieldNumber;
const int TestPackedTypes::kPackedSfixed32FieldNumber;
const int TestPackedTypes::kPackedSfixed64FieldNumber;
const int TestPackedTypes::kPackedFloatFieldNumber;
const int TestPackedTypes::kPackedDoubleFieldNumber;
const int TestPackedTypes::kPackedBoolFieldNumber;
const int TestPackedTypes::kPackedEnumFieldNumber;
#endif  // !_MSC_VER

TestPackedTypes::TestPackedTypes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestPackedTypes)
}

void TestPackedTypes::InitAsDefaultInstance() {
}

TestPackedTypes::TestPackedTypes(const TestPackedTypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedTypes)
}

void TestPackedTypes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestPackedTypes::~TestPackedTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedTypes)
  SharedDtor();
}

void TestPackedTypes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestPackedTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestPackedTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestPackedTypes_descriptor_;
}

const TestPackedTypes& TestPackedTypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestPackedTypes* TestPackedTypes::default_instance_ = NULL;

TestPackedTypes* TestPackedTypes::New() const {
  return new TestPackedTypes;
}

void TestPackedTypes::Clear() {
  packed_int32_.Clear();
  packed_int64_.Clear();
  packed_uint32_.Clear();
  packed_uint64_.Clear();
  packed_sint32_.Clear();
  packed_sint64_.Clear();
  packed_fixed32_.Clear();
  packed_fixed64_.Clear();
  packed_sfixed32_.Clear();
  packed_sfixed64_.Clear();
  packed_float_.Clear();
  packed_double_.Clear();
  packed_bool_.Clear();
  packed_enum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestPackedTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestPackedTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 packed_int32 = 90 [packed = true];
      case 90: {
        if (tag == 722) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_packed_int32())));
        } else if (tag == 720) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 722, input, this->mutable_packed_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_packed_int64;
        break;
      }

      // repeated int64 packed_int64 = 91 [packed = true];
      case 91: {
        if (tag == 730) {
         parse_packed_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_packed_int64())));
        } else if (tag == 728) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 730, input, this->mutable_packed_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_packed_uint32;
        break;
      }

      // repeated uint32 packed_uint32 = 92 [packed = true];
      case 92: {
        if (tag == 738) {
         parse_packed_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_packed_uint32())));
        } else if (tag == 736) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 738, input, this->mutable_packed_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(746)) goto parse_packed_uint64;
        break;
      }

      // repeated uint64 packed_uint64 = 93 [packed = true];
      case 93: {
        if (tag == 746) {
         parse_packed_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_packed_uint64())));
        } else if (tag == 744) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 746, input, this->mutable_packed_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(754)) goto parse_packed_sint32;
        break;
      }

      // repeated sint32 packed_sint32 = 94 [packed = true];
      case 94: {
        if (tag == 754) {
         parse_packed_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_packed_sint32())));
        } else if (tag == 752) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 754, input, this->mutable_packed_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(762)) goto parse_packed_sint64;
        break;
      }

      // repeated sint64 packed_sint64 = 95 [packed = true];
      case 95: {
        if (tag == 762) {
         parse_packed_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_packed_sint64())));
        } else if (tag == 760) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 762, input, this->mutable_packed_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(770)) goto parse_packed_fixed32;
        break;
      }

      // repeated fixed32 packed_fixed32 = 96 [packed = true];
      case 96: {
        if (tag == 770) {
         parse_packed_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_packed_fixed32())));
        } else if (tag == 773) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 770, input, this->mutable_packed_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(778)) goto parse_packed_fixed64;
        break;
      }

      // repeated fixed64 packed_fixed64 = 97 [packed = true];
      case 97: {
        if (tag == 778) {
         parse_packed_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_packed_fixed64())));
        } else if (tag == 777) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 778, input, this->mutable_packed_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(786)) goto parse_packed_sfixed32;
        break;
      }

      // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
      case 98: {
        if (tag == 786) {
         parse_packed_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_packed_sfixed32())));
        } else if (tag == 789) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 786, input, this->mutable_packed_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(794)) goto parse_packed_sfixed64;
        break;
      }

      // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
      case 99: {
        if (tag == 794) {
         parse_packed_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_packed_sfixed64())));
        } else if (tag == 793) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 794, input, this->mutable_packed_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_packed_float;
        break;
      }

      // repeated float packed_float = 100 [packed = true];
      case 100: {
        if (tag == 802) {
         parse_packed_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_packed_float())));
        } else if (tag == 805) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 802, input, this->mutable_packed_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_packed_double;
        break;
      }

      // repeated double packed_double = 101 [packed = true];
      case 101: {
        if (tag == 810) {
         parse_packed_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_packed_double())));
        } else if (tag == 809) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 810, input, this->mutable_packed_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_packed_bool;
        break;
      }

      // repeated bool packed_bool = 102 [packed = true];
      case 102: {
        if (tag == 818) {
         parse_packed_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_packed_bool())));
        } else if (tag == 816) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 818, input, this->mutable_packed_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_packed_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
      case 103: {
        if (tag == 826) {
         parse_packed_enum:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
              add_packed_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
            }
          }
          input->PopLimit(limit);
        } else if (tag == 824) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_packed_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(103, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestPackedTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestPackedTypes)
  return false;
#undef DO_
}

void TestPackedTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestPackedTypes)
  // repeated int32 packed_int32 = 90 [packed = true];
  if (this->packed_int32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(90, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_int32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->packed_int32(i), output);
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  if (this->packed_int64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(91, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_int64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->packed_int64(i), output);
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  if (this->packed_uint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(92, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_uint32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->packed_uint32(i), output);
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  if (this->packed_uint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(93, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_uint64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->packed_uint64(i), output);
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  if (this->packed_sint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(94, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sint32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->packed_sint32(i), output);
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  if (this->packed_sint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(95, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sint64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->packed_sint64(i), output);
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  if (this->packed_fixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(96, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_fixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32NoTag(
      this->packed_fixed32(i), output);
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  if (this->packed_fixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(97, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_fixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64NoTag(
      this->packed_fixed64(i), output);
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  if (this->packed_sfixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(98, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sfixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32NoTag(
      this->packed_sfixed32(i), output);
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  if (this->packed_sfixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(99, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_sfixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64NoTag(
      this->packed_sfixed64(i), output);
  }

  // repeated float packed_float = 100 [packed = true];
  if (this->packed_float_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(100, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_float_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->packed_float(i), output);
  }

  // repeated double packed_double = 101 [packed = true];
  if (this->packed_double_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(101, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_double_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->packed_double(i), output);
  }

  // repeated bool packed_bool = 102 [packed = true];
  if (this->packed_bool_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(102, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_bool_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->packed_bool(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  if (this->packed_enum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      103,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_packed_enum_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->packed_enum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestPackedTypes)
}

::google::protobuf::uint8* TestPackedTypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedTypes)
  // repeated int32 packed_int32 = 90 [packed = true];
  if (this->packed_int32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      90,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_int32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->packed_int32(i), target);
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  if (this->packed_int64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      91,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_int64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->packed_int64(i), target);
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  if (this->packed_uint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      92,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_uint32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->packed_uint32(i), target);
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  if (this->packed_uint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      93,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_uint64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->packed_uint64(i), target);
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  if (this->packed_sint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      94,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sint32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->packed_sint32(i), target);
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  if (this->packed_sint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      95,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sint64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->packed_sint64(i), target);
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  if (this->packed_fixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      96,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_fixed32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->packed_fixed32(i), target);
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  if (this->packed_fixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      97,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_fixed64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->packed_fixed64(i), target);
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  if (this->packed_sfixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      98,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sfixed32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->packed_sfixed32(i), target);
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  if (this->packed_sfixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      99,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_sfixed64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->packed_sfixed64(i), target);
  }

  // repeated float packed_float = 100 [packed = true];
  if (this->packed_float_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      100,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_float_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->packed_float(i), target);
  }

  // repeated double packed_double = 101 [packed = true];
  if (this->packed_double_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      101,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_double_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->packed_double(i), target);
  }

  // repeated bool packed_bool = 102 [packed = true];
  if (this->packed_bool_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      102,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_bool_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_bool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->packed_bool(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  if (this->packed_enum_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      103,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _packed_enum_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->packed_enum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedTypes)
  return target;
}

int TestPackedTypes::ByteSize() const {
  int total_size = 0;

  // repeated int32 packed_int32 = 90 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_int32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->packed_int32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_int32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_int64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->packed_int64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_int64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_uint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->packed_uint32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_uint32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_uint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->packed_uint64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_uint64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_sint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->packed_sint32(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sint32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_sint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->packed_sint64(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sint64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->packed_fixed32_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_fixed32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->packed_fixed64_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_fixed64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->packed_sfixed32_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sfixed32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->packed_sfixed64_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_sfixed64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float packed_float = 100 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->packed_float_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_float_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double packed_double = 101 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->packed_double_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_double_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool packed_bool = 102 [packed = true];
  {
    int data_size = 0;
    data_size = 1 * this->packed_bool_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_bool_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_enum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->packed_enum(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_enum_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPackedTypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestPackedTypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestPackedTypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestPackedTypes::MergeFrom(const TestPackedTypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  packed_int32_.MergeFrom(from.packed_int32_);
  packed_int64_.MergeFrom(from.packed_int64_);
  packed_uint32_.MergeFrom(from.packed_uint32_);
  packed_uint64_.MergeFrom(from.packed_uint64_);
  packed_sint32_.MergeFrom(from.packed_sint32_);
  packed_sint64_.MergeFrom(from.packed_sint64_);
  packed_fixed32_.MergeFrom(from.packed_fixed32_);
  packed_fixed64_.MergeFrom(from.packed_fixed64_);
  packed_sfixed32_.MergeFrom(from.packed_sfixed32_);
  packed_sfixed64_.MergeFrom(from.packed_sfixed64_);
  packed_float_.MergeFrom(from.packed_float_);
  packed_double_.MergeFrom(from.packed_double_);
  packed_bool_.MergeFrom(from.packed_bool_);
  packed_enum_.MergeFrom(from.packed_enum_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestPackedTypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestPackedTypes::CopyFrom(const TestPackedTypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestPackedTypes::IsInitialized() const {

  return true;
}

void TestPackedTypes::Swap(TestPackedTypes* other) {
  if (other != this) {
    packed_int32_.Swap(&other->packed_int32_);
    packed_int64_.Swap(&other->packed_int64_);
    packed_uint32_.Swap(&other->packed_uint32_);
    packed_uint64_.Swap(&other->packed_uint64_);
    packed_sint32_.Swap(&other->packed_sint32_);
    packed_sint64_.Swap(&other->packed_sint64_);
    packed_fixed32_.Swap(&other->packed_fixed32_);
    packed_fixed64_.Swap(&other->packed_fixed64_);
    packed_sfixed32_.Swap(&other->packed_sfixed32_);
    packed_sfixed64_.Swap(&other->packed_sfixed64_);
    packed_float_.Swap(&other->packed_float_);
    packed_double_.Swap(&other->packed_double_);
    packed_bool_.Swap(&other->packed_bool_);
    packed_enum_.Swap(&other->packed_enum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestPackedTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestPackedTypes_descriptor_;
  metadata.reflection = TestPackedTypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestUnpackedTypes::kUnpackedInt32FieldNumber;
const int TestUnpackedTypes::kUnpackedInt64FieldNumber;
const int TestUnpackedTypes::kUnpackedUint32FieldNumber;
const int TestUnpackedTypes::kUnpackedUint64FieldNumber;
const int TestUnpackedTypes::kUnpackedSint32FieldNumber;
const int TestUnpackedTypes::kUnpackedSint64FieldNumber;
const int TestUnpackedTypes::kUnpackedFixed32FieldNumber;
const int TestUnpackedTypes::kUnpackedFixed64FieldNumber;
const int TestUnpackedTypes::kUnpackedSfixed32FieldNumber;
const int TestUnpackedTypes::kUnpackedSfixed64FieldNumber;
const int TestUnpackedTypes::kUnpackedFloatFieldNumber;
const int TestUnpackedTypes::kUnpackedDoubleFieldNumber;
const int TestUnpackedTypes::kUnpackedBoolFieldNumber;
const int TestUnpackedTypes::kUnpackedEnumFieldNumber;
#endif  // !_MSC_VER

TestUnpackedTypes::TestUnpackedTypes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestUnpackedTypes)
}

void TestUnpackedTypes::InitAsDefaultInstance() {
}

TestUnpackedTypes::TestUnpackedTypes(const TestUnpackedTypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestUnpackedTypes)
}

void TestUnpackedTypes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestUnpackedTypes::~TestUnpackedTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestUnpackedTypes)
  SharedDtor();
}

void TestUnpackedTypes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestUnpackedTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestUnpackedTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestUnpackedTypes_descriptor_;
}

const TestUnpackedTypes& TestUnpackedTypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestUnpackedTypes* TestUnpackedTypes::default_instance_ = NULL;

TestUnpackedTypes* TestUnpackedTypes::New() const {
  return new TestUnpackedTypes;
}

void TestUnpackedTypes::Clear() {
  unpacked_int32_.Clear();
  unpacked_int64_.Clear();
  unpacked_uint32_.Clear();
  unpacked_uint64_.Clear();
  unpacked_sint32_.Clear();
  unpacked_sint64_.Clear();
  unpacked_fixed32_.Clear();
  unpacked_fixed64_.Clear();
  unpacked_sfixed32_.Clear();
  unpacked_sfixed64_.Clear();
  unpacked_float_.Clear();
  unpacked_double_.Clear();
  unpacked_bool_.Clear();
  unpacked_enum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestUnpackedTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestUnpackedTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 unpacked_int32 = 90 [packed = false];
      case 90: {
        if (tag == 720) {
         parse_unpacked_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 720, input, this->mutable_unpacked_int32())));
        } else if (tag == 722) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unpacked_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_unpacked_int32;
        if (input->ExpectTag(728)) goto parse_unpacked_int64;
        break;
      }

      // repeated int64 unpacked_int64 = 91 [packed = false];
      case 91: {
        if (tag == 728) {
         parse_unpacked_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 728, input, this->mutable_unpacked_int64())));
        } else if (tag == 730) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_unpacked_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(728)) goto parse_unpacked_int64;
        if (input->ExpectTag(736)) goto parse_unpacked_uint32;
        break;
      }

      // repeated uint32 unpacked_uint32 = 92 [packed = false];
      case 92: {
        if (tag == 736) {
         parse_unpacked_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 736, input, this->mutable_unpacked_uint32())));
        } else if (tag == 738) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unpacked_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(736)) goto parse_unpacked_uint32;
        if (input->ExpectTag(744)) goto parse_unpacked_uint64;
        break;
      }

      // repeated uint64 unpacked_uint64 = 93 [packed = false];
      case 93: {
        if (tag == 744) {
         parse_unpacked_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 744, input, this->mutable_unpacked_uint64())));
        } else if (tag == 746) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_unpacked_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(744)) goto parse_unpacked_uint64;
        if (input->ExpectTag(752)) goto parse_unpacked_sint32;
        break;
      }

      // repeated sint32 unpacked_sint32 = 94 [packed = false];
      case 94: {
        if (tag == 752) {
         parse_unpacked_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 752, input, this->mutable_unpacked_sint32())));
        } else if (tag == 754) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_unpacked_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(752)) goto parse_unpacked_sint32;
        if (input->ExpectTag(760)) goto parse_unpacked_sint64;
        break;
      }

      // repeated sint64 unpacked_sint64 = 95 [packed = false];
      case 95: {
        if (tag == 760) {
         parse_unpacked_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 760, input, this->mutable_unpacked_sint64())));
        } else if (tag == 762) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_unpacked_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(760)) goto parse_unpacked_sint64;
        if (input->ExpectTag(773)) goto parse_unpacked_fixed32;
        break;
      }

      // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
      case 96: {
        if (tag == 773) {
         parse_unpacked_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 773, input, this->mutable_unpacked_fixed32())));
        } else if (tag == 770) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_unpacked_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(773)) goto parse_unpacked_fixed32;
        if (input->ExpectTag(777)) goto parse_unpacked_fixed64;
        break;
      }

      // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
      case 97: {
        if (tag == 777) {
         parse_unpacked_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 777, input, this->mutable_unpacked_fixed64())));
        } else if (tag == 778) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_unpacked_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(777)) goto parse_unpacked_fixed64;
        if (input->ExpectTag(789)) goto parse_unpacked_sfixed32;
        break;
      }

      // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
      case 98: {
        if (tag == 789) {
         parse_unpacked_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 789, input, this->mutable_unpacked_sfixed32())));
        } else if (tag == 786) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_unpacked_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(789)) goto parse_unpacked_sfixed32;
        if (input->ExpectTag(793)) goto parse_unpacked_sfixed64;
        break;
      }

      // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
      case 99: {
        if (tag == 793) {
         parse_unpacked_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 793, input, this->mutable_unpacked_sfixed64())));
        } else if (tag == 794) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_unpacked_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(793)) goto parse_unpacked_sfixed64;
        if (input->ExpectTag(805)) goto parse_unpacked_float;
        break;
      }

      // repeated float unpacked_float = 100 [packed = false];
      case 100: {
        if (tag == 805) {
         parse_unpacked_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 805, input, this->mutable_unpacked_float())));
        } else if (tag == 802) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_unpacked_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(805)) goto parse_unpacked_float;
        if (input->ExpectTag(809)) goto parse_unpacked_double;
        break;
      }

      // repeated double unpacked_double = 101 [packed = false];
      case 101: {
        if (tag == 809) {
         parse_unpacked_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 809, input, this->mutable_unpacked_double())));
        } else if (tag == 810) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_unpacked_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(809)) goto parse_unpacked_double;
        if (input->ExpectTag(816)) goto parse_unpacked_bool;
        break;
      }

      // repeated bool unpacked_bool = 102 [packed = false];
      case 102: {
        if (tag == 816) {
         parse_unpacked_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 816, input, this->mutable_unpacked_bool())));
        } else if (tag == 818) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_unpacked_bool())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(816)) goto parse_unpacked_bool;
        if (input->ExpectTag(824)) goto parse_unpacked_enum;
        break;
      }

      // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
      case 103: {
        if (tag == 824) {
         parse_unpacked_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            add_unpacked_enum(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(103, value);
          }
        } else if (tag == 826) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::protobuf_unittest::ForeignEnum_IsValid,
                 this->mutable_unpacked_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(824)) goto parse_unpacked_enum;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestUnpackedTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestUnpackedTypes)
  return false;
#undef DO_
}

void TestUnpackedTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestUnpackedTypes)
  // repeated int32 unpacked_int32 = 90 [packed = false];
  for (int i = 0; i < this->unpacked_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      90, this->unpacked_int32(i), output);
  }

  // repeated int64 unpacked_int64 = 91 [packed = false];
  for (int i = 0; i < this->unpacked_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      91, this->unpacked_int64(i), output);
  }

  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  for (int i = 0; i < this->unpacked_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      92, this->unpacked_uint32(i), output);
  }

  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  for (int i = 0; i < this->unpacked_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      93, this->unpacked_uint64(i), output);
  }

  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  for (int i = 0; i < this->unpacked_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      94, this->unpacked_sint32(i), output);
  }

  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  for (int i = 0; i < this->unpacked_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      95, this->unpacked_sint64(i), output);
  }

  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  for (int i = 0; i < this->unpacked_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      96, this->unpacked_fixed32(i), output);
  }

  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  for (int i = 0; i < this->unpacked_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      97, this->unpacked_fixed64(i), output);
  }

  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      98, this->unpacked_sfixed32(i), output);
  }

  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      99, this->unpacked_sfixed64(i), output);
  }

  // repeated float unpacked_float = 100 [packed = false];
  for (int i = 0; i < this->unpacked_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      100, this->unpacked_float(i), output);
  }

  // repeated double unpacked_double = 101 [packed = false];
  for (int i = 0; i < this->unpacked_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      101, this->unpacked_double(i), output);
  }

  // repeated bool unpacked_bool = 102 [packed = false];
  for (int i = 0; i < this->unpacked_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      102, this->unpacked_bool(i), output);
  }

  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  for (int i = 0; i < this->unpacked_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      103, this->unpacked_enum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestUnpackedTypes)
}

::google::protobuf::uint8* TestUnpackedTypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestUnpackedTypes)
  // repeated int32 unpacked_int32 = 90 [packed = false];
  for (int i = 0; i < this->unpacked_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(90, this->unpacked_int32(i), target);
  }

  // repeated int64 unpacked_int64 = 91 [packed = false];
  for (int i = 0; i < this->unpacked_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(91, this->unpacked_int64(i), target);
  }

  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  for (int i = 0; i < this->unpacked_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(92, this->unpacked_uint32(i), target);
  }

  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  for (int i = 0; i < this->unpacked_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(93, this->unpacked_uint64(i), target);
  }

  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  for (int i = 0; i < this->unpacked_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(94, this->unpacked_sint32(i), target);
  }

  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  for (int i = 0; i < this->unpacked_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(95, this->unpacked_sint64(i), target);
  }

  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  for (int i = 0; i < this->unpacked_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(96, this->unpacked_fixed32(i), target);
  }

  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  for (int i = 0; i < this->unpacked_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(97, this->unpacked_fixed64(i), target);
  }

  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(98, this->unpacked_sfixed32(i), target);
  }

  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  for (int i = 0; i < this->unpacked_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64ToArray(99, this->unpacked_sfixed64(i), target);
  }

  // repeated float unpacked_float = 100 [packed = false];
  for (int i = 0; i < this->unpacked_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(100, this->unpacked_float(i), target);
  }

  // repeated double unpacked_double = 101 [packed = false];
  for (int i = 0; i < this->unpacked_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(101, this->unpacked_double(i), target);
  }

  // repeated bool unpacked_bool = 102 [packed = false];
  for (int i = 0; i < this->unpacked_bool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(102, this->unpacked_bool(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  for (int i = 0; i < this->unpacked_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      103, this->unpacked_enum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestUnpackedTypes)
  return target;
}

int TestUnpackedTypes::ByteSize() const {
  int total_size = 0;

  // repeated int32 unpacked_int32 = 90 [packed = false];
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_int32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unpacked_int32(i));
    }
    total_size += 2 * this->unpacked_int32_size() + data_size;
  }

  // repeated int64 unpacked_int64 = 91 [packed = false];
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_int64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->unpacked_int64(i));
    }
    total_size += 2 * this->unpacked_int64_size() + data_size;
  }

  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_uint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->unpacked_uint32(i));
    }
    total_size += 2 * this->unpacked_uint32_size() + data_size;
  }

  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_uint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->unpacked_uint64(i));
    }
    total_size += 2 * this->unpacked_uint64_size() + data_size;
  }

  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_sint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->unpacked_sint32(i));
    }
    total_size += 2 * this->unpacked_sint32_size() + data_size;
  }

  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_sint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->unpacked_sint64(i));
    }
    total_size += 2 * this->unpacked_sint64_size() + data_size;
  }

  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  {
    int data_size = 0;
    data_size = 4 * this->unpacked_fixed32_size();
    total_size += 2 * this->unpacked_fixed32_size() + data_size;
  }

  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  {
    int data_size = 0;
    data_size = 8 * this->unpacked_fixed64_size();
    total_size += 2 * this->unpacked_fixed64_size() + data_size;
  }

  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  {
    int data_size = 0;
    data_size = 4 * this->unpacked_sfixed32_size();
    total_size += 2 * this->unpacked_sfixed32_size() + data_size;
  }

  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  {
    int data_size = 0;
    data_size = 8 * this->unpacked_sfixed64_size();
    total_size += 2 * this->unpacked_sfixed64_size() + data_size;
  }

  // repeated float unpacked_float = 100 [packed = false];
  {
    int data_size = 0;
    data_size = 4 * this->unpacked_float_size();
    total_size += 2 * this->unpacked_float_size() + data_size;
  }

  // repeated double unpacked_double = 101 [packed = false];
  {
    int data_size = 0;
    data_size = 8 * this->unpacked_double_size();
    total_size += 2 * this->unpacked_double_size() + data_size;
  }

  // repeated bool unpacked_bool = 102 [packed = false];
  {
    int data_size = 0;
    data_size = 1 * this->unpacked_bool_size();
    total_size += 2 * this->unpacked_bool_size() + data_size;
  }

  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  {
    int data_size = 0;
    for (int i = 0; i < this->unpacked_enum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->unpacked_enum(i));
    }
    total_size += 2 * this->unpacked_enum_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestUnpackedTypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestUnpackedTypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestUnpackedTypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestUnpackedTypes::MergeFrom(const TestUnpackedTypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  unpacked_int32_.MergeFrom(from.unpacked_int32_);
  unpacked_int64_.MergeFrom(from.unpacked_int64_);
  unpacked_uint32_.MergeFrom(from.unpacked_uint32_);
  unpacked_uint64_.MergeFrom(from.unpacked_uint64_);
  unpacked_sint32_.MergeFrom(from.unpacked_sint32_);
  unpacked_sint64_.MergeFrom(from.unpacked_sint64_);
  unpacked_fixed32_.MergeFrom(from.unpacked_fixed32_);
  unpacked_fixed64_.MergeFrom(from.unpacked_fixed64_);
  unpacked_sfixed32_.MergeFrom(from.unpacked_sfixed32_);
  unpacked_sfixed64_.MergeFrom(from.unpacked_sfixed64_);
  unpacked_float_.MergeFrom(from.unpacked_float_);
  unpacked_double_.MergeFrom(from.unpacked_double_);
  unpacked_bool_.MergeFrom(from.unpacked_bool_);
  unpacked_enum_.MergeFrom(from.unpacked_enum_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestUnpackedTypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestUnpackedTypes::CopyFrom(const TestUnpackedTypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestUnpackedTypes::IsInitialized() const {

  return true;
}

void TestUnpackedTypes::Swap(TestUnpackedTypes* other) {
  if (other != this) {
    unpacked_int32_.Swap(&other->unpacked_int32_);
    unpacked_int64_.Swap(&other->unpacked_int64_);
    unpacked_uint32_.Swap(&other->unpacked_uint32_);
    unpacked_uint64_.Swap(&other->unpacked_uint64_);
    unpacked_sint32_.Swap(&other->unpacked_sint32_);
    unpacked_sint64_.Swap(&other->unpacked_sint64_);
    unpacked_fixed32_.Swap(&other->unpacked_fixed32_);
    unpacked_fixed64_.Swap(&other->unpacked_fixed64_);
    unpacked_sfixed32_.Swap(&other->unpacked_sfixed32_);
    unpacked_sfixed64_.Swap(&other->unpacked_sfixed64_);
    unpacked_float_.Swap(&other->unpacked_float_);
    unpacked_double_.Swap(&other->unpacked_double_);
    unpacked_bool_.Swap(&other->unpacked_bool_);
    unpacked_enum_.Swap(&other->unpacked_enum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestUnpackedTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestUnpackedTypes_descriptor_;
  metadata.reflection = TestUnpackedTypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TestPackedExtensions::TestPackedExtensions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestPackedExtensions)
}

void TestPackedExtensions::InitAsDefaultInstance() {
}

TestPackedExtensions::TestPackedExtensions(const TestPackedExtensions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedExtensions)
}

void TestPackedExtensions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestPackedExtensions::~TestPackedExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedExtensions)
  SharedDtor();
}

void TestPackedExtensions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestPackedExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestPackedExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestPackedExtensions_descriptor_;
}

const TestPackedExtensions& TestPackedExtensions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestPackedExtensions* TestPackedExtensions::default_instance_ = NULL;

TestPackedExtensions* TestPackedExtensions::New() const {
  return new TestPackedExtensions;
}

void TestPackedExtensions::Clear() {
  _extensions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestPackedExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestPackedExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, default_instance_,
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestPackedExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestPackedExtensions)
  return false;
#undef DO_
}

void TestPackedExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestPackedExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestPackedExtensions)
}

::google::protobuf::uint8* TestPackedExtensions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedExtensions)
  return target;
}

int TestPackedExtensions::ByteSize() const {
  int total_size = 0;

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPackedExtensions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestPackedExtensions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestPackedExtensions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestPackedExtensions::MergeFrom(const TestPackedExtensions& from) {
  GOOGLE_CHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestPackedExtensions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestPackedExtensions::CopyFrom(const TestPackedExtensions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestPackedExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestPackedExtensions::Swap(TestPackedExtensions* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestPackedExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestPackedExtensions_descriptor_;
  metadata.reflection = TestPackedExtensions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TestUnpackedExtensions::TestUnpackedExtensions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestUnpackedExtensions)
}

void TestUnpackedExtensions::InitAsDefaultInstance() {
}

TestUnpackedExtensions::TestUnpackedExtensions(const TestUnpackedExtensions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestUnpackedExtensions)
}

void TestUnpackedExtensions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestUnpackedExtensions::~TestUnpackedExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestUnpackedExtensions)
  SharedDtor();
}

void TestUnpackedExtensions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestUnpackedExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestUnpackedExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestUnpackedExtensions_descriptor_;
}

const TestUnpackedExtensions& TestUnpackedExtensions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestUnpackedExtensions* TestUnpackedExtensions::default_instance_ = NULL;

TestUnpackedExtensions* TestUnpackedExtensions::New() const {
  return new TestUnpackedExtensions;
}

void TestUnpackedExtensions::Clear() {
  _extensions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestUnpackedExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestUnpackedExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    if ((8u <= tag)) {
      DO_(_extensions_.ParseField(tag, input, default_instance_,
                                  mutable_unknown_fields()));
      continue;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestUnpackedExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestUnpackedExtensions)
  return false;
#undef DO_
}

void TestUnpackedExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestUnpackedExtensions)
  // Extension range [1, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestUnpackedExtensions)
}

::google::protobuf::uint8* TestUnpackedExtensions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestUnpackedExtensions)
  // Extension range [1, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestUnpackedExtensions)
  return target;
}

int TestUnpackedExtensions::ByteSize() const {
  int total_size = 0;

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestUnpackedExtensions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestUnpackedExtensions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestUnpackedExtensions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestUnpackedExtensions::MergeFrom(const TestUnpackedExtensions& from) {
  GOOGLE_CHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestUnpackedExtensions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestUnpackedExtensions::CopyFrom(const TestUnpackedExtensions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestUnpackedExtensions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestUnpackedExtensions::Swap(TestUnpackedExtensions* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestUnpackedExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestUnpackedExtensions_descriptor_;
  metadata.reflection = TestUnpackedExtensions_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* TestDynamicExtensions_DynamicEnumType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDynamicExtensions_DynamicEnumType_descriptor_;
}
bool TestDynamicExtensions_DynamicEnumType_IsValid(int value) {
  switch(value) {
    case 2200:
    case 2201:
    case 2202:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_FOO;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_BAR;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_BAZ;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DynamicEnumType_MIN;
const TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DynamicEnumType_MAX;
const int TestDynamicExtensions::DynamicEnumType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TestDynamicExtensions_DynamicMessageType::kDynamicFieldFieldNumber;
#endif  // !_MSC_VER

TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}

void TestDynamicExtensions_DynamicMessageType::InitAsDefaultInstance() {
}

TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType(const TestDynamicExtensions_DynamicMessageType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}

void TestDynamicExtensions_DynamicMessageType::SharedCtor() {
  _cached_size_ = 0;
  dynamic_field_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestDynamicExtensions_DynamicMessageType::~TestDynamicExtensions_DynamicMessageType() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  SharedDtor();
}

void TestDynamicExtensions_DynamicMessageType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestDynamicExtensions_DynamicMessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDynamicExtensions_DynamicMessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDynamicExtensions_DynamicMessageType_descriptor_;
}

const TestDynamicExtensions_DynamicMessageType& TestDynamicExtensions_DynamicMessageType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions_DynamicMessageType::default_instance_ = NULL;

TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions_DynamicMessageType::New() const {
  return new TestDynamicExtensions_DynamicMessageType;
}

void TestDynamicExtensions_DynamicMessageType::Clear() {
  dynamic_field_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestDynamicExtensions_DynamicMessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16800);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dynamic_field = 2100;
      case 2100: {
        if (tag == 16800) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dynamic_field_)));
          set_has_dynamic_field();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  return false;
#undef DO_
}

void TestDynamicExtensions_DynamicMessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  // optional int32 dynamic_field = 2100;
  if (has_dynamic_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2100, this->dynamic_field(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}

::google::protobuf::uint8* TestDynamicExtensions_DynamicMessageType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  // optional int32 dynamic_field = 2100;
  if (has_dynamic_field()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2100, this->dynamic_field(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  return target;
}

int TestDynamicExtensions_DynamicMessageType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 dynamic_field = 2100;
    if (has_dynamic_field()) {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dynamic_field());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDynamicExtensions_DynamicMessageType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestDynamicExtensions_DynamicMessageType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestDynamicExtensions_DynamicMessageType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestDynamicExtensions_DynamicMessageType::MergeFrom(const TestDynamicExtensions_DynamicMessageType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dynamic_field()) {
      set_dynamic_field(from.dynamic_field());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestDynamicExtensions_DynamicMessageType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDynamicExtensions_DynamicMessageType::CopyFrom(const TestDynamicExtensions_DynamicMessageType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestDynamicExtensions_DynamicMessageType::IsInitialized() const {

  return true;
}

void TestDynamicExtensions_DynamicMessageType::Swap(TestDynamicExtensions_DynamicMessageType* other) {
  if (other != this) {
    std::swap(dynamic_field_, other->dynamic_field_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestDynamicExtensions_DynamicMessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDynamicExtensions_DynamicMessageType_descriptor_;
  metadata.reflection = TestDynamicExtensions_DynamicMessageType_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestDynamicExtensions::kScalarExtensionFieldNumber;
const int TestDynamicExtensions::kEnumExtensionFieldNumber;
const int TestDynamicExtensions::kDynamicEnumExtensionFieldNumber;
const int TestDynamicExtensions::kMessageExtensionFieldNumber;
const int TestDynamicExtensions::kDynamicMessageExtensionFieldNumber;
const int TestDynamicExtensions::kRepeatedExtensionFieldNumber;
const int TestDynamicExtensions::kPackedExtensionFieldNumber;
#endif  // !_MSC_VER

TestDynamicExtensions::TestDynamicExtensions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestDynamicExtensions)
}

void TestDynamicExtensions::InitAsDefaultInstance() {
  message_extension_ = const_cast< ::protobuf_unittest::ForeignMessage*>(&::protobuf_unittest::ForeignMessage::default_instance());
  dynamic_message_extension_ = const_cast< ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType*>(&::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::default_instance());
}

TestDynamicExtensions::TestDynamicExtensions(const TestDynamicExtensions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDynamicExtensions)
}

void TestDynamicExtensions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scalar_extension_ = 0u;
  enum_extension_ = 4;
  dynamic_enum_extension_ = 2200;
  message_extension_ = NULL;
  dynamic_message_extension_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestDynamicExtensions::~TestDynamicExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDynamicExtensions)
  SharedDtor();
}

void TestDynamicExtensions::SharedDtor() {
  if (this != default_instance_) {
    delete message_extension_;
    delete dynamic_message_extension_;
  }
}

void TestDynamicExtensions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestDynamicExtensions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestDynamicExtensions_descriptor_;
}

const TestDynamicExtensions& TestDynamicExtensions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestDynamicExtensions* TestDynamicExtensions::default_instance_ = NULL;

TestDynamicExtensions* TestDynamicExtensions::New() const {
  return new TestDynamicExtensions;
}

void TestDynamicExtensions::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    scalar_extension_ = 0u;
    enum_extension_ = 4;
    dynamic_enum_extension_ = 2200;
    if (has_message_extension()) {
      if (message_extension_ != NULL) message_extension_->::protobuf_unittest::ForeignMessage::Clear();
    }
    if (has_dynamic_message_extension()) {
      if (dynamic_message_extension_ != NULL) dynamic_message_extension_->::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::Clear();
    }
  }
  repeated_extension_.Clear();
  packed_extension_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestDynamicExtensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestDynamicExtensions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 scalar_extension = 2000;
      case 2000: {
        if (tag == 16005) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &scalar_extension_)));
          set_has_scalar_extension();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16008)) goto parse_enum_extension;
        break;
      }

      // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
      case 2001: {
        if (tag == 16008) {
         parse_enum_extension:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::ForeignEnum_IsValid(value)) {
            set_enum_extension(static_cast< ::protobuf_unittest::ForeignEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2001, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16016)) goto parse_dynamic_enum_extension;
        break;
      }

      // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
      case 2002: {
        if (tag == 16016) {
         parse_dynamic_enum_extension:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_unittest::TestDynamicExtensions_DynamicEnumType_IsValid(value)) {
            set_dynamic_enum_extension(static_cast< ::protobuf_unittest::TestDynamicExtensions_DynamicEnumType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2002, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16026)) goto parse_message_extension;
        break;
      }

      // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
      case 2003: {
        if (tag == 16026) {
         parse_message_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message_extension()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16034)) goto parse_dynamic_message_extension;
        break;
      }

      // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
      case 2004: {
        if (tag == 16034) {
         parse_dynamic_message_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_message_extension()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16042)) goto parse_repeated_extension;
        break;
      }

      // repeated string repeated_extension = 2005;
      case 2005: {
        if (tag == 16042) {
         parse_repeated_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_extension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_extension(this->repeated_extension_size() - 1).data(),
            this->repeated_extension(this->repeated_extension_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeated_extension");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16042)) goto parse_repeated_extension;
        if (input->ExpectTag(16050)) goto parse_packed_extension;
        break;
      }

      // repeated sint32 packed_extension = 2006 [packed = true];
      case 2006: {
        if (tag == 16050) {
         parse_packed_extension:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_packed_extension())));
        } else if (tag == 16048) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 16050, input, this->mutable_packed_extension())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestDynamicExtensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestDynamicExtensions)
  return false;
#undef DO_
}

void TestDynamicExtensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestDynamicExtensions)
  // optional fixed32 scalar_extension = 2000;
  if (has_scalar_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2000, this->scalar_extension(), output);
  }

  // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
  if (has_enum_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2001, this->enum_extension(), output);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
  if (has_dynamic_enum_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2002, this->dynamic_enum_extension(), output);
  }

  // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
  if (has_message_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2003, this->message_extension(), output);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
  if (has_dynamic_message_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2004, this->dynamic_message_extension(), output);
  }

  // repeated string repeated_extension = 2005;
  for (int i = 0; i < this->repeated_extension_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeated_extension(i).data(), this->repeated_extension(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeated_extension");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2005, this->repeated_extension(i), output);
  }

  // repeated sint32 packed_extension = 2006 [packed = true];
  if (this->packed_extension_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2006, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_extension_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_extension_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->packed_extension(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestDynamicExtensions)
}

::google::protobuf::uint8* TestDynamicExtensions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDynamicExtensions)
  // optional fixed32 scalar_extension = 2000;
  if (has_scalar_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2000, this->scalar_extension(), target);
  }

  // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
  if (has_enum_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2001, this->enum_extension(), target);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
  if (has_dynamic_enum_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2002, this->dynamic_enum_extension(), target);
  }

  // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
  if (has_message_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2003, this->message_extension(), target);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
  if (has_dynamic_message_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2004, this->dynamic_message_extension(), target);
  }

  // repeated string repeated_extension = 2005;
  for (int i = 0; i < this->repeated_extension_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_extension(i).data(), this->repeated_extension(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeated_extension");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2005, this->repeated_extension(i), target);
  }

  // repeated sint32 packed_extension = 2006 [packed = true];
  if (this->packed_extension_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2006,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_extension_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_extension_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->packed_extension(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDynamicExtensions)
  return target;
}

int TestDynamicExtensions::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed32 scalar_extension = 2000;
    if (has_scalar_extension()) {
      total_size += 2 + 4;
    }

    // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
    if (has_enum_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_extension());
    }

    // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
    if (has_dynamic_enum_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dynamic_enum_extension());
    }

    // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
    if (has_message_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message_extension());
    }

    // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
    if (has_dynamic_message_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dynamic_message_extension());
    }

  }
  // repeated string repeated_extension = 2005;
  total_size += 2 * this->repeated_extension_size();
  for (int i = 0; i < this->repeated_extension_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_extension(i));
  }

  // repeated sint32 packed_extension = 2006 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_extension_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->packed_extension(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_extension_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestDynamicExtensions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestDynamicExtensions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestDynamicExtensions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestDynamicExtensions::MergeFrom(const TestDynamicExtensions& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeated_extension_.MergeFrom(from.repeated_extension_);
  packed_extension_.MergeFrom(from.packed_extension_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scalar_extension()) {
      set_scalar_extension(from.scalar_extension());
    }
    if (from.has_enum_extension()) {
      set_enum_extension(from.enum_extension());
    }
    if (from.has_dynamic_enum_extension()) {
      set_dynamic_enum_extension(from.dynamic_enum_extension());
    }
    if (from.has_message_extension()) {
      mutable_message_extension()->::protobuf_unittest::ForeignMessage::MergeFrom(from.message_extension());
    }
    if (from.has_dynamic_message_extension()) {
      mutable_dynamic_message_extension()->::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::MergeFrom(from.dynamic_message_extension());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestDynamicExtensions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestDynamicExtensions::CopyFrom(const TestDynamicExtensions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestDynamicExtensions::IsInitialized() const {

  return true;
}

void TestDynamicExtensions::Swap(TestDynamicExtensions* other) {
  if (other != this) {
    std::swap(scalar_extension_, other->scalar_extension_);
    std::swap(enum_extension_, other->enum_extension_);
    std::swap(dynamic_enum_extension_, other->dynamic_enum_extension_);
    std::swap(message_extension_, other->message_extension_);
    std::swap(dynamic_message_extension_, other->dynamic_message_extension_);
    repeated_extension_.Swap(&other->repeated_extension_);
    packed_extension_.Swap(&other->packed_extension_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestDynamicExtensions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestDynamicExtensions_descriptor_;
  metadata.reflection = TestDynamicExtensions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestRepeatedScalarDifferentTagSizes::kRepeatedFixed32FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedInt32FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedFixed64FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedInt64FieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedFloatFieldNumber;
const int TestRepeatedScalarDifferentTagSizes::kRepeatedUint64FieldNumber;
#endif  // !_MSC_VER

TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}

void TestRepeatedScalarDifferentTagSizes::InitAsDefaultInstance() {
}

TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes(const TestRepeatedScalarDifferentTagSizes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}

void TestRepeatedScalarDifferentTagSizes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestRepeatedScalarDifferentTagSizes::~TestRepeatedScalarDifferentTagSizes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  SharedDtor();
}

void TestRepeatedScalarDifferentTagSizes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestRepeatedScalarDifferentTagSizes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRepeatedScalarDifferentTagSizes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRepeatedScalarDifferentTagSizes_descriptor_;
}

const TestRepeatedScalarDifferentTagSizes& TestRepeatedScalarDifferentTagSizes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestRepeatedScalarDifferentTagSizes* TestRepeatedScalarDifferentTagSizes::default_instance_ = NULL;

TestRepeatedScalarDifferentTagSizes* TestRepeatedScalarDifferentTagSizes::New() const {
  return new TestRepeatedScalarDifferentTagSizes;
}

void TestRepeatedScalarDifferentTagSizes::Clear() {
  repeated_fixed32_.Clear();
  repeated_int32_.Clear();
  repeated_fixed64_.Clear();
  repeated_int64_.Clear();
  repeated_float_.Clear();
  repeated_uint64_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestRepeatedScalarDifferentTagSizes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(2097144);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 repeated_fixed32 = 12;
      case 12: {
        if (tag == 101) {
         parse_repeated_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 101, input, this->mutable_repeated_fixed32())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repeated_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_repeated_fixed32;
        if (input->ExpectTag(104)) goto parse_repeated_int32;
        break;
      }

      // repeated int32 repeated_int32 = 13;
      case 13: {
        if (tag == 104) {
         parse_repeated_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 104, input, this->mutable_repeated_int32())));
        } else if (tag == 106) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_repeated_int32;
        if (input->ExpectTag(16369)) goto parse_repeated_fixed64;
        break;
      }

      // repeated fixed64 repeated_fixed64 = 2046;
      case 2046: {
        if (tag == 16369) {
         parse_repeated_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 16369, input, this->mutable_repeated_fixed64())));
        } else if (tag == 16370) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repeated_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16369)) goto parse_repeated_fixed64;
        if (input->ExpectTag(16376)) goto parse_repeated_int64;
        break;
      }

      // repeated int64 repeated_int64 = 2047;
      case 2047: {
        if (tag == 16376) {
         parse_repeated_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 16376, input, this->mutable_repeated_int64())));
        } else if (tag == 16378) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repeated_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16376)) goto parse_repeated_int64;
        if (input->ExpectTag(2097141)) goto parse_repeated_float;
        break;
      }

      // repeated float repeated_float = 262142;
      case 262142: {
        if (tag == 2097141) {
         parse_repeated_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 3, 2097141, input, this->mutable_repeated_float())));
        } else if (tag == 2097138) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repeated_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2097141)) goto parse_repeated_float;
        if (input->ExpectTag(2097144)) goto parse_repeated_uint64;
        break;
      }

      // repeated uint64 repeated_uint64 = 262143;
      case 262143: {
        if (tag == 2097144) {
         parse_repeated_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 3, 2097144, input, this->mutable_repeated_uint64())));
        } else if (tag == 2097146) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repeated_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2097144)) goto parse_repeated_uint64;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  return false;
#undef DO_
}

void TestRepeatedScalarDifferentTagSizes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  // repeated fixed32 repeated_fixed32 = 12;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      12, this->repeated_fixed32(i), output);
  }

  // repeated int32 repeated_int32 = 13;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      13, this->repeated_int32(i), output);
  }

  // repeated fixed64 repeated_fixed64 = 2046;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2046, this->repeated_fixed64(i), output);
  }

  // repeated int64 repeated_int64 = 2047;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2047, this->repeated_int64(i), output);
  }

  // repeated float repeated_float = 262142;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      262142, this->repeated_float(i), output);
  }

  // repeated uint64 repeated_uint64 = 262143;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      262143, this->repeated_uint64(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}

::google::protobuf::uint8* TestRepeatedScalarDifferentTagSizes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  // repeated fixed32 repeated_fixed32 = 12;
  for (int i = 0; i < this->repeated_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(12, this->repeated_fixed32(i), target);
  }

  // repeated int32 repeated_int32 = 13;
  for (int i = 0; i < this->repeated_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(13, this->repeated_int32(i), target);
  }

  // repeated fixed64 repeated_fixed64 = 2046;
  for (int i = 0; i < this->repeated_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(2046, this->repeated_fixed64(i), target);
  }

  // repeated int64 repeated_int64 = 2047;
  for (int i = 0; i < this->repeated_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2047, this->repeated_int64(i), target);
  }

  // repeated float repeated_float = 262142;
  for (int i = 0; i < this->repeated_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(262142, this->repeated_float(i), target);
  }

  // repeated uint64 repeated_uint64 = 262143;
  for (int i = 0; i < this->repeated_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(262143, this->repeated_uint64(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  return target;
}

int TestRepeatedScalarDifferentTagSizes::ByteSize() const {
  int total_size = 0;

  // repeated fixed32 repeated_fixed32 = 12;
  {
    int data_size = 0;
    data_size = 4 * this->repeated_fixed32_size();
    total_size += 1 * this->repeated_fixed32_size() + data_size;
  }

  // repeated int32 repeated_int32 = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_int32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->repeated_int32(i));
    }
    total_size += 1 * this->repeated_int32_size() + data_size;
  }

  // repeated fixed64 repeated_fixed64 = 2046;
  {
    int data_size = 0;
    data_size = 8 * this->repeated_fixed64_size();
    total_size += 2 * this->repeated_fixed64_size() + data_size;
  }

  // repeated int64 repeated_int64 = 2047;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_int64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->repeated_int64(i));
    }
    total_size += 2 * this->repeated_int64_size() + data_size;
  }

  // repeated float repeated_float = 262142;
  {
    int data_size = 0;
    data_size = 4 * this->repeated_float_size();
    total_size += 3 * this->repeated_float_size() + data_size;
  }

  // repeated uint64 repeated_uint64 = 262143;
  {
    int data_size = 0;
    for (int i = 0; i < this->repeated_uint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->repeated_uint64(i));
    }
    total_size += 3 * this->repeated_uint64_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRepeatedScalarDifferentTagSizes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestRepeatedScalarDifferentTagSizes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestRepeatedScalarDifferentTagSizes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestRepeatedScalarDifferentTagSizes::MergeFrom(const TestRepeatedScalarDifferentTagSizes& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeated_fixed32_.MergeFrom(from.repeated_fixed32_);
  repeated_int32_.MergeFrom(from.repeated_int32_);
  repeated_fixed64_.MergeFrom(from.repeated_fixed64_);
  repeated_int64_.MergeFrom(from.repeated_int64_);
  repeated_float_.MergeFrom(from.repeated_float_);
  repeated_uint64_.MergeFrom(from.repeated_uint64_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestRepeatedScalarDifferentTagSizes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRepeatedScalarDifferentTagSizes::CopyFrom(const TestRepeatedScalarDifferentTagSizes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRepeatedScalarDifferentTagSizes::IsInitialized() const {

  return true;
}

void TestRepeatedScalarDifferentTagSizes::Swap(TestRepeatedScalarDifferentTagSizes* other) {
  if (other != this) {
    repeated_fixed32_.Swap(&other->repeated_fixed32_);
    repeated_int32_.Swap(&other->repeated_int32_);
    repeated_fixed64_.Swap(&other->repeated_fixed64_);
    repeated_int64_.Swap(&other->repeated_int64_);
    repeated_float_.Swap(&other->repeated_float_);
    repeated_uint64_.Swap(&other->repeated_uint64_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestRepeatedScalarDifferentTagSizes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRepeatedScalarDifferentTagSizes_descriptor_;
  metadata.reflection = TestRepeatedScalarDifferentTagSizes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestParsingMerge_RepeatedFieldsGenerator_Group1::kField1FieldNumber;
#endif  // !_MSC_VER

TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::InitAsDefaultInstance() {
  field1_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
}

TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::SharedCtor() {
  _cached_size_ = 0;
  field1_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestParsingMerge_RepeatedFieldsGenerator_Group1::~TestParsingMerge_RepeatedFieldsGenerator_Group1() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  SharedDtor();
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::SharedDtor() {
  if (this != default_instance_) {
    delete field1_;
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_;
}

const TestParsingMerge_RepeatedFieldsGenerator_Group1& TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator_Group1::default_instance_ = NULL;

TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator_Group1::New() const {
  return new TestParsingMerge_RepeatedFieldsGenerator_Group1;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::Clear() {
  if (has_field1()) {
    if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypes::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes field1 = 11;
      case 11: {
        if (tag == 90) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  // optional .protobuf_unittest.TestAllTypes field1 = 11;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->field1(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedFieldsGenerator_Group1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  // optional .protobuf_unittest.TestAllTypes field1 = 11;
  if (has_field1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->field1(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  return target;
}

int TestParsingMerge_RepeatedFieldsGenerator_Group1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestAllTypes field1 = 11;
    if (has_field1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field1());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestParsingMerge_RepeatedFieldsGenerator_Group1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestParsingMerge_RepeatedFieldsGenerator_Group1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      mutable_field1()->::protobuf_unittest::TestAllTypes::MergeFrom(from.field1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group1::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::Swap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other) {
  if (other != this) {
    std::swap(field1_, other->field1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator_Group1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedFieldsGenerator_Group1_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedFieldsGenerator_Group1_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestParsingMerge_RepeatedFieldsGenerator_Group2::kField1FieldNumber;
#endif  // !_MSC_VER

TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::InitAsDefaultInstance() {
  field1_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
}

TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::SharedCtor() {
  _cached_size_ = 0;
  field1_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestParsingMerge_RepeatedFieldsGenerator_Group2::~TestParsingMerge_RepeatedFieldsGenerator_Group2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  SharedDtor();
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::SharedDtor() {
  if (this != default_instance_) {
    delete field1_;
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator_Group2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_;
}

const TestParsingMerge_RepeatedFieldsGenerator_Group2& TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator_Group2::default_instance_ = NULL;

TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator_Group2::New() const {
  return new TestParsingMerge_RepeatedFieldsGenerator_Group2;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::Clear() {
  if (has_field1()) {
    if (field1_ != NULL) field1_->::protobuf_unittest::TestAllTypes::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes field1 = 21;
      case 21: {
        if (tag == 170) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  // optional .protobuf_unittest.TestAllTypes field1 = 21;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->field1(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedFieldsGenerator_Group2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  // optional .protobuf_unittest.TestAllTypes field1 = 21;
  if (has_field1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->field1(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  return target;
}

int TestParsingMerge_RepeatedFieldsGenerator_Group2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestAllTypes field1 = 21;
    if (has_field1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field1());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestParsingMerge_RepeatedFieldsGenerator_Group2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestParsingMerge_RepeatedFieldsGenerator_Group2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      mutable_field1()->::protobuf_unittest::TestAllTypes::MergeFrom(from.field1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParsingMerge_RepeatedFieldsGenerator_Group2::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::Swap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other) {
  if (other != this) {
    std::swap(field1_, other->field1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator_Group2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedFieldsGenerator_Group2_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedFieldsGenerator_Group2_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestParsingMerge_RepeatedFieldsGenerator::kField1FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kField2FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kField3FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kGroup1FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kGroup2FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kExt1FieldNumber;
const int TestParsingMerge_RepeatedFieldsGenerator::kExt2FieldNumber;
#endif  // !_MSC_VER

TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}

void TestParsingMerge_RepeatedFieldsGenerator::InitAsDefaultInstance() {
}

TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator(const TestParsingMerge_RepeatedFieldsGenerator& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}

void TestParsingMerge_RepeatedFieldsGenerator::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestParsingMerge_RepeatedFieldsGenerator::~TestParsingMerge_RepeatedFieldsGenerator() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  SharedDtor();
}

void TestParsingMerge_RepeatedFieldsGenerator::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestParsingMerge_RepeatedFieldsGenerator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedFieldsGenerator::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedFieldsGenerator_descriptor_;
}

const TestParsingMerge_RepeatedFieldsGenerator& TestParsingMerge_RepeatedFieldsGenerator::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestParsingMerge_RepeatedFieldsGenerator* TestParsingMerge_RepeatedFieldsGenerator::default_instance_ = NULL;

TestParsingMerge_RepeatedFieldsGenerator* TestParsingMerge_RepeatedFieldsGenerator::New() const {
  return new TestParsingMerge_RepeatedFieldsGenerator;
}

void TestParsingMerge_RepeatedFieldsGenerator::Clear() {
  field1_.Clear();
  field2_.Clear();
  field3_.Clear();
  group1_.Clear();
  group2_.Clear();
  ext1_.Clear();
  ext2_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestParsingMerge_RepeatedFieldsGenerator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuf_unittest.TestAllTypes field1 = 1;
      case 1: {
        if (tag == 10) {
         parse_field1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_field1;
        if (input->ExpectTag(18)) goto parse_field2;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes field2 = 2;
      case 2: {
        if (tag == 18) {
         parse_field2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field2;
        if (input->ExpectTag(26)) goto parse_field3;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes field3 = 3;
      case 3: {
        if (tag == 26) {
         parse_field3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_field3;
        if (input->ExpectTag(83)) goto parse_group1;
        break;
      }

      // repeated group Group1 = 10 {
      case 10: {
        if (tag == 83) {
         parse_group1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                10, input, add_group1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(83)) goto parse_group1;
        if (input->ExpectTag(163)) goto parse_group2;
        break;
      }

      // repeated group Group2 = 20 {
      case 20: {
        if (tag == 163) {
         parse_group2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                20, input, add_group2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_group2;
        if (input->ExpectTag(8002)) goto parse_ext1;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
      case 1000: {
        if (tag == 8002) {
         parse_ext1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ext1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8002)) goto parse_ext1;
        if (input->ExpectTag(8010)) goto parse_ext2;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
      case 1001: {
        if (tag == 8010) {
         parse_ext2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ext2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8010)) goto parse_ext2;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedFieldsGenerator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  for (int i = 0; i < this->field1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field1(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  for (int i = 0; i < this->field2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->field2(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  for (int i = 0; i < this->field3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->field3(i), output);
  }

  // repeated group Group1 = 10 {
  for (int i = 0; i < this->group1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      10, this->group1(i), output);
  }

  // repeated group Group2 = 20 {
  for (int i = 0; i < this->group2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      20, this->group2(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  for (int i = 0; i < this->ext1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, this->ext1(i), output);
  }

  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  for (int i = 0; i < this->ext2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1001, this->ext2(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedFieldsGenerator::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  for (int i = 0; i < this->field1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->field1(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  for (int i = 0; i < this->field2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->field2(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  for (int i = 0; i < this->field3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->field3(i), target);
  }

  // repeated group Group1 = 10 {
  for (int i = 0; i < this->group1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        10, this->group1(i), target);
  }

  // repeated group Group2 = 20 {
  for (int i = 0; i < this->group2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        20, this->group2(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  for (int i = 0; i < this->ext1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1000, this->ext1(i), target);
  }

  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  for (int i = 0; i < this->ext2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1001, this->ext2(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  return target;
}

int TestParsingMerge_RepeatedFieldsGenerator::ByteSize() const {
  int total_size = 0;

  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  total_size += 1 * this->field1_size();
  for (int i = 0; i < this->field1_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->field1(i));
  }

  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  total_size += 1 * this->field2_size();
  for (int i = 0; i < this->field2_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->field2(i));
  }

  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  total_size += 1 * this->field3_size();
  for (int i = 0; i < this->field3_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->field3(i));
  }

  // repeated group Group1 = 10 {
  total_size += 2 * this->group1_size();
  for (int i = 0; i < this->group1_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->group1(i));
  }

  // repeated group Group2 = 20 {
  total_size += 4 * this->group2_size();
  for (int i = 0; i < this->group2_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->group2(i));
  }

  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  total_size += 2 * this->ext1_size();
  for (int i = 0; i < this->ext1_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ext1(i));
  }

  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  total_size += 2 * this->ext2_size();
  for (int i = 0; i < this->ext2_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ext2(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedFieldsGenerator::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestParsingMerge_RepeatedFieldsGenerator* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestParsingMerge_RepeatedFieldsGenerator*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedFieldsGenerator::MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator& from) {
  GOOGLE_CHECK_NE(&from, this);
  field1_.MergeFrom(from.field1_);
  field2_.MergeFrom(from.field2_);
  field3_.MergeFrom(from.field3_);
  group1_.MergeFrom(from.group1_);
  group2_.MergeFrom(from.group2_);
  ext1_.MergeFrom(from.ext1_);
  ext2_.MergeFrom(from.ext2_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestParsingMerge_RepeatedFieldsGenerator::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedFieldsGenerator::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParsingMerge_RepeatedFieldsGenerator::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator::Swap(TestParsingMerge_RepeatedFieldsGenerator* other) {
  if (other != this) {
    field1_.Swap(&other->field1_);
    field2_.Swap(&other->field2_);
    field3_.Swap(&other->field3_);
    group1_.Swap(&other->group1_);
    group2_.Swap(&other->group2_);
    ext1_.Swap(&other->ext1_);
    ext2_.Swap(&other->ext2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedFieldsGenerator_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedFieldsGenerator_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestParsingMerge_OptionalGroup::kOptionalGroupAllTypesFieldNumber;
#endif  // !_MSC_VER

TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
}

void TestParsingMerge_OptionalGroup::InitAsDefaultInstance() {
  optional_group_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
}

TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup(const TestParsingMerge_OptionalGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
}

void TestParsingMerge_OptionalGroup::SharedCtor() {
  _cached_size_ = 0;
  optional_group_all_types_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestParsingMerge_OptionalGroup::~TestParsingMerge_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
  SharedDtor();
}

void TestParsingMerge_OptionalGroup::SharedDtor() {
  if (this != default_instance_) {
    delete optional_group_all_types_;
  }
}

void TestParsingMerge_OptionalGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_OptionalGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_OptionalGroup_descriptor_;
}

const TestParsingMerge_OptionalGroup& TestParsingMerge_OptionalGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestParsingMerge_OptionalGroup* TestParsingMerge_OptionalGroup::default_instance_ = NULL;

TestParsingMerge_OptionalGroup* TestParsingMerge_OptionalGroup::New() const {
  return new TestParsingMerge_OptionalGroup;
}

void TestParsingMerge_OptionalGroup::Clear() {
  if (has_optional_group_all_types()) {
    if (optional_group_all_types_ != NULL) optional_group_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestParsingMerge_OptionalGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
      case 11: {
        if (tag == 90) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_group_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.OptionalGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.OptionalGroup)
  return false;
#undef DO_
}

void TestParsingMerge_OptionalGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
  if (has_optional_group_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->optional_group_all_types(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.OptionalGroup)
}

::google::protobuf::uint8* TestParsingMerge_OptionalGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
  if (has_optional_group_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->optional_group_all_types(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.OptionalGroup)
  return target;
}

int TestParsingMerge_OptionalGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
    if (has_optional_group_all_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_group_all_types());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_OptionalGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestParsingMerge_OptionalGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestParsingMerge_OptionalGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestParsingMerge_OptionalGroup::MergeFrom(const TestParsingMerge_OptionalGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional_group_all_types()) {
      mutable_optional_group_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.optional_group_all_types());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestParsingMerge_OptionalGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_OptionalGroup::CopyFrom(const TestParsingMerge_OptionalGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParsingMerge_OptionalGroup::IsInitialized() const {

  return true;
}

void TestParsingMerge_OptionalGroup::Swap(TestParsingMerge_OptionalGroup* other) {
  if (other != this) {
    std::swap(optional_group_all_types_, other->optional_group_all_types_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestParsingMerge_OptionalGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_OptionalGroup_descriptor_;
  metadata.reflection = TestParsingMerge_OptionalGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestParsingMerge_RepeatedGroup::kRepeatedGroupAllTypesFieldNumber;
#endif  // !_MSC_VER

TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}

void TestParsingMerge_RepeatedGroup::InitAsDefaultInstance() {
  repeated_group_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
}

TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup(const TestParsingMerge_RepeatedGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}

void TestParsingMerge_RepeatedGroup::SharedCtor() {
  _cached_size_ = 0;
  repeated_group_all_types_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestParsingMerge_RepeatedGroup::~TestParsingMerge_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  SharedDtor();
}

void TestParsingMerge_RepeatedGroup::SharedDtor() {
  if (this != default_instance_) {
    delete repeated_group_all_types_;
  }
}

void TestParsingMerge_RepeatedGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge_RepeatedGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_RepeatedGroup_descriptor_;
}

const TestParsingMerge_RepeatedGroup& TestParsingMerge_RepeatedGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestParsingMerge_RepeatedGroup* TestParsingMerge_RepeatedGroup::default_instance_ = NULL;

TestParsingMerge_RepeatedGroup* TestParsingMerge_RepeatedGroup::New() const {
  return new TestParsingMerge_RepeatedGroup;
}

void TestParsingMerge_RepeatedGroup::Clear() {
  if (has_repeated_group_all_types()) {
    if (repeated_group_all_types_ != NULL) repeated_group_all_types_->::protobuf_unittest::TestAllTypes::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestParsingMerge_RepeatedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
      case 21: {
        if (tag == 170) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_repeated_group_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  return false;
#undef DO_
}

void TestParsingMerge_RepeatedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
  if (has_repeated_group_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->repeated_group_all_types(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}

::google::protobuf::uint8* TestParsingMerge_RepeatedGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
  if (has_repeated_group_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->repeated_group_all_types(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  return target;
}

int TestParsingMerge_RepeatedGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
    if (has_repeated_group_all_types()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repeated_group_all_types());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge_RepeatedGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestParsingMerge_RepeatedGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestParsingMerge_RepeatedGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestParsingMerge_RepeatedGroup::MergeFrom(const TestParsingMerge_RepeatedGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_repeated_group_all_types()) {
      mutable_repeated_group_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.repeated_group_all_types());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestParsingMerge_RepeatedGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge_RepeatedGroup::CopyFrom(const TestParsingMerge_RepeatedGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParsingMerge_RepeatedGroup::IsInitialized() const {

  return true;
}

void TestParsingMerge_RepeatedGroup::Swap(TestParsingMerge_RepeatedGroup* other) {
  if (other != this) {
    std::swap(repeated_group_all_types_, other->repeated_group_all_types_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestParsingMerge_RepeatedGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_RepeatedGroup_descriptor_;
  metadata.reflection = TestParsingMerge_RepeatedGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestParsingMerge::kRequiredAllTypesFieldNumber;
const int TestParsingMerge::kOptionalAllTypesFieldNumber;
const int TestParsingMerge::kRepeatedAllTypesFieldNumber;
const int TestParsingMerge::kOptionalgroupFieldNumber;
const int TestParsingMerge::kRepeatedgroupFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int TestParsingMerge::kOptionalExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMerge,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes >, 11, false >
  TestParsingMerge::optional_ext(kOptionalExtFieldNumber, ::protobuf_unittest::TestAllTypes::default_instance());
#ifndef _MSC_VER
const int TestParsingMerge::kRepeatedExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMerge,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes >, 11, false >
  TestParsingMerge::repeated_ext(kRepeatedExtFieldNumber, ::protobuf_unittest::TestAllTypes::default_instance());
TestParsingMerge::TestParsingMerge()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestParsingMerge)
}

void TestParsingMerge::InitAsDefaultInstance() {
  required_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
  optional_all_types_ = const_cast< ::protobuf_unittest::TestAllTypes*>(&::protobuf_unittest::TestAllTypes::default_instance());
  optionalgroup_ = const_cast< ::protobuf_unittest::TestParsingMerge_OptionalGroup*>(&::protobuf_unittest::TestParsingMerge_OptionalGroup::default_instance());
}

TestParsingMerge::TestParsingMerge(const TestParsingMerge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge)
}

void TestParsingMerge::SharedCtor() {
  _cached_size_ = 0;
  required_all_types_ = NULL;
  optional_all_types_ = NULL;
  optionalgroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestParsingMerge::~TestParsingMerge() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge)
  SharedDtor();
}

void TestParsingMerge::SharedDtor() {
  if (this != default_instance_) {
    delete required_all_types_;
    delete optional_all_types_;
    delete optionalgroup_;
  }
}

void TestParsingMerge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParsingMerge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParsingMerge_descriptor_;
}

const TestParsingMerge& TestParsingMerge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestParsingMerge* TestParsingMerge::default_instance_ = NULL;

TestParsingMerge* TestParsingMerge::New() const {
  return new TestParsingMerge;
}

void TestParsingMerge::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 11) {
    if (has_required_all_types()) {
      if (required_all_types_ != NULL) required_all_types_->::protobuf_unittest::TestAllTypes::Clear();
    }
    if (has_optional_all_types()) {
      if (optional_all_types_ != NULL) optional_all_types_->::protobuf_unittest::TestAllTypes::Clear();
    }
    if (has_optionalgroup()) {
      if (optionalgroup_ != NULL) optionalgroup_->::protobuf_unittest::TestParsingMerge_OptionalGroup::Clear();
    }
  }
  repeated_all_types_.Clear();
  repeatedgroup_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestParsingMerge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestParsingMerge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf_unittest.TestAllTypes required_all_types = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_required_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_optional_all_types;
        break;
      }

      // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
      case 2: {
        if (tag == 18) {
         parse_optional_all_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_repeated_all_types;
        break;
      }

      // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
      case 3: {
        if (tag == 26) {
         parse_repeated_all_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeated_all_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_repeated_all_types;
        if (input->ExpectTag(83)) goto parse_optionalgroup;
        break;
      }

      // optional group OptionalGroup = 10 {
      case 10: {
        if (tag == 83) {
         parse_optionalgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                10, input, mutable_optionalgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_repeatedgroup;
        break;
      }

      // repeated group RepeatedGroup = 20 {
      case 20: {
        if (tag == 163) {
         parse_repeatedgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                20, input, add_repeatedgroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_repeatedgroup;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestParsingMerge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestParsingMerge)
  return false;
#undef DO_
}

void TestParsingMerge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestParsingMerge)
  // required .protobuf_unittest.TestAllTypes required_all_types = 1;
  if (has_required_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->required_all_types(), output);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
  if (has_optional_all_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->optional_all_types(), output);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  for (int i = 0; i < this->repeated_all_types_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->repeated_all_types(i), output);
  }

  // optional group OptionalGroup = 10 {
  if (has_optionalgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      10, this->optionalgroup(), output);
  }

  // repeated group RepeatedGroup = 20 {
  for (int i = 0; i < this->repeatedgroup_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      20, this->repeatedgroup(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestParsingMerge)
}

::google::protobuf::uint8* TestParsingMerge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge)
  // required .protobuf_unittest.TestAllTypes required_all_types = 1;
  if (has_required_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->required_all_types(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
  if (has_optional_all_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->optional_all_types(), target);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  for (int i = 0; i < this->repeated_all_types_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->repeated_all_types(i), target);
  }

  // optional group OptionalGroup = 10 {
  if (has_optionalgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        10, this->optionalgroup(), target);
  }

  // repeated group RepeatedGroup = 20 {
  for (int i = 0; i < this->repeatedgroup_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        20, this->repeatedgroup(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge)
  return target;
}

int TestParsingMerge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf_unittest.TestAllTypes required_all_types = 1;
    if (has_required_all_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->required_all_types());
    }

    // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
    if (has_optional_all_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_all_types());
    }

    // optional group OptionalGroup = 10 {
    if (has_optionalgroup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->optionalgroup());
    }

  }
  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  total_size += 1 * this->repeated_all_types_size();
  for (int i = 0; i < this->repeated_all_types_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeated_all_types(i));
  }

  // repeated group RepeatedGroup = 20 {
  total_size += 4 * this->repeatedgroup_size();
  for (int i = 0; i < this->repeatedgroup_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->repeatedgroup(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParsingMerge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestParsingMerge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestParsingMerge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestParsingMerge::MergeFrom(const TestParsingMerge& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeated_all_types_.MergeFrom(from.repeated_all_types_);
  repeatedgroup_.MergeFrom(from.repeatedgroup_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_required_all_types()) {
      mutable_required_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.required_all_types());
    }
    if (from.has_optional_all_types()) {
      mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(from.optional_all_types());
    }
    if (from.has_optionalgroup()) {
      mutable_optionalgroup()->::protobuf_unittest::TestParsingMerge_OptionalGroup::MergeFrom(from.optionalgroup());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestParsingMerge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParsingMerge::CopyFrom(const TestParsingMerge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParsingMerge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void TestParsingMerge::Swap(TestParsingMerge* other) {
  if (other != this) {
    std::swap(required_all_types_, other->required_all_types_);
    std::swap(optional_all_types_, other->optional_all_types_);
    repeated_all_types_.Swap(&other->repeated_all_types_);
    std::swap(optionalgroup_, other->optionalgroup_);
    repeatedgroup_.Swap(&other->repeatedgroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata TestParsingMerge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParsingMerge_descriptor_;
  metadata.reflection = TestParsingMerge_reflection_;
  return metadata;
}


// ===================================================================

::std::string* TestCommentInjectionMessage::_default_a_ = NULL;
#ifndef _MSC_VER
const int TestCommentInjectionMessage::kAFieldNumber;
#endif  // !_MSC_VER

TestCommentInjectionMessage::TestCommentInjectionMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestCommentInjectionMessage)
}

void TestCommentInjectionMessage::InitAsDefaultInstance() {
}

TestCommentInjectionMessage::TestCommentInjectionMessage(const TestCommentInjectionMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestCommentInjectionMessage)
}

void TestCommentInjectionMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = const_cast< ::std::string*>(_default_a_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestCommentInjectionMessage::~TestCommentInjectionMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestCommentInjectionMessage)
  SharedDtor();
}

void TestCommentInjectionMessage::SharedDtor() {
  if (a_ != _default_a_) {
    delete a_;
  }
  if (this != default_instance_) {
  }
}

void TestCommentInjectionMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestCommentInjectionMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestCommentInjectionMessage_descriptor_;
}

const TestCommentInjectionMessage& TestCommentInjectionMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

TestCommentInjectionMessage* TestCommentInjectionMessage::default_instance_ = NULL;

TestCommentInjectionMessage* TestCommentInjectionMessage::New() const {
  return new TestCommentInjectionMessage;
}

void TestCommentInjectionMessage::Clear() {
  if (has_a()) {
    if (a_ != _default_a_) {
      a_->assign(*_default_a_);
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestCommentInjectionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestCommentInjectionMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string a = 1 [default = "*/ <- Neither should this."];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a().data(), this->a().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "a");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestCommentInjectionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestCommentInjectionMessage)
  return false;
#undef DO_
}

void TestCommentInjectionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestCommentInjectionMessage)
  // optional string a = 1 [default = "*/ <- Neither should this."];
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestCommentInjectionMessage)
}

::google::protobuf::uint8* TestCommentInjectionMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestCommentInjectionMessage)
  // optional string a = 1 [default = "*/ <- Neither should this."];
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestCommentInjectionMessage)
  return target;
}

int TestCommentInjectionMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string a = 1 [default = "*/ <- Neither should this."];
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestCommentInjectionMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestCommentInjectionMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestCommentInjectionMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestCommentInjectionMessage::MergeFrom(const TestCommentInjectionMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestCommentInjectionMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCommentInjectionMessage::CopyFrom(const TestCommentInjectionMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestCommentInjectionMessage::IsInitialized() const {

  return true;
}

void TestCommentInjectionMessage::Swap(TestCommentInjectionMessage* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestCommentInjectionMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestCommentInjectionMessage_descriptor_;
  metadata.reflection = TestCommentInjectionMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FooRequest::FooRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooRequest)
}

void FooRequest::InitAsDefaultInstance() {
}

FooRequest::FooRequest(const FooRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooRequest)
}

void FooRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FooRequest::~FooRequest() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooRequest)
  SharedDtor();
}

void FooRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FooRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooRequest_descriptor_;
}

const FooRequest& FooRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

FooRequest* FooRequest::default_instance_ = NULL;

FooRequest* FooRequest::New() const {
  return new FooRequest;
}

void FooRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FooRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooRequest)
  return false;
#undef DO_
}

void FooRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooRequest)
}

::google::protobuf::uint8* FooRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooRequest)
  return target;
}

int FooRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FooRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FooRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FooRequest::MergeFrom(const FooRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FooRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooRequest::CopyFrom(const FooRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FooRequest::IsInitialized() const {

  return true;
}

void FooRequest::Swap(FooRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FooRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooRequest_descriptor_;
  metadata.reflection = FooRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FooResponse::FooResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooResponse)
}

void FooResponse::InitAsDefaultInstance() {
}

FooResponse::FooResponse(const FooResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooResponse)
}

void FooResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FooResponse::~FooResponse() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooResponse)
  SharedDtor();
}

void FooResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FooResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooResponse_descriptor_;
}

const FooResponse& FooResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

FooResponse* FooResponse::default_instance_ = NULL;

FooResponse* FooResponse::New() const {
  return new FooResponse;
}

void FooResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FooResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooResponse)
  return false;
#undef DO_
}

void FooResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooResponse)
}

::google::protobuf::uint8* FooResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooResponse)
  return target;
}

int FooResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FooResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FooResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FooResponse::MergeFrom(const FooResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FooResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooResponse::CopyFrom(const FooResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FooResponse::IsInitialized() const {

  return true;
}

void FooResponse::Swap(FooResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FooResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooResponse_descriptor_;
  metadata.reflection = FooResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FooClientMessage::FooClientMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooClientMessage)
}

void FooClientMessage::InitAsDefaultInstance() {
}

FooClientMessage::FooClientMessage(const FooClientMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooClientMessage)
}

void FooClientMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FooClientMessage::~FooClientMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooClientMessage)
  SharedDtor();
}

void FooClientMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FooClientMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooClientMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooClientMessage_descriptor_;
}

const FooClientMessage& FooClientMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

FooClientMessage* FooClientMessage::default_instance_ = NULL;

FooClientMessage* FooClientMessage::New() const {
  return new FooClientMessage;
}

void FooClientMessage::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FooClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooClientMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooClientMessage)
  return false;
#undef DO_
}

void FooClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooClientMessage)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooClientMessage)
}

::google::protobuf::uint8* FooClientMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooClientMessage)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooClientMessage)
  return target;
}

int FooClientMessage::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FooClientMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FooClientMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FooClientMessage::MergeFrom(const FooClientMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FooClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooClientMessage::CopyFrom(const FooClientMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FooClientMessage::IsInitialized() const {

  return true;
}

void FooClientMessage::Swap(FooClientMessage* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FooClientMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooClientMessage_descriptor_;
  metadata.reflection = FooClientMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FooServerMessage::FooServerMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.FooServerMessage)
}

void FooServerMessage::InitAsDefaultInstance() {
}

FooServerMessage::FooServerMessage(const FooServerMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooServerMessage)
}

void FooServerMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FooServerMessage::~FooServerMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.FooServerMessage)
  SharedDtor();
}

void FooServerMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FooServerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooServerMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooServerMessage_descriptor_;
}

const FooServerMessage& FooServerMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

FooServerMessage* FooServerMessage::default_instance_ = NULL;

FooServerMessage* FooServerMessage::New() const {
  return new FooServerMessage;
}

void FooServerMessage::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FooServerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.FooServerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.FooServerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.FooServerMessage)
  return false;
#undef DO_
}

void FooServerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.FooServerMessage)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.FooServerMessage)
}

::google::protobuf::uint8* FooServerMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.FooServerMessage)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.FooServerMessage)
  return target;
}

int FooServerMessage::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooServerMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FooServerMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FooServerMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FooServerMessage::MergeFrom(const FooServerMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FooServerMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooServerMessage::CopyFrom(const FooServerMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FooServerMessage::IsInitialized() const {

  return true;
}

void FooServerMessage::Swap(FooServerMessage* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FooServerMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooServerMessage_descriptor_;
  metadata.reflection = FooServerMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BarRequest::BarRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.BarRequest)
}

void BarRequest::InitAsDefaultInstance() {
}

BarRequest::BarRequest(const BarRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BarRequest)
}

void BarRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BarRequest::~BarRequest() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BarRequest)
  SharedDtor();
}

void BarRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BarRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BarRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BarRequest_descriptor_;
}

const BarRequest& BarRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

BarRequest* BarRequest::default_instance_ = NULL;

BarRequest* BarRequest::New() const {
  return new BarRequest;
}

void BarRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BarRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.BarRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.BarRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.BarRequest)
  return false;
#undef DO_
}

void BarRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.BarRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.BarRequest)
}

::google::protobuf::uint8* BarRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BarRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BarRequest)
  return target;
}

int BarRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BarRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BarRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BarRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BarRequest::MergeFrom(const BarRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BarRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarRequest::CopyFrom(const BarRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarRequest::IsInitialized() const {

  return true;
}

void BarRequest::Swap(BarRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BarRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BarRequest_descriptor_;
  metadata.reflection = BarRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BarResponse::BarResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.BarResponse)
}

void BarResponse::InitAsDefaultInstance() {
}

BarResponse::BarResponse(const BarResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BarResponse)
}

void BarResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BarResponse::~BarResponse() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BarResponse)
  SharedDtor();
}

void BarResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BarResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BarResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BarResponse_descriptor_;
}

const BarResponse& BarResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_2eproto();
  return *default_instance_;
}

BarResponse* BarResponse::default_instance_ = NULL;

BarResponse* BarResponse::New() const {
  return new BarResponse;
}

void BarResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BarResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.BarResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.BarResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.BarResponse)
  return false;
#undef DO_
}

void BarResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.BarResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.BarResponse)
}

::google::protobuf::uint8* BarResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BarResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BarResponse)
  return target;
}

int BarResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BarResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BarResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BarResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BarResponse::MergeFrom(const BarResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BarResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarResponse::CopyFrom(const BarResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarResponse::IsInitialized() const {

  return true;
}

void BarResponse::Swap(BarResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BarResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BarResponse_descriptor_;
  metadata.reflection = BarResponse_reflection_;
  return metadata;
}


// ===================================================================

TestService::~TestService() {}

const ::google::protobuf::ServiceDescriptor* TestService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* TestService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestService_descriptor_;
}

void TestService::Foo(::google::protobuf::RpcController* controller,
                         const ::protobuf_unittest::FooRequest*,
                         ::protobuf_unittest::FooResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Foo() not implemented.");
  done->Run();
}

void TestService::Bar(::google::protobuf::RpcController* controller,
                         const ::protobuf_unittest::BarRequest*,
                         ::protobuf_unittest::BarResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Bar() not implemented.");
  done->Run();
}

void TestService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), TestService_descriptor_);
  switch(method->index()) {
    case 0:
      Foo(controller,
             ::google::protobuf::down_cast<const ::protobuf_unittest::FooRequest*>(request),
             ::google::protobuf::down_cast< ::protobuf_unittest::FooResponse*>(response),
             done);
      break;
    case 1:
      Bar(controller,
             ::google::protobuf::down_cast<const ::protobuf_unittest::BarRequest*>(request),
             ::google::protobuf::down_cast< ::protobuf_unittest::BarResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TestService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::protobuf_unittest::FooRequest::default_instance();
    case 1:
      return ::protobuf_unittest::BarRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& TestService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::protobuf_unittest::FooResponse::default_instance();
    case 1:
      return ::protobuf_unittest::BarResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

TestService_Stub::TestService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TestService_Stub::TestService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TestService_Stub::~TestService_Stub() {
  if (owns_channel_) delete channel_;
}

void TestService_Stub::Foo(::google::protobuf::RpcController* controller,
                              const ::protobuf_unittest::FooRequest* request,
                              ::protobuf_unittest::FooResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void TestService_Stub::Bar(::google::protobuf::RpcController* controller,
                              const ::protobuf_unittest::BarRequest* request,
                              ::protobuf_unittest::BarResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  optional_int32_extension(kOptionalInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  optional_int64_extension(kOptionalInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  optional_uint32_extension(kOptionalUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  optional_uint64_extension(kOptionalUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  optional_sint32_extension(kOptionalSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  optional_sint64_extension(kOptionalSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  optional_fixed32_extension(kOptionalFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  optional_fixed64_extension(kOptionalFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  optional_sfixed32_extension(kOptionalSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  optional_sfixed64_extension(kOptionalSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false >
  optional_float_extension(kOptionalFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  optional_double_extension(kOptionalDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  optional_bool_extension(kOptionalBoolExtensionFieldNumber, false);
const ::std::string optional_string_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_string_extension(kOptionalStringExtensionFieldNumber, optional_string_extension_default);
const ::std::string optional_bytes_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  optional_bytes_extension(kOptionalBytesExtensionFieldNumber, optional_bytes_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::OptionalGroup_extension >, 10, false >
  optionalgroup_extension(kOptionalgroupExtensionFieldNumber, ::protobuf_unittest::OptionalGroup_extension::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  optional_nested_message_extension(kOptionalNestedMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::ForeignMessage >, 11, false >
  optional_foreign_message_extension(kOptionalForeignMessageExtensionFieldNumber, ::protobuf_unittest::ForeignMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11, false >
  optional_import_message_extension(kOptionalImportMessageExtensionFieldNumber, ::protobuf_unittest_import::ImportMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false >
  optional_nested_enum_extension(kOptionalNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(1));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  optional_foreign_enum_extension(kOptionalForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false >
  optional_import_enum_extension(kOptionalImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(7));
const ::std::string optional_string_piece_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_string_piece_extension(kOptionalStringPieceExtensionFieldNumber, optional_string_piece_extension_default);
const ::std::string optional_cord_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  optional_cord_extension(kOptionalCordExtensionFieldNumber, optional_cord_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::PublicImportMessage >, 11, false >
  optional_public_import_message_extension(kOptionalPublicImportMessageExtensionFieldNumber, ::protobuf_unittest_import::PublicImportMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  optional_lazy_message_extension(kOptionalLazyMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  repeated_int32_extension(kRepeatedInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  repeated_int64_extension(kRepeatedInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  repeated_uint32_extension(kRepeatedUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  repeated_uint64_extension(kRepeatedUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  repeated_sint32_extension(kRepeatedSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  repeated_sint64_extension(kRepeatedSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  repeated_fixed32_extension(kRepeatedFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  repeated_fixed64_extension(kRepeatedFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  repeated_sfixed32_extension(kRepeatedSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  repeated_sfixed64_extension(kRepeatedSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false >
  repeated_float_extension(kRepeatedFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
  repeated_double_extension(kRepeatedDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false >
  repeated_bool_extension(kRepeatedBoolExtensionFieldNumber, false);
const ::std::string repeated_string_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_string_extension(kRepeatedStringExtensionFieldNumber, repeated_string_extension_default);
const ::std::string repeated_bytes_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 12, false >
  repeated_bytes_extension(kRepeatedBytesExtensionFieldNumber, repeated_bytes_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::RepeatedGroup_extension >, 10, false >
  repeatedgroup_extension(kRepeatedgroupExtensionFieldNumber, ::protobuf_unittest::RepeatedGroup_extension::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  repeated_nested_message_extension(kRepeatedNestedMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::ForeignMessage >, 11, false >
  repeated_foreign_message_extension(kRepeatedForeignMessageExtensionFieldNumber, ::protobuf_unittest::ForeignMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11, false >
  repeated_import_message_extension(kRepeatedImportMessageExtensionFieldNumber, ::protobuf_unittest_import::ImportMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false >
  repeated_nested_enum_extension(kRepeatedNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(1));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  repeated_foreign_enum_extension(kRepeatedForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false >
  repeated_import_enum_extension(kRepeatedImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(7));
const ::std::string repeated_string_piece_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_string_piece_extension(kRepeatedStringPieceExtensionFieldNumber, repeated_string_piece_extension_default);
const ::std::string repeated_cord_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  repeated_cord_extension(kRepeatedCordExtensionFieldNumber, repeated_cord_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  repeated_lazy_message_extension(kRepeatedLazyMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  default_int32_extension(kDefaultInt32ExtensionFieldNumber, 41);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  default_int64_extension(kDefaultInt64ExtensionFieldNumber, GOOGLE_LONGLONG(42));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  default_uint32_extension(kDefaultUint32ExtensionFieldNumber, 43u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  default_uint64_extension(kDefaultUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(44));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  default_sint32_extension(kDefaultSint32ExtensionFieldNumber, -45);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  default_sint64_extension(kDefaultSint64ExtensionFieldNumber, GOOGLE_LONGLONG(46));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  default_fixed32_extension(kDefaultFixed32ExtensionFieldNumber, 47u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  default_fixed64_extension(kDefaultFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(48));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  default_sfixed32_extension(kDefaultSfixed32ExtensionFieldNumber, 49);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  default_sfixed64_extension(kDefaultSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(-50));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false >
  default_float_extension(kDefaultFloatExtensionFieldNumber, 51.5f);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  default_double_extension(kDefaultDoubleExtensionFieldNumber, 52000);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  default_bool_extension(kDefaultBoolExtensionFieldNumber, true);
const ::std::string default_string_extension_default("hello");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_string_extension(kDefaultStringExtensionFieldNumber, default_string_extension_default);
const ::std::string default_bytes_extension_default("world");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  default_bytes_extension(kDefaultBytesExtensionFieldNumber, default_bytes_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false >
  default_nested_enum_extension(kDefaultNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(2));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  default_foreign_enum_extension(kDefaultForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(5));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false >
  default_import_enum_extension(kDefaultImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(8));
const ::std::string default_string_piece_extension_default("abc");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_string_piece_extension(kDefaultStringPieceExtensionFieldNumber, default_string_piece_extension_default);
const ::std::string default_cord_extension_default("123");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_cord_extension(kDefaultCordExtensionFieldNumber, default_cord_extension_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  oneof_uint32_extension(kOneofUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false >
  oneof_nested_message_extension(kOneofNestedMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance());
const ::std::string oneof_string_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  oneof_string_extension(kOneofStringExtensionFieldNumber, oneof_string_extension_default);
const ::std::string oneof_bytes_extension_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  oneof_bytes_extension(kOneofBytesExtensionFieldNumber, oneof_bytes_extension_default);
const ::std::string my_extension_string_default("");
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  my_extension_string(kMyExtensionStringFieldNumber, my_extension_string_default);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  my_extension_int(kMyExtensionIntFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, true >
  packed_int32_extension(kPackedInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, true >
  packed_int64_extension(kPackedInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, true >
  packed_uint32_extension(kPackedUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, true >
  packed_uint64_extension(kPackedUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, true >
  packed_sint32_extension(kPackedSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, true >
  packed_sint64_extension(kPackedSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, true >
  packed_fixed32_extension(kPackedFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, true >
  packed_fixed64_extension(kPackedFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, true >
  packed_sfixed32_extension(kPackedSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, true >
  packed_sfixed64_extension(kPackedSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, true >
  packed_float_extension(kPackedFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, true >
  packed_double_extension(kPackedDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, true >
  packed_bool_extension(kPackedBoolExtensionFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, true >
  packed_enum_extension(kPackedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  unpacked_int32_extension(kUnpackedInt32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  unpacked_int64_extension(kUnpackedInt64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  unpacked_uint32_extension(kUnpackedUint32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  unpacked_uint64_extension(kUnpackedUint64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 17, false >
  unpacked_sint32_extension(kUnpackedSint32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 18, false >
  unpacked_sint64_extension(kUnpackedSint64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 7, false >
  unpacked_fixed32_extension(kUnpackedFixed32ExtensionFieldNumber, 0u);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint64 >, 6, false >
  unpacked_fixed64_extension(kUnpackedFixed64ExtensionFieldNumber, GOOGLE_ULONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 15, false >
  unpacked_sfixed32_extension(kUnpackedSfixed32ExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int64 >, 16, false >
  unpacked_sfixed64_extension(kUnpackedSfixed64ExtensionFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false >
  unpacked_float_extension(kUnpackedFloatExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
  unpacked_double_extension(kUnpackedDoubleExtensionFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false >
  unpacked_bool_extension(kUnpackedBoolExtensionFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false >
  unpacked_enum_extension(kUnpackedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4));

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)
